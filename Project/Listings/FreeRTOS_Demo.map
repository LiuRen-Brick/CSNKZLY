Component: ARM Compiler 6.12 Tool: armlink [5d624300]

==============================================================================

Section Cross References

    ft32f0xx_it.o(.ARM.exidx.text.NMI_Handler) refers to ft32f0xx_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    ft32f0xx_it.o(.ARM.exidx.text.HardFault_Handler) refers to ft32f0xx_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    ft32f0xx_it.o(.text.TIM14_IRQHandler) refers to ft32f0xx_tim.o(.text.TIM_GetITStatus) for TIM_GetITStatus
    ft32f0xx_it.o(.text.TIM14_IRQHandler) refers to ft32f0xx_tim.o(.text.TIM_ClearITPendingBit) for TIM_ClearITPendingBit
    ft32f0xx_it.o(.text.TIM14_IRQHandler) refers to ft32f0xx_it.o(.bss.WorkStart_Flg) for WorkStart_Flg
    ft32f0xx_it.o(.text.TIM14_IRQHandler) refers to ft32f0xx_it.o(.bss.WorkTime) for [Anonymous Symbol]
    ft32f0xx_it.o(.text.TIM14_IRQHandler) refers to ft32f0xx_it.o(.bss.Beep_SatrtFlg) for Beep_SatrtFlg
    ft32f0xx_it.o(.ARM.exidx.text.TIM14_IRQHandler) refers to ft32f0xx_it.o(.text.TIM14_IRQHandler) for [Anonymous Symbol]
    ft32f0xx_it.o(.text.TIM17_IRQHandler) refers to ft32f0xx_tim.o(.text.TIM_GetITStatus) for TIM_GetITStatus
    ft32f0xx_it.o(.text.TIM17_IRQHandler) refers to ft32f0xx_gpio.o(.text.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    ft32f0xx_it.o(.text.TIM17_IRQHandler) refers to ft32f0xx_tim.o(.text.TIM_ClearITPendingBit) for TIM_ClearITPendingBit
    ft32f0xx_it.o(.text.TIM17_IRQHandler) refers to ft32f0xx_it.o(.bss.KEY1_Flg) for KEY1_Flg
    ft32f0xx_it.o(.text.TIM17_IRQHandler) refers to ft32f0xx_it.o(.bss.KEY1_Count) for KEY1_Count
    ft32f0xx_it.o(.text.TIM17_IRQHandler) refers to ft32f0xx_it.o(.data.UltraModule) for UltraModule
    ft32f0xx_it.o(.text.TIM17_IRQHandler) refers to ft32f0xx_it.o(.bss.Beep_SatrtFlg) for Beep_SatrtFlg
    ft32f0xx_it.o(.text.TIM17_IRQHandler) refers to ft32f0xx_it.o(.bss.TIM17_IRQHandler.Key1_Sta) for [Anonymous Symbol]
    ft32f0xx_it.o(.text.TIM17_IRQHandler) refers to ft32f0xx_it.o(.data.Motor_Level) for Motor_Level
    ft32f0xx_it.o(.text.TIM17_IRQHandler) refers to ft32f0xx_it.o(.bss.KEY2_Flg) for KEY2_Flg
    ft32f0xx_it.o(.text.TIM17_IRQHandler) refers to ft32f0xx_it.o(.bss.KEY2_Count) for KEY2_Count
    ft32f0xx_it.o(.text.TIM17_IRQHandler) refers to ft32f0xx_it.o(.data.TIM17_IRQHandler.Key2_Sta) for [Anonymous Symbol]
    ft32f0xx_it.o(.text.TIM17_IRQHandler) refers to ft32f0xx_it.o(.bss.PowerOn_Flg) for PowerOn_Flg
    ft32f0xx_it.o(.text.TIM17_IRQHandler) refers to ft32f0xx_it.o(.bss.POWER_Count) for POWER_Count
    ft32f0xx_it.o(.text.TIM17_IRQHandler) refers to ft32f0xx_it.o(.bss.WorkStart_Flg) for WorkStart_Flg
    ft32f0xx_it.o(.text.TIM17_IRQHandler) refers to app.o(.bss.Led_RedFlg) for Led_RedFlg
    ft32f0xx_it.o(.text.TIM17_IRQHandler) refers to ft32f0xx_it.o(.bss.TIM17_IRQHandler.SetFlg) for [Anonymous Symbol]
    ft32f0xx_it.o(.text.TIM17_IRQHandler) refers to main.o(.data.PowerOff_Flg) for PowerOff_Flg
    ft32f0xx_it.o(.ARM.exidx.text.TIM17_IRQHandler) refers to ft32f0xx_it.o(.text.TIM17_IRQHandler) for [Anonymous Symbol]
    ft32f0xx_it.o(.text.EXTI4_15_IRQHandler) refers to ft32f0xx_exti.o(.text.EXTI_GetITStatus) for EXTI_GetITStatus
    ft32f0xx_it.o(.text.EXTI4_15_IRQHandler) refers to ft32f0xx_gpio.o(.text.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    ft32f0xx_it.o(.text.EXTI4_15_IRQHandler) refers to ft32f0xx_exti.o(.text.EXTI_ClearITPendingBit) for EXTI_ClearITPendingBit
    ft32f0xx_it.o(.text.EXTI4_15_IRQHandler) refers to ft32f0xx_it.o(.bss.KEY2_Flg) for KEY2_Flg
    ft32f0xx_it.o(.text.EXTI4_15_IRQHandler) refers to ft32f0xx_it.o(.bss.KEY1_Flg) for KEY1_Flg
    ft32f0xx_it.o(.ARM.exidx.text.EXTI4_15_IRQHandler) refers to ft32f0xx_it.o(.text.EXTI4_15_IRQHandler) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.text.FT32_GPIOA_Init) for FT32_GPIOA_Init
    main.o(.text.main) refers to main.o(.text.FT32_GPIOB_Init) for FT32_GPIOB_Init
    main.o(.text.main) refers to main.o(.text.FT32_EXIT_Init) for FT32_EXIT_Init
    main.o(.text.main) refers to main.o(.text.ADC_DMA_Config) for ADC_DMA_Config
    main.o(.text.main) refers to main.o(.text.Tim3BaseInit) for Tim3BaseInit
    main.o(.text.main) refers to main.o(.text.Tim15BaseInit) for Tim15BaseInit
    main.o(.text.main) refers to main.o(.text.Tim16BaseInit) for Tim16BaseInit
    main.o(.text.main) refers to main.o(.text.Tim17BaseInit) for Tim17BaseInit
    main.o(.text.main) refers to main.o(.text.Tim14BaseInit) for Tim14BaseInit
    main.o(.text.main) refers to ft32f0xx_gpio.o(.text.GPIO_WriteBit) for GPIO_WriteBit
    main.o(.text.main) refers to main.o(.text.IWDG_Config) for IWDG_Config
    main.o(.text.main) refers to app.o(.text.LED_Init) for LED_Init
    main.o(.text.main) refers to dev_flash.o(.text.UltraParam_Init) for UltraParam_Init
    main.o(.text.main) refers to dev_pid.o(.text.PIDController_Init) for PIDController_Init
    main.o(.text.main) refers to app.o(.text.APP_Start) for APP_Start
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.text.main) refers to main.o(.data.PowerOff_Flg) for PowerOff_Flg
    main.o(.text.main) refers to dev_pid.o(.bss.Pid_Contronl) for Pid_Contronl
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.FT32_GPIOA_Init) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    main.o(.text.FT32_GPIOA_Init) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    main.o(.ARM.exidx.text.FT32_GPIOA_Init) refers to main.o(.text.FT32_GPIOA_Init) for [Anonymous Symbol]
    main.o(.text.FT32_GPIOB_Init) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    main.o(.text.FT32_GPIOB_Init) refers to ft32f0xx_gpio.o(.text.GPIO_WriteBit) for GPIO_WriteBit
    main.o(.text.FT32_GPIOB_Init) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    main.o(.ARM.exidx.text.FT32_GPIOB_Init) refers to main.o(.text.FT32_GPIOB_Init) for [Anonymous Symbol]
    main.o(.text.FT32_EXIT_Init) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    main.o(.text.FT32_EXIT_Init) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    main.o(.text.FT32_EXIT_Init) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    main.o(.text.FT32_EXIT_Init) refers to ft32f0xx_syscfg.o(.text.SYSCFG_EXTILineConfig) for SYSCFG_EXTILineConfig
    main.o(.text.FT32_EXIT_Init) refers to ft32f0xx_exti.o(.text.EXTI_Init) for EXTI_Init
    main.o(.text.FT32_EXIT_Init) refers to ft32f0xx_misc.o(.text.NVIC_Init) for NVIC_Init
    main.o(.ARM.exidx.text.FT32_EXIT_Init) refers to main.o(.text.FT32_EXIT_Init) for [Anonymous Symbol]
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_DeInit) for ADC_DeInit
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_StructInit) for ADC_StructInit
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_Init) for ADC_Init
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_ChannelConfig) for ADC_ChannelConfig
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_GetCalibrationFactor) for ADC_GetCalibrationFactor
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_DMARequestModeConfig) for ADC_DMARequestModeConfig
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_DMACmd) for ADC_DMACmd
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_Cmd) for ADC_Cmd
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_GetFlagStatus) for ADC_GetFlagStatus
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_dma.o(.text.DMA_DeInit) for DMA_DeInit
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_dma.o(.text.DMA_Init) for DMA_Init
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_dma.o(.text.DMA_Cmd) for DMA_Cmd
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_StartOfConversion) for ADC_StartOfConversion
    main.o(.text.ADC_DMA_Config) refers to main.o(.bss.DMA_DualConvertedValue) for DMA_DualConvertedValue
    main.o(.ARM.exidx.text.ADC_DMA_Config) refers to main.o(.text.ADC_DMA_Config) for [Anonymous Symbol]
    main.o(.text.Tim3BaseInit) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    main.o(.text.Tim3BaseInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    main.o(.text.Tim3BaseInit) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    main.o(.text.Tim3BaseInit) refers to ft32f0xx_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    main.o(.text.Tim3BaseInit) refers to ft32f0xx_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    main.o(.text.Tim3BaseInit) refers to ft32f0xx_tim.o(.text.TIM_OC1Init) for TIM_OC1Init
    main.o(.text.Tim3BaseInit) refers to ft32f0xx_tim.o(.text.TIM_Cmd) for TIM_Cmd
    main.o(.text.Tim3BaseInit) refers to ft32f0xx_tim.o(.text.TIM_CtrlPWMOutputs) for TIM_CtrlPWMOutputs
    main.o(.ARM.exidx.text.Tim3BaseInit) refers to main.o(.text.Tim3BaseInit) for [Anonymous Symbol]
    main.o(.text.Tim15BaseInit) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    main.o(.text.Tim15BaseInit) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    main.o(.text.Tim15BaseInit) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    main.o(.text.Tim15BaseInit) refers to ft32f0xx_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    main.o(.text.Tim15BaseInit) refers to ft32f0xx_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    main.o(.text.Tim15BaseInit) refers to ft32f0xx_tim.o(.text.TIM_OC1Init) for TIM_OC1Init
    main.o(.text.Tim15BaseInit) refers to ft32f0xx_tim.o(.text.TIM_Cmd) for TIM_Cmd
    main.o(.text.Tim15BaseInit) refers to ft32f0xx_tim.o(.text.TIM_CtrlPWMOutputs) for TIM_CtrlPWMOutputs
    main.o(.ARM.exidx.text.Tim15BaseInit) refers to main.o(.text.Tim15BaseInit) for [Anonymous Symbol]
    main.o(.text.Tim16BaseInit) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    main.o(.text.Tim16BaseInit) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    main.o(.text.Tim16BaseInit) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    main.o(.text.Tim16BaseInit) refers to ft32f0xx_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    main.o(.text.Tim16BaseInit) refers to ft32f0xx_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    main.o(.text.Tim16BaseInit) refers to ft32f0xx_tim.o(.text.TIM_OC1Init) for TIM_OC1Init
    main.o(.text.Tim16BaseInit) refers to ft32f0xx_tim.o(.text.TIM_Cmd) for TIM_Cmd
    main.o(.text.Tim16BaseInit) refers to ft32f0xx_tim.o(.text.TIM_CtrlPWMOutputs) for TIM_CtrlPWMOutputs
    main.o(.ARM.exidx.text.Tim16BaseInit) refers to main.o(.text.Tim16BaseInit) for [Anonymous Symbol]
    main.o(.text.Tim17BaseInit) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    main.o(.text.Tim17BaseInit) refers to ft32f0xx_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    main.o(.text.Tim17BaseInit) refers to ft32f0xx_tim.o(.text.TIM_ITConfig) for TIM_ITConfig
    main.o(.text.Tim17BaseInit) refers to ft32f0xx_misc.o(.text.NVIC_Init) for NVIC_Init
    main.o(.text.Tim17BaseInit) refers to ft32f0xx_tim.o(.text.TIM_Cmd) for TIM_Cmd
    main.o(.ARM.exidx.text.Tim17BaseInit) refers to main.o(.text.Tim17BaseInit) for [Anonymous Symbol]
    main.o(.text.Tim14BaseInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    main.o(.text.Tim14BaseInit) refers to ft32f0xx_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    main.o(.text.Tim14BaseInit) refers to ft32f0xx_tim.o(.text.TIM_ITConfig) for TIM_ITConfig
    main.o(.text.Tim14BaseInit) refers to ft32f0xx_misc.o(.text.NVIC_Init) for NVIC_Init
    main.o(.text.Tim14BaseInit) refers to ft32f0xx_tim.o(.text.TIM_Cmd) for TIM_Cmd
    main.o(.ARM.exidx.text.Tim14BaseInit) refers to main.o(.text.Tim14BaseInit) for [Anonymous Symbol]
    main.o(.text.IWDG_Config) refers to ft32f0xx_iwdg.o(.text.IWDG_WriteAccessCmd) for IWDG_WriteAccessCmd
    main.o(.text.IWDG_Config) refers to ft32f0xx_iwdg.o(.text.IWDG_SetPrescaler) for IWDG_SetPrescaler
    main.o(.text.IWDG_Config) refers to ft32f0xx_iwdg.o(.text.IWDG_SetReload) for IWDG_SetReload
    main.o(.text.IWDG_Config) refers to ft32f0xx_iwdg.o(.text.IWDG_ReloadCounter) for IWDG_ReloadCounter
    main.o(.text.IWDG_Config) refers to ft32f0xx_iwdg.o(.text.IWDG_Enable) for IWDG_Enable
    main.o(.text.IWDG_Config) refers to main.o(.data.lsi_freq) for lsi_freq
    main.o(.ARM.exidx.text.IWDG_Config) refers to main.o(.text.IWDG_Config) for [Anonymous Symbol]
    taskmanager.o(.text.SendMessage) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    taskmanager.o(.ARM.exidx.text.SendMessage) refers to taskmanager.o(.text.SendMessage) for [Anonymous Symbol]
    taskmanager.o(.text.SendShortMessageFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    taskmanager.o(.ARM.exidx.text.SendShortMessageFromISR) refers to taskmanager.o(.text.SendShortMessageFromISR) for [Anonymous Symbol]
    taskmanager.o(.text.SendMessageFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    taskmanager.o(.ARM.exidx.text.SendMessageFromISR) refers to taskmanager.o(.text.SendMessageFromISR) for [Anonymous Symbol]
    taskmanager.o(.text.vApplicationTickHook) refers to taskmanager.o(.bss.ulSystemTimeTickCount) for [Anonymous Symbol]
    taskmanager.o(.ARM.exidx.text.vApplicationTickHook) refers to taskmanager.o(.text.vApplicationTickHook) for [Anonymous Symbol]
    taskmanager.o(.ARM.exidx.text.vApplicationMallocFailedHook) refers to taskmanager.o(.text.vApplicationMallocFailedHook) for [Anonymous Symbol]
    taskmanager.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to taskmanager.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to queue.o(.text.vQueueUnregisterQueue) for vQueueUnregisterQueue
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.text.vQueueUnregisterQueue) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueUnregisterQueue) refers to queue.o(.text.vQueueUnregisterQueue) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueAddToRegistry) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueAddToRegistry) refers to queue.o(.text.vQueueAddToRegistry) for [Anonymous Symbol]
    queue.o(.text.pcQueueGetName) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.pcQueueGetName) refers to queue.o(.text.pcQueueGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to memseta.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskDelay) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskIncrementTick) refers to taskmanager.o(.text.vApplicationTickHook) for vApplicationTickHook
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to taskmanager.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.ulTaskNotifyTake) refers to tasks.o(.text.ulTaskNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskNotifyWait) refers to tasks.o(.text.xTaskNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for [Anonymous Symbol]
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for [Anonymous Symbol]
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR) refers to tasks.o(.text.vTaskNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskNotifyStateClear) refers to tasks.o(.text.xTaskNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.ulTaskNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.ulTaskNotifyValueClear) refers to tasks.o(.text.ulTaskNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.pvPortMalloc) refers to taskmanager.o(.text.vApplicationMallocFailedHook) for vApplicationMallocFailedHook
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xBlockAllocatedBit) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xBlockAllocatedBit) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xBlockAllocatedBit) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortStartFirstTask) for vPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to uidiv.o(.text) for __aeabi_uidiv
    port.o(.text.vPortSetupTimerInterrupt) refers to system_ft32f0xx.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.text.vPortStartFirstTask) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.vPortStartFirstTask) refers to port.o(.text.vPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortYield) refers to port.o(.text.vPortYield) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.ulSetInterruptMaskFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vClearInterruptMaskFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.text.SysTick_Handler) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    app.o(.text.InitTask1) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    app.o(.text.InitTask1) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    app.o(.text.InitTask1) refers to app.o(.text.HighProTask) for HighProTask
    app.o(.text.InitTask1) refers to app.o(.rodata.str1.1) for .L.str
    app.o(.text.InitTask1) refers to app.o(.text.MediumProTask) for MediumProTask
    app.o(.text.InitTask1) refers to app.o(.text.LowProTask) for LowProTask
    app.o(.text.InitTask1) refers to app.o(.bss.pInitTaskHandle) for [Anonymous Symbol]
    app.o(.ARM.exidx.text.InitTask1) refers to app.o(.text.InitTask1) for [Anonymous Symbol]
    app.o(.text.HighProTask) refers to app.o(.text.Lipus_MainFunc) for Lipus_MainFunc
    app.o(.text.HighProTask) refers to app.o(.text.Power_MainFunc) for Power_MainFunc
    app.o(.ARM.exidx.text.HighProTask) refers to app.o(.text.HighProTask) for [Anonymous Symbol]
    app.o(.text.MediumProTask) refers to ft32f0xx_iwdg.o(.text.IWDG_ReloadCounter) for IWDG_ReloadCounter
    app.o(.text.MediumProTask) refers to dev_adc.o(.text.ADC_MainFunc) for ADC_MainFunc
    app.o(.text.MediumProTask) refers to app.o(.text.Beep_MainFunc) for Beep_MainFunc
    app.o(.text.MediumProTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    app.o(.text.MediumProTask) refers to ft32f0xx_it.o(.bss.Beep_SatrtFlg) for Beep_SatrtFlg
    app.o(.ARM.exidx.text.MediumProTask) refers to app.o(.text.MediumProTask) for [Anonymous Symbol]
    app.o(.text.LowProTask) refers to app.o(.text.StandyDete) for StandyDete
    app.o(.text.LowProTask) refers to dev_flash.o(.text.UltraParam_Set) for UltraParam_Set
    app.o(.text.LowProTask) refers to app.o(.text.LED_MainFunc) for LED_MainFunc
    app.o(.text.LowProTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    app.o(.ARM.exidx.text.LowProTask) refers to app.o(.text.LowProTask) for [Anonymous Symbol]
    app.o(.text.APP_Start) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    app.o(.text.APP_Start) refers to app.o(.bss.pInitTaskHandle) for [Anonymous Symbol]
    app.o(.text.APP_Start) refers to app.o(.text.InitTask1) for InitTask1
    app.o(.text.APP_Start) refers to app.o(.rodata.str1.1) for .L.str.3
    app.o(.ARM.exidx.text.APP_Start) refers to app.o(.text.APP_Start) for [Anonymous Symbol]
    app.o(.text.LED_Init) refers to dev_gpio.o(.text.DevGpio_SetOutPut) for DevGpio_SetOutPut
    app.o(.ARM.exidx.text.LED_Init) refers to app.o(.text.LED_Init) for [Anonymous Symbol]
    app.o(.text.LED_MainFunc) refers to fcmpge.o(.text) for __aeabi_fcmpge
    app.o(.text.LED_MainFunc) refers to dev_gpio.o(.text.GPIO_ToggleBit) for GPIO_ToggleBit
    app.o(.text.LED_MainFunc) refers to dev_gpio.o(.text.DevGpio_SetOutPut) for DevGpio_SetOutPut
    app.o(.text.LED_MainFunc) refers to dev_adc.o(.bss.Battery_vol) for Battery_vol
    app.o(.text.LED_MainFunc) refers to app.o(.bss.Led_RedFlg) for Led_RedFlg
    app.o(.text.LED_MainFunc) refers to ft32f0xx_it.o(.bss.WorkStart_Flg) for WorkStart_Flg
    app.o(.text.LED_MainFunc) refers to app.o(.bss.Led_GreenFlg) for Led_GreenFlg
    app.o(.ARM.exidx.text.LED_MainFunc) refers to app.o(.text.LED_MainFunc) for [Anonymous Symbol]
    app.o(.text.Beep_MainFunc) refers to dev_pwm.o(.text.Devpwm_SetDuty) for Devpwm_SetDuty
    app.o(.text.Beep_MainFunc) refers to app.o(.bss.Beep_MainFunc.BeepSta) for [Anonymous Symbol]
    app.o(.text.Beep_MainFunc) refers to app.o(.bss.Beep_MainFunc.BeepCount) for [Anonymous Symbol]
    app.o(.text.Beep_MainFunc) refers to ft32f0xx_it.o(.bss.Beep_SatrtFlg) for Beep_SatrtFlg
    app.o(.text.Beep_MainFunc) refers to ft32f0xx_it.o(.data.Motor_Level) for Motor_Level
    app.o(.text.Beep_MainFunc) refers to ft32f0xx_it.o(.data.UltraModule) for UltraModule
    app.o(.ARM.exidx.text.Beep_MainFunc) refers to app.o(.text.Beep_MainFunc) for [Anonymous Symbol]
    app.o(.text.Motor_MainFunc) refers to app.o(.text.Motor_LevelSet) for Motor_LevelSet
    app.o(.text.Motor_MainFunc) refers to dev_pwm.o(.text.Devpwm_SetDuty) for Devpwm_SetDuty
    app.o(.text.Motor_MainFunc) refers to ft32f0xx_it.o(.data.Motor_Level) for Motor_Level
    app.o(.text.Motor_MainFunc) refers to app.o(.bss.Motor_MainFunc.motor_duty_old) for [Anonymous Symbol]
    app.o(.ARM.exidx.text.Motor_MainFunc) refers to app.o(.text.Motor_MainFunc) for [Anonymous Symbol]
    app.o(.ARM.exidx.text.Motor_LevelSet) refers to app.o(.text.Motor_LevelSet) for [Anonymous Symbol]
    app.o(.text.Lipus_MainFunc) refers to dev_gpio.o(.text.DevGpio_SetOutPut) for DevGpio_SetOutPut
    app.o(.text.Lipus_MainFunc) refers to dev_pid.o(.text.PIDController_Update) for PIDController_Update
    app.o(.text.Lipus_MainFunc) refers to ffixui.o(.text) for __aeabi_f2uiz
    app.o(.text.Lipus_MainFunc) refers to f2d.o(.text) for __aeabi_f2d
    app.o(.text.Lipus_MainFunc) refers to dcmple.o(.text) for __aeabi_dcmple
    app.o(.text.Lipus_MainFunc) refers to dev_pwm.o(.text.Devpwm_SetDuty) for Devpwm_SetDuty
    app.o(.text.Lipus_MainFunc) refers to dcmpge.o(.text) for __aeabi_dcmpge
    app.o(.text.Lipus_MainFunc) refers to ft32f0xx_it.o(.data.UltraModule) for UltraModule
    app.o(.text.Lipus_MainFunc) refers to ft32f0xx_it.o(.bss.WorkStart_Flg) for WorkStart_Flg
    app.o(.text.Lipus_MainFunc) refers to ft32f0xx_it.o(.bss.CycleTime) for CycleTime
    app.o(.text.Lipus_MainFunc) refers to dev_adc.o(.bss.Ultra_Temp) for Ultra_Temp
    app.o(.text.Lipus_MainFunc) refers to dev_pid.o(.bss.Pid_Contronl) for Pid_Contronl
    app.o(.text.Lipus_MainFunc) refers to app.o(.data.Lipus_MainFunc.CycleDuty) for [Anonymous Symbol]
    app.o(.ARM.exidx.text.Lipus_MainFunc) refers to app.o(.text.Lipus_MainFunc) for [Anonymous Symbol]
    app.o(.text.Power_MainFunc) refers to ft32f0xx_gpio.o(.text.GPIO_WriteBit) for GPIO_WriteBit
    app.o(.text.Power_MainFunc) refers to dev_gpio.o(.text.DevGpio_SetOutPut) for DevGpio_SetOutPut
    app.o(.text.Power_MainFunc) refers to dev_pwm.o(.text.Devpwm_SetDuty) for Devpwm_SetDuty
    app.o(.text.Power_MainFunc) refers to ft32f0xx_gpio.o(.text.GPIO_DeInit) for GPIO_DeInit
    app.o(.text.Power_MainFunc) refers to ft32f0xx_tim.o(.text.TIM_Cmd) for TIM_Cmd
    app.o(.text.Power_MainFunc) refers to main.o(.data.PowerOff_Flg) for PowerOff_Flg
    app.o(.ARM.exidx.text.Power_MainFunc) refers to app.o(.text.Power_MainFunc) for [Anonymous Symbol]
    app.o(.text.ProbTest_MainFunc) refers to dev_gpio.o(.text.DevGpio_ReadInPut) for DevGpio_ReadInPut
    app.o(.ARM.exidx.text.ProbTest_MainFunc) refers to app.o(.text.ProbTest_MainFunc) for [Anonymous Symbol]
    app.o(.text.StandyDete) refers to ft32f0xx_it.o(.bss.WorkStart_Flg) for WorkStart_Flg
    app.o(.text.StandyDete) refers to app.o(.bss.StandyDete.StandyCount) for [Anonymous Symbol]
    app.o(.text.StandyDete) refers to main.o(.data.PowerOff_Flg) for PowerOff_Flg
    app.o(.ARM.exidx.text.StandyDete) refers to app.o(.text.StandyDete) for [Anonymous Symbol]
    dev_ad9877.o(.text.AD9833_SetPara) refers to dev_ad9877.o(.text.AD9833_SendData) for AD9833_SendData
    dev_ad9877.o(.text.AD9833_SetPara) refers to dev_ad9877.o(.text.AD9833_SendFrequency) for AD9833_SendFrequency
    dev_ad9877.o(.text.AD9833_SetPara) refers to dev_ad9877.o(.text.AD9833_SendPhase) for AD9833_SendPhase
    dev_ad9877.o(.text.AD9833_SetPara) refers to dev_ad9877.o(.text.AD9833_SendWave) for AD9833_SendWave
    dev_ad9877.o(.ARM.exidx.text.AD9833_SetPara) refers to dev_ad9877.o(.text.AD9833_SetPara) for [Anonymous Symbol]
    dev_ad9877.o(.text.AD9833_SendData) refers to dev_ad9877.o(.text.AD9833_SCLK_Set) for AD9833_SCLK_Set
    dev_ad9877.o(.text.AD9833_SendData) refers to dev_ad9877.o(.text.AD9833_FSYNC_Set) for AD9833_FSYNC_Set
    dev_ad9877.o(.text.AD9833_SendData) refers to dev_ad9877.o(.text.AD9833_SDATA_Set) for AD9833_SDATA_Set
    dev_ad9877.o(.text.AD9833_SendData) refers to dev_ad9877.o(.text.AD9833_Delay) for AD9833_Delay
    dev_ad9877.o(.ARM.exidx.text.AD9833_SendData) refers to dev_ad9877.o(.text.AD9833_SendData) for [Anonymous Symbol]
    dev_ad9877.o(.text.AD9833_SendFrequency) refers to ddiv.o(.text) for __aeabi_ddiv
    dev_ad9877.o(.text.AD9833_SendFrequency) refers to dmul.o(.text) for __aeabi_dmul
    dev_ad9877.o(.text.AD9833_SendFrequency) refers to dfixi.o(.text) for __aeabi_d2iz
    dev_ad9877.o(.text.AD9833_SendFrequency) refers to dev_ad9877.o(.text.AD9833_SendData) for AD9833_SendData
    dev_ad9877.o(.ARM.exidx.text.AD9833_SendFrequency) refers to dev_ad9877.o(.text.AD9833_SendFrequency) for [Anonymous Symbol]
    dev_ad9877.o(.text.AD9833_SendPhase) refers to dev_ad9877.o(.text.AD9833_SendData) for AD9833_SendData
    dev_ad9877.o(.ARM.exidx.text.AD9833_SendPhase) refers to dev_ad9877.o(.text.AD9833_SendPhase) for [Anonymous Symbol]
    dev_ad9877.o(.text.AD9833_SendWave) refers to dev_ad9877.o(.text.AD9833_SendData) for AD9833_SendData
    dev_ad9877.o(.ARM.exidx.text.AD9833_SendWave) refers to dev_ad9877.o(.text.AD9833_SendWave) for [Anonymous Symbol]
    dev_ad9877.o(.text.AD9833_InitIo) refers to dev_ad9877.o(.text.AD9833_FSYNC_Set) for AD9833_FSYNC_Set
    dev_ad9877.o(.text.AD9833_InitIo) refers to dev_ad9877.o(.text.AD9833_SCLK_Set) for AD9833_SCLK_Set
    dev_ad9877.o(.text.AD9833_InitIo) refers to dev_ad9877.o(.text.AD9833_SDATA_Set) for AD9833_SDATA_Set
    dev_ad9877.o(.ARM.exidx.text.AD9833_InitIo) refers to dev_ad9877.o(.text.AD9833_InitIo) for [Anonymous Symbol]
    dev_ad9877.o(.text.AD9833_FSYNC_Set) refers to dev_gpio.o(.text.DevGpio_SetOutPut) for DevGpio_SetOutPut
    dev_ad9877.o(.ARM.exidx.text.AD9833_FSYNC_Set) refers to dev_ad9877.o(.text.AD9833_FSYNC_Set) for [Anonymous Symbol]
    dev_ad9877.o(.text.AD9833_SCLK_Set) refers to dev_gpio.o(.text.DevGpio_SetOutPut) for DevGpio_SetOutPut
    dev_ad9877.o(.ARM.exidx.text.AD9833_SCLK_Set) refers to dev_ad9877.o(.text.AD9833_SCLK_Set) for [Anonymous Symbol]
    dev_ad9877.o(.text.AD9833_SDATA_Set) refers to dev_gpio.o(.text.DevGpio_SetOutPut) for DevGpio_SetOutPut
    dev_ad9877.o(.ARM.exidx.text.AD9833_SDATA_Set) refers to dev_ad9877.o(.text.AD9833_SDATA_Set) for [Anonymous Symbol]
    dev_ad9877.o(.ARM.exidx.text.AD9833_Delay) refers to dev_ad9877.o(.text.AD9833_Delay) for [Anonymous Symbol]
    dev_adc.o(.text.look1_iflf_binlxpw) refers to fcmpgt.o(.text) for __aeabi_fcmpgt
    dev_adc.o(.text.look1_iflf_binlxpw) refers to fadd.o(.text) for __aeabi_fsub
    dev_adc.o(.text.look1_iflf_binlxpw) refers to fdiv.o(.text) for __aeabi_fdiv
    dev_adc.o(.text.look1_iflf_binlxpw) refers to fcmpge.o(.text) for __aeabi_fcmpge
    dev_adc.o(.text.look1_iflf_binlxpw) refers to fmul.o(.text) for __aeabi_fmul
    dev_adc.o(.ARM.exidx.text.look1_iflf_binlxpw) refers to dev_adc.o(.text.look1_iflf_binlxpw) for [Anonymous Symbol]
    dev_adc.o(.text.ADC_MainFunc) refers to ft32f0xx_dma.o(.text.DMA_GetFlagStatus) for DMA_GetFlagStatus
    dev_adc.o(.text.ADC_MainFunc) refers to fflti.o(.text) for __aeabi_i2f
    dev_adc.o(.text.ADC_MainFunc) refers to f2d.o(.text) for __aeabi_f2d
    dev_adc.o(.text.ADC_MainFunc) refers to dmul.o(.text) for __aeabi_dmul
    dev_adc.o(.text.ADC_MainFunc) refers to d2f.o(.text) for __aeabi_d2f
    dev_adc.o(.text.ADC_MainFunc) refers to dflti.o(.text) for __aeabi_i2d
    dev_adc.o(.text.ADC_MainFunc) refers to ddiv.o(.text) for __aeabi_ddiv
    dev_adc.o(.text.ADC_MainFunc) refers to fdiv.o(.text) for __aeabi_fdiv
    dev_adc.o(.text.ADC_MainFunc) refers to fmul.o(.text) for __aeabi_fmul
    dev_adc.o(.text.ADC_MainFunc) refers to dadd.o(.text) for __aeabi_dadd
    dev_adc.o(.text.ADC_MainFunc) refers to dev_adc.o(.text.look1_iflf_binlxpw) for look1_iflf_binlxpw
    dev_adc.o(.text.ADC_MainFunc) refers to dev_adc.o(.text.ADCSample_Filter) for ADCSample_Filter
    dev_adc.o(.text.ADC_MainFunc) refers to ft32f0xx_dma.o(.text.DMA_ClearFlag) for DMA_ClearFlag
    dev_adc.o(.text.ADC_MainFunc) refers to main.o(.bss.DMA_DualConvertedValue) for DMA_DualConvertedValue
    dev_adc.o(.text.ADC_MainFunc) refers to dev_adc.o(.bss.ADC_MainFunc.SampleCount) for [Anonymous Symbol]
    dev_adc.o(.text.ADC_MainFunc) refers to dev_adc.o(.data.SampleVol_Buff) for SampleVol_Buff
    dev_adc.o(.text.ADC_MainFunc) refers to dev_adc.o(.rodata.INP_HWTemp1_R) for INP_HWTemp1_R
    dev_adc.o(.text.ADC_MainFunc) refers to dev_adc.o(.rodata.OUT_HWTemp1_T) for OUT_HWTemp1_T
    dev_adc.o(.text.ADC_MainFunc) refers to dev_adc.o(.bss.SampleTemp_Buff) for SampleTemp_Buff
    dev_adc.o(.text.ADC_MainFunc) refers to dev_adc.o(.bss.Ultra_Temp) for Ultra_Temp
    dev_adc.o(.text.ADC_MainFunc) refers to dev_adc.o(.bss.Battery_vol) for Battery_vol
    dev_adc.o(.ARM.exidx.text.ADC_MainFunc) refers to dev_adc.o(.text.ADC_MainFunc) for [Anonymous Symbol]
    dev_adc.o(.text.ADCSample_Filter) refers to fcmple.o(.text) for __aeabi_fcmple
    dev_adc.o(.text.ADCSample_Filter) refers to fcmpge.o(.text) for __aeabi_fcmpge
    dev_adc.o(.text.ADCSample_Filter) refers to fadd.o(.text) for __aeabi_fadd
    dev_adc.o(.text.ADCSample_Filter) refers to f2d.o(.text) for __aeabi_f2d
    dev_adc.o(.text.ADCSample_Filter) refers to dflti.o(.text) for __aeabi_i2d
    dev_adc.o(.text.ADCSample_Filter) refers to ddiv.o(.text) for __aeabi_ddiv
    dev_adc.o(.text.ADCSample_Filter) refers to d2f.o(.text) for __aeabi_d2f
    dev_adc.o(.ARM.exidx.text.ADCSample_Filter) refers to dev_adc.o(.text.ADCSample_Filter) for [Anonymous Symbol]
    dev_flash.o(.text.Flash_Write) refers to ft32f0xx_flash.o(.text.FLASH_Unlock) for FLASH_Unlock
    dev_flash.o(.text.Flash_Write) refers to ft32f0xx_flash.o(.text.FLASH_ErasePage) for FLASH_ErasePage
    dev_flash.o(.text.Flash_Write) refers to ft32f0xx_flash.o(.text.FLASH_Lock) for FLASH_Lock
    dev_flash.o(.text.Flash_Write) refers to ft32f0xx_flash.o(.text.FLASH_ProgramWord) for FLASH_ProgramWord
    dev_flash.o(.ARM.exidx.text.Flash_Write) refers to dev_flash.o(.text.Flash_Write) for [Anonymous Symbol]
    dev_flash.o(.text.Flash_Read) refers to ft32f0xx_flash.o(.text.FLASH_Unlock) for FLASH_Unlock
    dev_flash.o(.text.Flash_Read) refers to ft32f0xx_flash.o(.text.FLASH_Lock) for FLASH_Lock
    dev_flash.o(.ARM.exidx.text.Flash_Read) refers to dev_flash.o(.text.Flash_Read) for [Anonymous Symbol]
    dev_flash.o(.text.UltraParam_Init) refers to dev_flash.o(.text.Flash_Read) for Flash_Read
    dev_flash.o(.text.UltraParam_Init) refers to dev_flash.o(.text.Flash_Write) for Flash_Write
    dev_flash.o(.text.UltraParam_Init) refers to dev_pwm.o(.text.Devpwm_SetDuty) for Devpwm_SetDuty
    dev_flash.o(.text.UltraParam_Init) refers to dev_ad9877.o(.text.AD9833_InitIo) for AD9833_InitIo
    dev_flash.o(.text.UltraParam_Init) refers to dfltui.o(.text) for __aeabi_ui2d
    dev_flash.o(.text.UltraParam_Init) refers to dev_ad9877.o(.text.AD9833_SetPara) for AD9833_SetPara
    dev_flash.o(.text.UltraParam_Init) refers to dev_flash.o(.bss.Data_Store) for Data_Store
    dev_flash.o(.ARM.exidx.text.UltraParam_Init) refers to dev_flash.o(.text.UltraParam_Init) for [Anonymous Symbol]
    dev_flash.o(.text.UltraParam_Set) refers to dfltui.o(.text) for __aeabi_ui2d
    dev_flash.o(.text.UltraParam_Set) refers to dev_ad9877.o(.text.AD9833_SetPara) for AD9833_SetPara
    dev_flash.o(.text.UltraParam_Set) refers to dev_flash.o(.text.Flash_Write) for Flash_Write
    dev_flash.o(.text.UltraParam_Set) refers to dev_flash.o(.bss.UltraParam_Set.SetFreq_Flg_old) for [Anonymous Symbol]
    dev_flash.o(.text.UltraParam_Set) refers to ft32f0xx_it.o(.bss.SetFreq_Flg) for SetFreq_Flg
    dev_flash.o(.text.UltraParam_Set) refers to dev_flash.o(.bss.Data_Store) for Data_Store
    dev_flash.o(.text.UltraParam_Set) refers to dev_flash.o(.bss.UltraParam_Set.Clear_Flg_old) for [Anonymous Symbol]
    dev_flash.o(.text.UltraParam_Set) refers to ft32f0xx_it.o(.bss.Clear_Flg) for Clear_Flg
    dev_flash.o(.ARM.exidx.text.UltraParam_Set) refers to dev_flash.o(.text.UltraParam_Set) for [Anonymous Symbol]
    dev_gpio.o(.text.DevGpio_SetOutPut) refers to ft32f0xx_gpio.o(.text.GPIO_WriteBit) for GPIO_WriteBit
    dev_gpio.o(.text.DevGpio_SetOutPut) refers to dev_gpio.o(.data.dev_gpio_handle) for [Anonymous Symbol]
    dev_gpio.o(.ARM.exidx.text.DevGpio_SetOutPut) refers to dev_gpio.o(.text.DevGpio_SetOutPut) for [Anonymous Symbol]
    dev_gpio.o(.text.DevGpio_ReadInPut) refers to ft32f0xx_gpio.o(.text.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    dev_gpio.o(.text.DevGpio_ReadInPut) refers to dev_gpio.o(.data.dev_gpio_handle) for [Anonymous Symbol]
    dev_gpio.o(.ARM.exidx.text.DevGpio_ReadInPut) refers to dev_gpio.o(.text.DevGpio_ReadInPut) for [Anonymous Symbol]
    dev_gpio.o(.text.GPIO_ToggleBit) refers to dev_gpio.o(.data.dev_gpio_handle) for [Anonymous Symbol]
    dev_gpio.o(.ARM.exidx.text.GPIO_ToggleBit) refers to dev_gpio.o(.text.GPIO_ToggleBit) for [Anonymous Symbol]
    dev_pid.o(.ARM.exidx.text.PIDController_Init) refers to dev_pid.o(.text.PIDController_Init) for [Anonymous Symbol]
    dev_pid.o(.text.PIDController_Update) refers to fadd.o(.text) for __aeabi_fsub
    dev_pid.o(.text.PIDController_Update) refers to fmul.o(.text) for __aeabi_fmul
    dev_pid.o(.text.PIDController_Update) refers to fcmple.o(.text) for __aeabi_fcmple
    dev_pid.o(.text.PIDController_Update) refers to fcmpge.o(.text) for __aeabi_fcmpge
    dev_pid.o(.text.PIDController_Update) refers to fdiv.o(.text) for __aeabi_fdiv
    dev_pid.o(.ARM.exidx.text.PIDController_Update) refers to dev_pid.o(.text.PIDController_Update) for [Anonymous Symbol]
    dev_pwm.o(.text.Devpwm_SetDuty) refers to dev_pwm.o(.rodata.set_pwm_duty) for [Anonymous Symbol]
    dev_pwm.o(.ARM.exidx.text.Devpwm_SetDuty) refers to dev_pwm.o(.text.Devpwm_SetDuty) for [Anonymous Symbol]
    dev_pwm.o(.text.Set_PWM1_Duty) refers to ft32f0xx_tim.o(.text.TIM_SetCompare1) for TIM_SetCompare1
    dev_pwm.o(.ARM.exidx.text.Set_PWM1_Duty) refers to dev_pwm.o(.text.Set_PWM1_Duty) for [Anonymous Symbol]
    dev_pwm.o(.text.Set_PWM2_Duty) refers to dflti.o(.text) for __aeabi_i2d
    dev_pwm.o(.text.Set_PWM2_Duty) refers to dmul.o(.text) for __aeabi_dmul
    dev_pwm.o(.text.Set_PWM2_Duty) refers to dfixui.o(.text) for __aeabi_d2uiz
    dev_pwm.o(.text.Set_PWM2_Duty) refers to ft32f0xx_tim.o(.text.TIM_SetCompare1) for TIM_SetCompare1
    dev_pwm.o(.ARM.exidx.text.Set_PWM2_Duty) refers to dev_pwm.o(.text.Set_PWM2_Duty) for [Anonymous Symbol]
    dev_pwm.o(.text.Set_PWM3_Duty) refers to dflti.o(.text) for __aeabi_i2d
    dev_pwm.o(.text.Set_PWM3_Duty) refers to dmul.o(.text) for __aeabi_dmul
    dev_pwm.o(.text.Set_PWM3_Duty) refers to dfixui.o(.text) for __aeabi_d2uiz
    dev_pwm.o(.text.Set_PWM3_Duty) refers to ft32f0xx_tim.o(.text.TIM_SetCompare1) for TIM_SetCompare1
    dev_pwm.o(.ARM.exidx.text.Set_PWM3_Duty) refers to dev_pwm.o(.text.Set_PWM3_Duty) for [Anonymous Symbol]
    dev_pwm.o(.rodata.set_pwm_duty) refers to dev_pwm.o(.text.Set_PWM1_Duty) for Set_PWM1_Duty
    dev_pwm.o(.rodata.set_pwm_duty) refers to dev_pwm.o(.text.Set_PWM2_Duty) for Set_PWM2_Duty
    dev_pwm.o(.rodata.set_pwm_duty) refers to dev_pwm.o(.text.Set_PWM3_Duty) for Set_PWM3_Duty
    ft32f0xx_adc.o(.text.ADC_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_DeInit) refers to ft32f0xx_adc.o(.text.ADC_DeInit) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_Init) refers to ft32f0xx_adc.o(.text.ADC_Init) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_StructInit) refers to ft32f0xx_adc.o(.text.ADC_StructInit) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_Cmd) refers to ft32f0xx_adc.o(.text.ADC_Cmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_ClockModeConfig) refers to ft32f0xx_adc.o(.text.ADC_ClockModeConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_JitterCmd) refers to ft32f0xx_adc.o(.text.ADC_JitterCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_AutoPowerOffCmd) refers to ft32f0xx_adc.o(.text.ADC_AutoPowerOffCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_WaitModeCmd) refers to ft32f0xx_adc.o(.text.ADC_WaitModeCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogCmd) refers to ft32f0xx_adc.o(.text.ADC_AnalogWatchdogCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogThresholdsConfig) refers to ft32f0xx_adc.o(.text.ADC_AnalogWatchdogThresholdsConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelConfig) refers to ft32f0xx_adc.o(.text.ADC_AnalogWatchdogSingleChannelConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelCmd) refers to ft32f0xx_adc.o(.text.ADC_AnalogWatchdogSingleChannelCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_TempSensorCmd) refers to ft32f0xx_adc.o(.text.ADC_TempSensorCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_VrefintCmd) refers to ft32f0xx_adc.o(.text.ADC_VrefintCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_VbatCmd) refers to ft32f0xx_adc.o(.text.ADC_VbatCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_ChannelConfig) refers to ft32f0xx_adc.o(.text.ADC_ChannelConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_ContinuousModeCmd) refers to ft32f0xx_adc.o(.text.ADC_ContinuousModeCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_DiscModeCmd) refers to ft32f0xx_adc.o(.text.ADC_DiscModeCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_OverrunModeCmd) refers to ft32f0xx_adc.o(.text.ADC_OverrunModeCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetCalibrationFactor) refers to ft32f0xx_adc.o(.text.ADC_GetCalibrationFactor) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_StopOfConversion) refers to ft32f0xx_adc.o(.text.ADC_StopOfConversion) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_StartOfConversion) refers to ft32f0xx_adc.o(.text.ADC_StartOfConversion) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetConversionValue) refers to ft32f0xx_adc.o(.text.ADC_GetConversionValue) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_DMACmd) refers to ft32f0xx_adc.o(.text.ADC_DMACmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_DMARequestModeConfig) refers to ft32f0xx_adc.o(.text.ADC_DMARequestModeConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_ITConfig) refers to ft32f0xx_adc.o(.text.ADC_ITConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetFlagStatus) refers to ft32f0xx_adc.o(.text.ADC_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_ClearFlag) refers to ft32f0xx_adc.o(.text.ADC_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetITStatus) refers to ft32f0xx_adc.o(.text.ADC_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_ClearITPendingBit) refers to ft32f0xx_adc.o(.text.ADC_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_VrefselConfig) refers to ft32f0xx_adc.o(.text.ADC_VrefselConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_VrefDecibCmd) refers to ft32f0xx_adc.o(.text.ADC_VrefDecibCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_IoshSmpCmd) refers to ft32f0xx_adc.o(.text.ADC_IoshSmpCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_IoshAmpCmd) refers to ft32f0xx_adc.o(.text.ADC_IoshAmpCmd) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_DeInit) refers to ft32f0xx_crc.o(.text.CRC_DeInit) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_ResetDR) refers to ft32f0xx_crc.o(.text.CRC_ResetDR) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_ReverseInputDataSelect) refers to ft32f0xx_crc.o(.text.CRC_ReverseInputDataSelect) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_ReverseOutputDataCmd) refers to ft32f0xx_crc.o(.text.CRC_ReverseOutputDataCmd) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_SetInitRegister) refers to ft32f0xx_crc.o(.text.CRC_SetInitRegister) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_SetPolynomial) refers to ft32f0xx_crc.o(.text.CRC_SetPolynomial) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_CalcCRC) refers to ft32f0xx_crc.o(.text.CRC_CalcCRC) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_CalcCRC16bits) refers to ft32f0xx_crc.o(.text.CRC_CalcCRC16bits) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_CalcCRC8bits) refers to ft32f0xx_crc.o(.text.CRC_CalcCRC8bits) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_CalcBlockCRC) refers to ft32f0xx_crc.o(.text.CRC_CalcBlockCRC) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_GetCRC) refers to ft32f0xx_crc.o(.text.CRC_GetCRC) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_SetIDRegister) refers to ft32f0xx_crc.o(.text.CRC_SetIDRegister) for [Anonymous Symbol]
    ft32f0xx_crc.o(.ARM.exidx.text.CRC_GetIDRegister) refers to ft32f0xx_crc.o(.text.CRC_GetIDRegister) for [Anonymous Symbol]
    ft32f0xx_crs.o(.text.CRS_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_DeInit) refers to ft32f0xx_crs.o(.text.CRS_DeInit) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_AdjustHSI48CalibrationValue) refers to ft32f0xx_crs.o(.text.CRS_AdjustHSI48CalibrationValue) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_FrequencyErrorCounterCmd) refers to ft32f0xx_crs.o(.text.CRS_FrequencyErrorCounterCmd) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_AutomaticCalibrationCmd) refers to ft32f0xx_crs.o(.text.CRS_AutomaticCalibrationCmd) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_SoftwareSynchronizationGenerate) refers to ft32f0xx_crs.o(.text.CRS_SoftwareSynchronizationGenerate) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_FrequencyErrorCounterReload) refers to ft32f0xx_crs.o(.text.CRS_FrequencyErrorCounterReload) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_FrequencyErrorLimitConfig) refers to ft32f0xx_crs.o(.text.CRS_FrequencyErrorLimitConfig) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_SynchronizationPrescalerConfig) refers to ft32f0xx_crs.o(.text.CRS_SynchronizationPrescalerConfig) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_SynchronizationSourceConfig) refers to ft32f0xx_crs.o(.text.CRS_SynchronizationSourceConfig) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_SynchronizationPolarityConfig) refers to ft32f0xx_crs.o(.text.CRS_SynchronizationPolarityConfig) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetReloadValue) refers to ft32f0xx_crs.o(.text.CRS_GetReloadValue) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetHSI48CalibrationValue) refers to ft32f0xx_crs.o(.text.CRS_GetHSI48CalibrationValue) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetFrequencyErrorValue) refers to ft32f0xx_crs.o(.text.CRS_GetFrequencyErrorValue) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetFrequencyErrorDirection) refers to ft32f0xx_crs.o(.text.CRS_GetFrequencyErrorDirection) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_ITConfig) refers to ft32f0xx_crs.o(.text.CRS_ITConfig) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetFlagStatus) refers to ft32f0xx_crs.o(.text.CRS_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_ClearFlag) refers to ft32f0xx_crs.o(.text.CRS_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetITStatus) refers to ft32f0xx_crs.o(.text.CRS_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_crs.o(.ARM.exidx.text.CRS_ClearITPendingBit) refers to ft32f0xx_crs.o(.text.CRS_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_dac.o(.ARM.exidx.text.DAC_Ref_Config) refers to ft32f0xx_dac.o(.text.DAC_Ref_Config) for [Anonymous Symbol]
    ft32f0xx_dac.o(.ARM.exidx.text.DAC_Cmd) refers to ft32f0xx_dac.o(.text.DAC_Cmd) for [Anonymous Symbol]
    ft32f0xx_dac.o(.ARM.exidx.text.DAC_SetChannel1Data) refers to ft32f0xx_dac.o(.text.DAC_SetChannel1Data) for [Anonymous Symbol]
    ft32f0xx_dac.o(.ARM.exidx.text.DAC_SetChannel2Data) refers to ft32f0xx_dac.o(.text.DAC_SetChannel2Data) for [Anonymous Symbol]
    ft32f0xx_dac.o(.ARM.exidx.text.DAC_Read_Reg) refers to ft32f0xx_dac.o(.text.DAC_Read_Reg) for [Anonymous Symbol]
    ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_GetREVID) refers to ft32f0xx_debug.o(.text.DBGMCU_GetREVID) for [Anonymous Symbol]
    ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_GetDEVID) refers to ft32f0xx_debug.o(.text.DBGMCU_GetDEVID) for [Anonymous Symbol]
    ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_Config) refers to ft32f0xx_debug.o(.text.DBGMCU_Config) for [Anonymous Symbol]
    ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_APB1PeriphConfig) refers to ft32f0xx_debug.o(.text.DBGMCU_APB1PeriphConfig) for [Anonymous Symbol]
    ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_APB2PeriphConfig) refers to ft32f0xx_debug.o(.text.DBGMCU_APB2PeriphConfig) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_DeInit) refers to ft32f0xx_dma.o(.text.DMA_DeInit) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_Init) refers to ft32f0xx_dma.o(.text.DMA_Init) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_StructInit) refers to ft32f0xx_dma.o(.text.DMA_StructInit) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_Cmd) refers to ft32f0xx_dma.o(.text.DMA_Cmd) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_SetCurrDataCounter) refers to ft32f0xx_dma.o(.text.DMA_SetCurrDataCounter) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_GetCurrDataCounter) refers to ft32f0xx_dma.o(.text.DMA_GetCurrDataCounter) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_ITConfig) refers to ft32f0xx_dma.o(.text.DMA_ITConfig) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_GetFlagStatus) refers to ft32f0xx_dma.o(.text.DMA_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_ClearFlag) refers to ft32f0xx_dma.o(.text.DMA_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_GetITStatus) refers to ft32f0xx_dma.o(.text.DMA_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_ClearITPendingBit) refers to ft32f0xx_dma.o(.text.DMA_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_DeInit) refers to ft32f0xx_exti.o(.text.EXTI_DeInit) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_Init) refers to ft32f0xx_exti.o(.text.EXTI_Init) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_StructInit) refers to ft32f0xx_exti.o(.text.EXTI_StructInit) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_GenerateSWInterrupt) refers to ft32f0xx_exti.o(.text.EXTI_GenerateSWInterrupt) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_GetFlagStatus) refers to ft32f0xx_exti.o(.text.EXTI_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_ClearFlag) refers to ft32f0xx_exti.o(.text.EXTI_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_GetITStatus) refers to ft32f0xx_exti.o(.text.EXTI_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_ClearITPendingBit) refers to ft32f0xx_exti.o(.text.EXTI_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_SetLatency) refers to ft32f0xx_flash.o(.text.FLASH_SetLatency) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_PrefetchBufferCmd) refers to ft32f0xx_flash.o(.text.FLASH_PrefetchBufferCmd) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_GetPrefetchBufferStatus) refers to ft32f0xx_flash.o(.text.FLASH_GetPrefetchBufferStatus) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_Unlock) refers to ft32f0xx_flash.o(.text.FLASH_Unlock) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_Lock) refers to ft32f0xx_flash.o(.text.FLASH_Lock) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_ErasePage) refers to ft32f0xx_flash.o(.text.FLASH_PrefetchBufferCmd) for FLASH_PrefetchBufferCmd
    ft32f0xx_flash.o(.text.FLASH_ErasePage) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ErasePage) refers to ft32f0xx_flash.o(.text.FLASH_ErasePage) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) refers to ft32f0xx_flash.o(.text.FLASH_GetStatus) for FLASH_GetStatus
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_EraseAllPages) refers to ft32f0xx_flash.o(.text.FLASH_PrefetchBufferCmd) for FLASH_PrefetchBufferCmd
    ft32f0xx_flash.o(.text.FLASH_EraseAllPages) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_EraseAllPages) refers to ft32f0xx_flash.o(.text.FLASH_EraseAllPages) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_ProgramWord) refers to ft32f0xx_flash.o(.text.FLASH_PrefetchBufferCmd) for FLASH_PrefetchBufferCmd
    ft32f0xx_flash.o(.text.FLASH_ProgramWord) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ProgramWord) refers to ft32f0xx_flash.o(.text.FLASH_ProgramWord) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Unlock) refers to ft32f0xx_flash.o(.text.FLASH_OB_Unlock) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Lock) refers to ft32f0xx_flash.o(.text.FLASH_OB_Lock) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Launch) refers to ft32f0xx_flash.o(.text.FLASH_OB_Launch) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_Erase) refers to ft32f0xx_flash.o(.text.FLASH_OB_GetRDP) for FLASH_OB_GetRDP
    ft32f0xx_flash.o(.text.FLASH_OB_Erase) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Erase) refers to ft32f0xx_flash.o(.text.FLASH_OB_Erase) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_GetRDP) refers to ft32f0xx_flash.o(.text.FLASH_OB_GetRDP) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_EnableWRP) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_EnableWRP) refers to ft32f0xx_flash.o(.text.FLASH_OB_EnableWRP) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_RDPConfig) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_RDPConfig) refers to ft32f0xx_flash.o(.text.FLASH_OB_RDPConfig) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_UserConfig) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_UserConfig) refers to ft32f0xx_flash.o(.text.FLASH_OB_UserConfig) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_BOOTConfig) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_BOOTConfig) refers to ft32f0xx_flash.o(.text.FLASH_OB_BOOTConfig) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_VDDAConfig) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_VDDAConfig) refers to ft32f0xx_flash.o(.text.FLASH_OB_VDDAConfig) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_SRAMParityConfig) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_SRAMParityConfig) refers to ft32f0xx_flash.o(.text.FLASH_OB_SRAMParityConfig) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_WriteUser) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_WriteUser) refers to ft32f0xx_flash.o(.text.FLASH_OB_WriteUser) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_ProgramData) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_ProgramData) refers to ft32f0xx_flash.o(.text.FLASH_OB_ProgramData) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_GetUser) refers to ft32f0xx_flash.o(.text.FLASH_OB_GetUser) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_GetWRP) refers to ft32f0xx_flash.o(.text.FLASH_OB_GetWRP) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ITConfig) refers to ft32f0xx_flash.o(.text.FLASH_ITConfig) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus) refers to ft32f0xx_flash.o(.text.FLASH_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ClearFlag) refers to ft32f0xx_flash.o(.text.FLASH_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_GetStatus) refers to ft32f0xx_flash.o(.text.FLASH_GetStatus) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.text.GPIO_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphResetCmd) for RCC_AHBPeriphResetCmd
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_DeInit) refers to ft32f0xx_gpio.o(.text.GPIO_DeInit) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_Init) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_StructInit) refers to ft32f0xx_gpio.o(.text.GPIO_StructInit) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig) refers to ft32f0xx_gpio.o(.text.GPIO_PinLockConfig) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit) refers to ft32f0xx_gpio.o(.text.GPIO_ReadInputDataBit) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadInputData) refers to ft32f0xx_gpio.o(.text.GPIO_ReadInputData) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit) refers to ft32f0xx_gpio.o(.text.GPIO_ReadOutputDataBit) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData) refers to ft32f0xx_gpio.o(.text.GPIO_ReadOutputData) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_SetBits) refers to ft32f0xx_gpio.o(.text.GPIO_SetBits) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ResetBits) refers to ft32f0xx_gpio.o(.text.GPIO_ResetBits) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_WriteBit) refers to ft32f0xx_gpio.o(.text.GPIO_WriteBit) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_Write) refers to ft32f0xx_gpio.o(.text.GPIO_Write) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig) refers to ft32f0xx_gpio.o(.text.GPIO_PinAFConfig) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_LedmConfig) refers to ft32f0xx_gpio.o(.text.GPIO_LedmConfig) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.text.I2C_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_DeInit) refers to ft32f0xx_i2c.o(.text.I2C_DeInit) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_Init) refers to ft32f0xx_i2c.o(.text.I2C_Init) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_StructInit) refers to ft32f0xx_i2c.o(.text.I2C_StructInit) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_Cmd) refers to ft32f0xx_i2c.o(.text.I2C_Cmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SoftwareResetCmd) refers to ft32f0xx_i2c.o(.text.I2C_SoftwareResetCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ITConfig) refers to ft32f0xx_i2c.o(.text.I2C_ITConfig) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_StretchClockCmd) refers to ft32f0xx_i2c.o(.text.I2C_StretchClockCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_DualAddressCmd) refers to ft32f0xx_i2c.o(.text.I2C_DualAddressCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_OwnAddress2Config) refers to ft32f0xx_i2c.o(.text.I2C_OwnAddress2Config) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd) refers to ft32f0xx_i2c.o(.text.I2C_GeneralCallCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SlaveByteControlCmd) refers to ft32f0xx_i2c.o(.text.I2C_SlaveByteControlCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SlaveAddressConfig) refers to ft32f0xx_i2c.o(.text.I2C_SlaveAddressConfig) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_10BitAddressingModeCmd) refers to ft32f0xx_i2c.o(.text.I2C_10BitAddressingModeCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_AutoEndCmd) refers to ft32f0xx_i2c.o(.text.I2C_AutoEndCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ReloadCmd) refers to ft32f0xx_i2c.o(.text.I2C_ReloadCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_NumberOfBytesConfig) refers to ft32f0xx_i2c.o(.text.I2C_NumberOfBytesConfig) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_MasterRequestConfig) refers to ft32f0xx_i2c.o(.text.I2C_MasterRequestConfig) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GenerateSTART) refers to ft32f0xx_i2c.o(.text.I2C_GenerateSTART) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP) refers to ft32f0xx_i2c.o(.text.I2C_GenerateSTOP) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_10BitAddressHeaderCmd) refers to ft32f0xx_i2c.o(.text.I2C_10BitAddressHeaderCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_AcknowledgeConfig) refers to ft32f0xx_i2c.o(.text.I2C_AcknowledgeConfig) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetAddressMatched) refers to ft32f0xx_i2c.o(.text.I2C_GetAddressMatched) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetTransferDirection) refers to ft32f0xx_i2c.o(.text.I2C_GetTransferDirection) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_TransferHandling) refers to ft32f0xx_i2c.o(.text.I2C_TransferHandling) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SMBusAlertCmd) refers to ft32f0xx_i2c.o(.text.I2C_SMBusAlertCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ClockTimeoutCmd) refers to ft32f0xx_i2c.o(.text.I2C_ClockTimeoutCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ExtendedClockTimeoutCmd) refers to ft32f0xx_i2c.o(.text.I2C_ExtendedClockTimeoutCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_IdleClockTimeoutCmd) refers to ft32f0xx_i2c.o(.text.I2C_IdleClockTimeoutCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_TimeoutAConfig) refers to ft32f0xx_i2c.o(.text.I2C_TimeoutAConfig) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_TimeoutBConfig) refers to ft32f0xx_i2c.o(.text.I2C_TimeoutBConfig) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_CalculatePEC) refers to ft32f0xx_i2c.o(.text.I2C_CalculatePEC) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_PECRequestCmd) refers to ft32f0xx_i2c.o(.text.I2C_PECRequestCmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetPEC) refers to ft32f0xx_i2c.o(.text.I2C_GetPEC) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ReadRegister) refers to ft32f0xx_i2c.o(.text.I2C_ReadRegister) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SendData) refers to ft32f0xx_i2c.o(.text.I2C_SendData) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ReceiveData) refers to ft32f0xx_i2c.o(.text.I2C_ReceiveData) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_DMACmd) refers to ft32f0xx_i2c.o(.text.I2C_DMACmd) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus) refers to ft32f0xx_i2c.o(.text.I2C_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ClearFlag) refers to ft32f0xx_i2c.o(.text.I2C_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetITStatus) refers to ft32f0xx_i2c.o(.text.I2C_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ClearITPendingBit) refers to ft32f0xx_i2c.o(.text.I2C_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_WriteAccessCmd) refers to ft32f0xx_iwdg.o(.text.IWDG_WriteAccessCmd) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_SetPrescaler) refers to ft32f0xx_iwdg.o(.text.IWDG_SetPrescaler) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_SetReload) refers to ft32f0xx_iwdg.o(.text.IWDG_SetReload) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_ReloadCounter) refers to ft32f0xx_iwdg.o(.text.IWDG_ReloadCounter) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_SetWindowValue) refers to ft32f0xx_iwdg.o(.text.IWDG_SetWindowValue) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_Enable) refers to ft32f0xx_iwdg.o(.text.IWDG_Enable) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_GetFlagStatus) refers to ft32f0xx_iwdg.o(.text.IWDG_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_misc.o(.ARM.exidx.text.NVIC_Init) refers to ft32f0xx_misc.o(.text.NVIC_Init) for [Anonymous Symbol]
    ft32f0xx_misc.o(.ARM.exidx.text.NVIC_SystemLPConfig) refers to ft32f0xx_misc.o(.text.NVIC_SystemLPConfig) for [Anonymous Symbol]
    ft32f0xx_misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig) refers to ft32f0xx_misc.o(.text.SysTick_CLKSourceConfig) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.text.PWR_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_DeInit) refers to ft32f0xx_pwr.o(.text.PWR_DeInit) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_BackupAccessCmd) refers to ft32f0xx_pwr.o(.text.PWR_BackupAccessCmd) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_PVDLevelConfig) refers to ft32f0xx_pwr.o(.text.PWR_PVDLevelConfig) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_PVDCmd) refers to ft32f0xx_pwr.o(.text.PWR_PVDCmd) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_WakeUpPinCmd) refers to ft32f0xx_pwr.o(.text.PWR_WakeUpPinCmd) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_EnterSleepMode) refers to ft32f0xx_pwr.o(.text.PWR_EnterSleepMode) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_EnterSTOPMode) refers to ft32f0xx_pwr.o(.text.PWR_EnterSTOPMode) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_EnterSTANDBYMode) refers to ft32f0xx_pwr.o(.text.PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_GetFlagStatus) refers to ft32f0xx_pwr.o(.text.PWR_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_ClearFlag) refers to ft32f0xx_pwr.o(.text.PWR_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_DeInit) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSEConfig) refers to ft32f0xx_rcc.o(.text.RCC_HSEConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.text.RCC_WaitForHSEStartUp) refers to ft32f0xx_rcc.o(.text.RCC_GetFlagStatus) for RCC_GetFlagStatus
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_WaitForHSEStartUp) refers to ft32f0xx_rcc.o(.text.RCC_WaitForHSEStartUp) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus) refers to ft32f0xx_rcc.o(.text.RCC_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue) refers to ft32f0xx_rcc.o(.text.RCC_AdjustHSICalibrationValue) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSICmd) refers to ft32f0xx_rcc.o(.text.RCC_HSICmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AdjustHSI14CalibrationValue) refers to ft32f0xx_rcc.o(.text.RCC_AdjustHSI14CalibrationValue) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSI14Cmd) refers to ft32f0xx_rcc.o(.text.RCC_HSI14Cmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSI14ADCRequestCmd) refers to ft32f0xx_rcc.o(.text.RCC_HSI14ADCRequestCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_LSEConfig) refers to ft32f0xx_rcc.o(.text.RCC_LSEConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_LSEDriveConfig) refers to ft32f0xx_rcc.o(.text.RCC_LSEDriveConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_LSICmd) refers to ft32f0xx_rcc.o(.text.RCC_LSICmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PLLConfig) refers to ft32f0xx_rcc.o(.text.RCC_PLLConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PLLCmd) refers to ft32f0xx_rcc.o(.text.RCC_PLLCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSI48Cmd) refers to ft32f0xx_rcc.o(.text.RCC_HSI48Cmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PREDIV1Config) refers to ft32f0xx_rcc.o(.text.RCC_PREDIV1Config) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd) refers to ft32f0xx_rcc.o(.text.RCC_ClockSecuritySystemCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_MCOConfig) refers to ft32f0xx_rcc.o(.text.RCC_MCOConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_SYSCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource) refers to ft32f0xx_rcc.o(.text.RCC_GetSYSCLKSource) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_HCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_PCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_ADCCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_I2CCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_I2CCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_USARTCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_USARTCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_USBCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_USBCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.text.RCC_GetClocksFreq) refers to uidiv.o(.text) for __aeabi_uidiv
    ft32f0xx_rcc.o(.text.RCC_GetClocksFreq) refers to ft32f0xx_rcc.o(.rodata.APBAHBPrescTable) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq) refers to ft32f0xx_rcc.o(.text.RCC_GetClocksFreq) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_RTCCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_RTCCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_RTCCLKCmd) refers to ft32f0xx_rcc.o(.text.RCC_RTCCLKCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_BackupResetCmd) refers to ft32f0xx_rcc.o(.text.RCC_BackupResetCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphClockCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AHBPeriphResetCmd) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphResetCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ITConfig) refers to ft32f0xx_rcc.o(.text.RCC_ITConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ClearFlag) refers to ft32f0xx_rcc.o(.text.RCC_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetITStatus) refers to ft32f0xx_rcc.o(.text.RCC_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit) refers to ft32f0xx_rcc.o(.text.RCC_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_DeInit) refers to ft32f0xx_rtc.o(.text.RTC_EnterInitMode) for RTC_EnterInitMode
    ft32f0xx_rtc.o(.text.RTC_DeInit) refers to ft32f0xx_rtc.o(.text.RTC_WaitForSynchro) for RTC_WaitForSynchro
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_DeInit) refers to ft32f0xx_rtc.o(.text.RTC_DeInit) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_EnterInitMode) refers to ft32f0xx_rtc.o(.text.RTC_EnterInitMode) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_WaitForSynchro) refers to ft32f0xx_rtc.o(.text.RTC_WaitForSynchro) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_Init) refers to ft32f0xx_rtc.o(.text.RTC_EnterInitMode) for RTC_EnterInitMode
    ft32f0xx_rtc.o(.text.RTC_Init) refers to ft32f0xx_rtc.o(.text.RTC_ExitInitMode) for RTC_ExitInitMode
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_Init) refers to ft32f0xx_rtc.o(.text.RTC_Init) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ExitInitMode) refers to ft32f0xx_rtc.o(.text.RTC_ExitInitMode) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_StructInit) refers to ft32f0xx_rtc.o(.text.RTC_StructInit) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_WriteProtectionCmd) refers to ft32f0xx_rtc.o(.text.RTC_WriteProtectionCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_RefClockCmd) refers to ft32f0xx_rtc.o(.text.RTC_EnterInitMode) for RTC_EnterInitMode
    ft32f0xx_rtc.o(.text.RTC_RefClockCmd) refers to ft32f0xx_rtc.o(.text.RTC_ExitInitMode) for RTC_ExitInitMode
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_RefClockCmd) refers to ft32f0xx_rtc.o(.text.RTC_RefClockCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_BypassShadowCmd) refers to ft32f0xx_rtc.o(.text.RTC_BypassShadowCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_SetTime) refers to ft32f0xx_rtc.o(.text.RTC_Bcd2ToByte) for RTC_Bcd2ToByte
    ft32f0xx_rtc.o(.text.RTC_SetTime) refers to ft32f0xx_rtc.o(.text.RTC_ByteToBcd2) for RTC_ByteToBcd2
    ft32f0xx_rtc.o(.text.RTC_SetTime) refers to ft32f0xx_rtc.o(.text.RTC_EnterInitMode) for RTC_EnterInitMode
    ft32f0xx_rtc.o(.text.RTC_SetTime) refers to ft32f0xx_rtc.o(.text.RTC_ExitInitMode) for RTC_ExitInitMode
    ft32f0xx_rtc.o(.text.RTC_SetTime) refers to ft32f0xx_rtc.o(.text.RTC_WaitForSynchro) for RTC_WaitForSynchro
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SetTime) refers to ft32f0xx_rtc.o(.text.RTC_SetTime) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_Bcd2ToByte) refers to ft32f0xx_rtc.o(.text.RTC_Bcd2ToByte) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ByteToBcd2) refers to ft32f0xx_rtc.o(.text.RTC_ByteToBcd2) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TimeStructInit) refers to ft32f0xx_rtc.o(.text.RTC_TimeStructInit) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_GetTime) refers to ft32f0xx_rtc.o(.text.RTC_Bcd2ToByte) for RTC_Bcd2ToByte
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetTime) refers to ft32f0xx_rtc.o(.text.RTC_GetTime) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetSubSecond) refers to ft32f0xx_rtc.o(.text.RTC_GetSubSecond) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_SetDate) refers to ft32f0xx_rtc.o(.text.RTC_Bcd2ToByte) for RTC_Bcd2ToByte
    ft32f0xx_rtc.o(.text.RTC_SetDate) refers to ft32f0xx_rtc.o(.text.RTC_ByteToBcd2) for RTC_ByteToBcd2
    ft32f0xx_rtc.o(.text.RTC_SetDate) refers to ft32f0xx_rtc.o(.text.RTC_EnterInitMode) for RTC_EnterInitMode
    ft32f0xx_rtc.o(.text.RTC_SetDate) refers to ft32f0xx_rtc.o(.text.RTC_ExitInitMode) for RTC_ExitInitMode
    ft32f0xx_rtc.o(.text.RTC_SetDate) refers to ft32f0xx_rtc.o(.text.RTC_WaitForSynchro) for RTC_WaitForSynchro
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SetDate) refers to ft32f0xx_rtc.o(.text.RTC_SetDate) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_DateStructInit) refers to ft32f0xx_rtc.o(.text.RTC_DateStructInit) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_GetDate) refers to ft32f0xx_rtc.o(.text.RTC_Bcd2ToByte) for RTC_Bcd2ToByte
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetDate) refers to ft32f0xx_rtc.o(.text.RTC_GetDate) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_SetAlarm) refers to ft32f0xx_rtc.o(.text.RTC_Bcd2ToByte) for RTC_Bcd2ToByte
    ft32f0xx_rtc.o(.text.RTC_SetAlarm) refers to ft32f0xx_rtc.o(.text.RTC_ByteToBcd2) for RTC_ByteToBcd2
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SetAlarm) refers to ft32f0xx_rtc.o(.text.RTC_SetAlarm) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_AlarmStructInit) refers to ft32f0xx_rtc.o(.text.RTC_AlarmStructInit) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_GetAlarm) refers to ft32f0xx_rtc.o(.text.RTC_Bcd2ToByte) for RTC_Bcd2ToByte
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetAlarm) refers to ft32f0xx_rtc.o(.text.RTC_GetAlarm) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_AlarmCmd) refers to ft32f0xx_rtc.o(.text.RTC_AlarmCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_AlarmSubSecondConfig) refers to ft32f0xx_rtc.o(.text.RTC_AlarmSubSecondConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetAlarmSubSecond) refers to ft32f0xx_rtc.o(.text.RTC_GetAlarmSubSecond) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_DayLightSavingConfig) refers to ft32f0xx_rtc.o(.text.RTC_DayLightSavingConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetStoreOperation) refers to ft32f0xx_rtc.o(.text.RTC_GetStoreOperation) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_OutputConfig) refers to ft32f0xx_rtc.o(.text.RTC_OutputConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_CalibOutputCmd) refers to ft32f0xx_rtc.o(.text.RTC_CalibOutputCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_CalibOutputConfig) refers to ft32f0xx_rtc.o(.text.RTC_CalibOutputConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SmoothCalibConfig) refers to ft32f0xx_rtc.o(.text.RTC_SmoothCalibConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TimeStampCmd) refers to ft32f0xx_rtc.o(.text.RTC_TimeStampCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_GetTimeStamp) refers to ft32f0xx_rtc.o(.text.RTC_Bcd2ToByte) for RTC_Bcd2ToByte
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetTimeStamp) refers to ft32f0xx_rtc.o(.text.RTC_GetTimeStamp) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetTimeStampSubSecond) refers to ft32f0xx_rtc.o(.text.RTC_GetTimeStampSubSecond) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperTriggerConfig) refers to ft32f0xx_rtc.o(.text.RTC_TamperTriggerConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperCmd) refers to ft32f0xx_rtc.o(.text.RTC_TamperCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperFilterConfig) refers to ft32f0xx_rtc.o(.text.RTC_TamperFilterConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperSamplingFreqConfig) refers to ft32f0xx_rtc.o(.text.RTC_TamperSamplingFreqConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperPinsPrechargeDuration) refers to ft32f0xx_rtc.o(.text.RTC_TamperPinsPrechargeDuration) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TimeStampOnTamperDetectionCmd) refers to ft32f0xx_rtc.o(.text.RTC_TimeStampOnTamperDetectionCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperPullUpCmd) refers to ft32f0xx_rtc.o(.text.RTC_TamperPullUpCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_OutputTypeConfig) refers to ft32f0xx_rtc.o(.text.RTC_OutputTypeConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_SynchroShiftConfig) refers to ft32f0xx_rtc.o(.text.RTC_WaitForSynchro) for RTC_WaitForSynchro
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SynchroShiftConfig) refers to ft32f0xx_rtc.o(.text.RTC_SynchroShiftConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ITConfig) refers to ft32f0xx_rtc.o(.text.RTC_ITConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetFlagStatus) refers to ft32f0xx_rtc.o(.text.RTC_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ClearFlag) refers to ft32f0xx_rtc.o(.text.RTC_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetITStatus) refers to ft32f0xx_rtc.o(.text.RTC_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ClearITPendingBit) refers to ft32f0xx_rtc.o(.text.RTC_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_spi.o(.text.SPI_I2S_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    ft32f0xx_spi.o(.text.SPI_I2S_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_DeInit) refers to ft32f0xx_spi.o(.text.SPI_I2S_DeInit) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_StructInit) refers to ft32f0xx_spi.o(.text.SPI_StructInit) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_Init) refers to ft32f0xx_spi.o(.text.SPI_Init) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_Cmd) refers to ft32f0xx_spi.o(.text.SPI_Cmd) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_TIModeCmd) refers to ft32f0xx_spi.o(.text.SPI_TIModeCmd) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_DataSizeConfig) refers to ft32f0xx_spi.o(.text.SPI_DataSizeConfig) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_RxFIFOThresholdConfig) refers to ft32f0xx_spi.o(.text.SPI_RxFIFOThresholdConfig) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_BiDirectionalLineConfig) refers to ft32f0xx_spi.o(.text.SPI_BiDirectionalLineConfig) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_NSSInternalSoftwareConfig) refers to ft32f0xx_spi.o(.text.SPI_NSSInternalSoftwareConfig) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_SSOutputCmd) refers to ft32f0xx_spi.o(.text.SPI_SSOutputCmd) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_NSSPulseModeCmd) refers to ft32f0xx_spi.o(.text.SPI_NSSPulseModeCmd) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_SendData8) refers to ft32f0xx_spi.o(.text.SPI_SendData8) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_SendData16) refers to ft32f0xx_spi.o(.text.SPI_I2S_SendData16) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_ReceiveData8) refers to ft32f0xx_spi.o(.text.SPI_ReceiveData8) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_ReceiveData16) refers to ft32f0xx_spi.o(.text.SPI_I2S_ReceiveData16) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_CRCLengthConfig) refers to ft32f0xx_spi.o(.text.SPI_CRCLengthConfig) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_CalculateCRC) refers to ft32f0xx_spi.o(.text.SPI_CalculateCRC) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_TransmitCRC) refers to ft32f0xx_spi.o(.text.SPI_TransmitCRC) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_GetCRC) refers to ft32f0xx_spi.o(.text.SPI_GetCRC) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_GetCRCPolynomial) refers to ft32f0xx_spi.o(.text.SPI_GetCRCPolynomial) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_DMACmd) refers to ft32f0xx_spi.o(.text.SPI_I2S_DMACmd) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_LastDMATransferCmd) refers to ft32f0xx_spi.o(.text.SPI_LastDMATransferCmd) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_ITConfig) refers to ft32f0xx_spi.o(.text.SPI_I2S_ITConfig) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_GetTransmissionFIFOStatus) refers to ft32f0xx_spi.o(.text.SPI_GetTransmissionFIFOStatus) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_GetReceptionFIFOStatus) refers to ft32f0xx_spi.o(.text.SPI_GetReceptionFIFOStatus) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_GetFlagStatus) refers to ft32f0xx_spi.o(.text.SPI_I2S_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_ClearFlag) refers to ft32f0xx_spi.o(.text.SPI_I2S_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_GetITStatus) refers to ft32f0xx_spi.o(.text.SPI_I2S_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_DeInit) refers to ft32f0xx_syscfg.o(.text.SYSCFG_DeInit) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_MemoryRemapConfig) refers to ft32f0xx_syscfg.o(.text.SYSCFG_MemoryRemapConfig) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_DMAChannelRemapConfig) refers to ft32f0xx_syscfg.o(.text.SYSCFG_DMAChannelRemapConfig) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_I2CFastModePlusConfig) refers to ft32f0xx_syscfg.o(.text.SYSCFG_I2CFastModePlusConfig) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_IRDAEnvSelection) refers to ft32f0xx_syscfg.o(.text.SYSCFG_IRDAEnvSelection) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_EXTILineConfig) refers to ft32f0xx_syscfg.o(.text.SYSCFG_EXTILineConfig) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_BreakConfig) refers to ft32f0xx_syscfg.o(.text.SYSCFG_BreakConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    ft32f0xx_tim.o(.text.TIM_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_DeInit) refers to ft32f0xx_tim.o(.text.TIM_DeInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_TimeBaseInit) refers to ft32f0xx_tim.o(.text.TIM_TimeBaseInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit) refers to ft32f0xx_tim.o(.text.TIM_TimeBaseStructInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_PrescalerConfig) refers to ft32f0xx_tim.o(.text.TIM_PrescalerConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_CounterModeConfig) refers to ft32f0xx_tim.o(.text.TIM_CounterModeConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCounter) refers to ft32f0xx_tim.o(.text.TIM_SetCounter) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetAutoreload) refers to ft32f0xx_tim.o(.text.TIM_SetAutoreload) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCounter) refers to ft32f0xx_tim.o(.text.TIM_GetCounter) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetPrescaler) refers to ft32f0xx_tim.o(.text.TIM_GetPrescaler) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig) refers to ft32f0xx_tim.o(.text.TIM_UpdateDisableConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig) refers to ft32f0xx_tim.o(.text.TIM_UpdateRequestConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig) refers to ft32f0xx_tim.o(.text.TIM_ARRPreloadConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode) refers to ft32f0xx_tim.o(.text.TIM_SelectOnePulseMode) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetClockDivision) refers to ft32f0xx_tim.o(.text.TIM_SetClockDivision) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_Cmd) refers to ft32f0xx_tim.o(.text.TIM_Cmd) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_BDTRConfig) refers to ft32f0xx_tim.o(.text.TIM_BDTRConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_BDTRStructInit) refers to ft32f0xx_tim.o(.text.TIM_BDTRStructInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs) refers to ft32f0xx_tim.o(.text.TIM_CtrlPWMOutputs) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1Init) refers to ft32f0xx_tim.o(.text.TIM_OC1Init) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2Init) refers to ft32f0xx_tim.o(.text.TIM_OC2Init) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3Init) refers to ft32f0xx_tim.o(.text.TIM_OC3Init) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4Init) refers to ft32f0xx_tim.o(.text.TIM_OC4Init) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OCStructInit) refers to ft32f0xx_tim.o(.text.TIM_OCStructInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOCxM) refers to ft32f0xx_tim.o(.text.TIM_SelectOCxM) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare1) refers to ft32f0xx_tim.o(.text.TIM_SetCompare1) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare2) refers to ft32f0xx_tim.o(.text.TIM_SetCompare2) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare3) refers to ft32f0xx_tim.o(.text.TIM_SetCompare3) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare4) refers to ft32f0xx_tim.o(.text.TIM_SetCompare4) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config) refers to ft32f0xx_tim.o(.text.TIM_ForcedOC1Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config) refers to ft32f0xx_tim.o(.text.TIM_ForcedOC2Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config) refers to ft32f0xx_tim.o(.text.TIM_ForcedOC3Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config) refers to ft32f0xx_tim.o(.text.TIM_ForcedOC4Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_CCPreloadControl) refers to ft32f0xx_tim.o(.text.TIM_CCPreloadControl) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig) refers to ft32f0xx_tim.o(.text.TIM_OC1PreloadConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig) refers to ft32f0xx_tim.o(.text.TIM_OC2PreloadConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig) refers to ft32f0xx_tim.o(.text.TIM_OC3PreloadConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig) refers to ft32f0xx_tim.o(.text.TIM_OC4PreloadConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1FastConfig) refers to ft32f0xx_tim.o(.text.TIM_OC1FastConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2FastConfig) refers to ft32f0xx_tim.o(.text.TIM_OC2FastConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3FastConfig) refers to ft32f0xx_tim.o(.text.TIM_OC3FastConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4FastConfig) refers to ft32f0xx_tim.o(.text.TIM_OC4FastConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref) refers to ft32f0xx_tim.o(.text.TIM_ClearOC1Ref) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref) refers to ft32f0xx_tim.o(.text.TIM_ClearOC2Ref) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref) refers to ft32f0xx_tim.o(.text.TIM_ClearOC3Ref) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref) refers to ft32f0xx_tim.o(.text.TIM_ClearOC4Ref) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC1PolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC1NPolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC2PolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC2NPolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC3PolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC3NPolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC4PolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOCREFClear) refers to ft32f0xx_tim.o(.text.TIM_SelectOCREFClear) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_CCxCmd) refers to ft32f0xx_tim.o(.text.TIM_CCxCmd) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_CCxNCmd) refers to ft32f0xx_tim.o(.text.TIM_CCxNCmd) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectCOM) refers to ft32f0xx_tim.o(.text.TIM_SelectCOM) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TI1_Config) for TI1_Config
    ft32f0xx_tim.o(.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TIM_SetIC1Prescaler) for TIM_SetIC1Prescaler
    ft32f0xx_tim.o(.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TI2_Config) for TI2_Config
    ft32f0xx_tim.o(.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TIM_SetIC2Prescaler) for TIM_SetIC2Prescaler
    ft32f0xx_tim.o(.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TI3_Config) for TI3_Config
    ft32f0xx_tim.o(.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TIM_SetIC3Prescaler) for TIM_SetIC3Prescaler
    ft32f0xx_tim.o(.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TI4_Config) for TI4_Config
    ft32f0xx_tim.o(.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TIM_SetIC4Prescaler) for TIM_SetIC4Prescaler
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TIM_ICInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TI1_Config) refers to ft32f0xx_tim.o(.text.TI1_Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler) refers to ft32f0xx_tim.o(.text.TIM_SetIC1Prescaler) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TI2_Config) refers to ft32f0xx_tim.o(.text.TI2_Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler) refers to ft32f0xx_tim.o(.text.TIM_SetIC2Prescaler) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TI3_Config) refers to ft32f0xx_tim.o(.text.TI3_Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler) refers to ft32f0xx_tim.o(.text.TIM_SetIC3Prescaler) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TI4_Config) refers to ft32f0xx_tim.o(.text.TI4_Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler) refers to ft32f0xx_tim.o(.text.TIM_SetIC4Prescaler) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ICStructInit) refers to ft32f0xx_tim.o(.text.TIM_ICStructInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_PWMIConfig) refers to ft32f0xx_tim.o(.text.TI1_Config) for TI1_Config
    ft32f0xx_tim.o(.text.TIM_PWMIConfig) refers to ft32f0xx_tim.o(.text.TIM_SetIC1Prescaler) for TIM_SetIC1Prescaler
    ft32f0xx_tim.o(.text.TIM_PWMIConfig) refers to ft32f0xx_tim.o(.text.TI2_Config) for TI2_Config
    ft32f0xx_tim.o(.text.TIM_PWMIConfig) refers to ft32f0xx_tim.o(.text.TIM_SetIC2Prescaler) for TIM_SetIC2Prescaler
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_PWMIConfig) refers to ft32f0xx_tim.o(.text.TIM_PWMIConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture1) refers to ft32f0xx_tim.o(.text.TIM_GetCapture1) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture2) refers to ft32f0xx_tim.o(.text.TIM_GetCapture2) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture3) refers to ft32f0xx_tim.o(.text.TIM_GetCapture3) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture4) refers to ft32f0xx_tim.o(.text.TIM_GetCapture4) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ITConfig) refers to ft32f0xx_tim.o(.text.TIM_ITConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GenerateEvent) refers to ft32f0xx_tim.o(.text.TIM_GenerateEvent) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetFlagStatus) refers to ft32f0xx_tim.o(.text.TIM_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearFlag) refers to ft32f0xx_tim.o(.text.TIM_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetITStatus) refers to ft32f0xx_tim.o(.text.TIM_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit) refers to ft32f0xx_tim.o(.text.TIM_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_DMAConfig) refers to ft32f0xx_tim.o(.text.TIM_DMAConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_DMACmd) refers to ft32f0xx_tim.o(.text.TIM_DMACmd) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectCCDMA) refers to ft32f0xx_tim.o(.text.TIM_SelectCCDMA) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_InternalClockConfig) refers to ft32f0xx_tim.o(.text.TIM_InternalClockConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_ITRxExternalClockConfig) refers to ft32f0xx_tim.o(.text.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig) refers to ft32f0xx_tim.o(.text.TIM_ITRxExternalClockConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger) refers to ft32f0xx_tim.o(.text.TIM_SelectInputTrigger) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_TIxExternalClockConfig) refers to ft32f0xx_tim.o(.text.TI2_Config) for TI2_Config
    ft32f0xx_tim.o(.text.TIM_TIxExternalClockConfig) refers to ft32f0xx_tim.o(.text.TI1_Config) for TI1_Config
    ft32f0xx_tim.o(.text.TIM_TIxExternalClockConfig) refers to ft32f0xx_tim.o(.text.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig) refers to ft32f0xx_tim.o(.text.TIM_TIxExternalClockConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_ETRClockMode1Config) refers to ft32f0xx_tim.o(.text.TIM_ETRConfig) for TIM_ETRConfig
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config) refers to ft32f0xx_tim.o(.text.TIM_ETRClockMode1Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ETRConfig) refers to ft32f0xx_tim.o(.text.TIM_ETRConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_ETRClockMode2Config) refers to ft32f0xx_tim.o(.text.TIM_ETRConfig) for TIM_ETRConfig
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config) refers to ft32f0xx_tim.o(.text.TIM_ETRClockMode2Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger) refers to ft32f0xx_tim.o(.text.TIM_SelectOutputTrigger) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode) refers to ft32f0xx_tim.o(.text.TIM_SelectSlaveMode) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode) refers to ft32f0xx_tim.o(.text.TIM_SelectMasterSlaveMode) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig) refers to ft32f0xx_tim.o(.text.TIM_EncoderInterfaceConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectHallSensor) refers to ft32f0xx_tim.o(.text.TIM_SelectHallSensor) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_RemapConfig) refers to ft32f0xx_tim.o(.text.TIM_RemapConfig) for [Anonymous Symbol]
    ft32f0xx_usart.o(.text.USART_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    ft32f0xx_usart.o(.text.USART_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    ft32f0xx_usart.o(.ARM.exidx.text.USART_DeInit) refers to ft32f0xx_usart.o(.text.USART_DeInit) for [Anonymous Symbol]
    ft32f0xx_usart.o(.text.USART_Init) refers to ft32f0xx_rcc.o(.text.RCC_GetClocksFreq) for RCC_GetClocksFreq
    ft32f0xx_usart.o(.text.USART_Init) refers to uidiv.o(.text) for __aeabi_uidiv
    ft32f0xx_usart.o(.ARM.exidx.text.USART_Init) refers to ft32f0xx_usart.o(.text.USART_Init) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_StructInit) refers to ft32f0xx_usart.o(.text.USART_StructInit) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_ClockInit) refers to ft32f0xx_usart.o(.text.USART_ClockInit) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_ClockStructInit) refers to ft32f0xx_usart.o(.text.USART_ClockStructInit) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_Cmd) refers to ft32f0xx_usart.o(.text.USART_Cmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_DirectionModeCmd) refers to ft32f0xx_usart.o(.text.USART_DirectionModeCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd) refers to ft32f0xx_usart.o(.text.USART_OverSampling8Cmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd) refers to ft32f0xx_usart.o(.text.USART_OneBitMethodCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_MSBFirstCmd) refers to ft32f0xx_usart.o(.text.USART_MSBFirstCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_DataInvCmd) refers to ft32f0xx_usart.o(.text.USART_DataInvCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_InvPinCmd) refers to ft32f0xx_usart.o(.text.USART_InvPinCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_SWAPPinCmd) refers to ft32f0xx_usart.o(.text.USART_SWAPPinCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_ReceiverTimeOutCmd) refers to ft32f0xx_usart.o(.text.USART_ReceiverTimeOutCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_SetReceiverTimeOut) refers to ft32f0xx_usart.o(.text.USART_SetReceiverTimeOut) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_AutoBaudRateCmd) refers to ft32f0xx_usart.o(.text.USART_AutoBaudRateCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_AutoBaudRateConfig) refers to ft32f0xx_usart.o(.text.USART_AutoBaudRateConfig) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_SendData) refers to ft32f0xx_usart.o(.text.USART_SendData) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_ReceiveData) refers to ft32f0xx_usart.o(.text.USART_ReceiveData) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_SetAddress) refers to ft32f0xx_usart.o(.text.USART_SetAddress) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_MuteModeCmd) refers to ft32f0xx_usart.o(.text.USART_MuteModeCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_MuteModeWakeUpConfig) refers to ft32f0xx_usart.o(.text.USART_MuteModeWakeUpConfig) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_AddressDetectionConfig) refers to ft32f0xx_usart.o(.text.USART_AddressDetectionConfig) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd) refers to ft32f0xx_usart.o(.text.USART_HalfDuplexCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_DECmd) refers to ft32f0xx_usart.o(.text.USART_DECmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_DEPolarityConfig) refers to ft32f0xx_usart.o(.text.USART_DEPolarityConfig) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_SetDEAssertionTime) refers to ft32f0xx_usart.o(.text.USART_SetDEAssertionTime) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_SetDEDeassertionTime) refers to ft32f0xx_usart.o(.text.USART_SetDEDeassertionTime) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_DMACmd) refers to ft32f0xx_usart.o(.text.USART_DMACmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_DMAReceptionErrorConfig) refers to ft32f0xx_usart.o(.text.USART_DMAReceptionErrorConfig) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_ITConfig) refers to ft32f0xx_usart.o(.text.USART_ITConfig) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_RequestCmd) refers to ft32f0xx_usart.o(.text.USART_RequestCmd) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_OverrunDetectionConfig) refers to ft32f0xx_usart.o(.text.USART_OverrunDetectionConfig) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_GetFlagStatus) refers to ft32f0xx_usart.o(.text.USART_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_ClearFlag) refers to ft32f0xx_usart.o(.text.USART_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_GetITStatus) refers to ft32f0xx_usart.o(.text.USART_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_usart.o(.ARM.exidx.text.USART_ClearITPendingBit) refers to ft32f0xx_usart.o(.text.USART_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_wwdg.o(.text.WWDG_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_DeInit) refers to ft32f0xx_wwdg.o(.text.WWDG_DeInit) for [Anonymous Symbol]
    ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_SetPrescaler) refers to ft32f0xx_wwdg.o(.text.WWDG_SetPrescaler) for [Anonymous Symbol]
    ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_SetWindowValue) refers to ft32f0xx_wwdg.o(.text.WWDG_SetWindowValue) for [Anonymous Symbol]
    ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_EnableIT) refers to ft32f0xx_wwdg.o(.text.WWDG_EnableIT) for [Anonymous Symbol]
    ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_SetCounter) refers to ft32f0xx_wwdg.o(.text.WWDG_SetCounter) for [Anonymous Symbol]
    ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_Enable) refers to ft32f0xx_wwdg.o(.text.WWDG_Enable) for [Anonymous Symbol]
    ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_GetFlagStatus) refers to ft32f0xx_wwdg.o(.text.WWDG_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_ClearFlag) refers to ft32f0xx_wwdg.o(.text.WWDG_ClearFlag) for [Anonymous Symbol]
    startup_ft32f030x8.o(RESET) refers to startup_ft32f030x8.o(STACK) for __initial_sp
    startup_ft32f030x8.o(RESET) refers to startup_ft32f030x8.o(.text) for Reset_Handler
    startup_ft32f030x8.o(RESET) refers to ft32f0xx_it.o(.text.NMI_Handler) for NMI_Handler
    startup_ft32f030x8.o(RESET) refers to ft32f0xx_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_ft32f030x8.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_ft32f030x8.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_ft32f030x8.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_ft32f030x8.o(RESET) refers to ft32f0xx_it.o(.text.EXTI4_15_IRQHandler) for EXTI4_15_IRQHandler
    startup_ft32f030x8.o(RESET) refers to ft32f0xx_it.o(.text.TIM14_IRQHandler) for TIM14_IRQHandler
    startup_ft32f030x8.o(RESET) refers to ft32f0xx_it.o(.text.TIM17_IRQHandler) for TIM17_IRQHandler
    startup_ft32f030x8.o(.text) refers to startup_ft32f030x8.o(STACK) for __initial_sp
    startup_ft32f030x8.o(.text) refers to system_ft32f0xx.o(.text.SystemInit) for SystemInit
    startup_ft32f030x8.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_ft32f0xx.o(.text.SystemInit) refers to system_ft32f0xx.o(.text.SetSysClock) for SetSysClock
    system_ft32f0xx.o(.ARM.exidx.text.SystemInit) refers to system_ft32f0xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_ft32f0xx.o(.text.SetSysClock) refers to system_ft32f0xx.o(.text.SetSysClockTo72) for SetSysClockTo72
    system_ft32f0xx.o(.ARM.exidx.text.SetSysClock) refers to system_ft32f0xx.o(.text.SetSysClock) for [Anonymous Symbol]
    system_ft32f0xx.o(.text.SystemCoreClockUpdate) refers to uidiv.o(.text) for __aeabi_uidiv
    system_ft32f0xx.o(.text.SystemCoreClockUpdate) refers to system_ft32f0xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_ft32f0xx.o(.text.SystemCoreClockUpdate) refers to system_ft32f0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_ft32f0xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_ft32f0xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_ft32f0xx.o(.ARM.exidx.text.SetSysClockTo72) refers to system_ft32f0xx.o(.text.SetSysClockTo72) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    fadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fadd.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    fmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers to fepilogue.o(.text) for _float_round
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    fcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fcmpge.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fcmpgt.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dcmpge.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fflti.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    dflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ffixui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixui.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    f2d.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers to fepilogue.o(.text) for _float_round
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_ft32f030x8.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_ft32f030x8.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    fepilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(i.__ARM_clz) refers (Special) to iusefp.o(.text) for __I$use$fp


==============================================================================

Removing Unused input sections from the image.

    Removing ft32f0xx_it.o(.text), (0 bytes).
    Removing ft32f0xx_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing ft32f0xx_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing ft32f0xx_it.o(.ARM.exidx.text.TIM14_IRQHandler), (8 bytes).
    Removing ft32f0xx_it.o(.ARM.exidx.text.TIM17_IRQHandler), (8 bytes).
    Removing ft32f0xx_it.o(.ARM.exidx.text.EXTI4_15_IRQHandler), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.FT32_GPIOA_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.FT32_GPIOB_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.FT32_EXIT_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.ADC_DMA_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.Tim3BaseInit), (8 bytes).
    Removing main.o(.ARM.exidx.text.Tim15BaseInit), (8 bytes).
    Removing main.o(.ARM.exidx.text.Tim16BaseInit), (8 bytes).
    Removing main.o(.ARM.exidx.text.Tim17BaseInit), (8 bytes).
    Removing main.o(.ARM.exidx.text.Tim14BaseInit), (8 bytes).
    Removing main.o(.ARM.exidx.text.IWDG_Config), (8 bytes).
    Removing taskmanager.o(.text), (0 bytes).
    Removing taskmanager.o(.text.SendMessage), (54 bytes).
    Removing taskmanager.o(.ARM.exidx.text.SendMessage), (8 bytes).
    Removing taskmanager.o(.text.SendShortMessageFromISR), (72 bytes).
    Removing taskmanager.o(.ARM.exidx.text.SendShortMessageFromISR), (8 bytes).
    Removing taskmanager.o(.text.SendMessageFromISR), (88 bytes).
    Removing taskmanager.o(.ARM.exidx.text.SendMessageFromISR), (8 bytes).
    Removing taskmanager.o(.ARM.exidx.text.vApplicationTickHook), (8 bytes).
    Removing taskmanager.o(.ARM.exidx.text.vApplicationMallocFailedHook), (8 bytes).
    Removing taskmanager.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.text.xQueueGenericReset), (154 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.text.xQueueGenericCreate), (90 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.text.prvInitialiseNewQueue), (92 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (42 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.prvInitialiseMutex), (54 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (88 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (348 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (90 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (420 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (54 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.text.prvCopyDataToQueue), (244 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.text.prvIsQueueFull), (50 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.text.prvUnlockQueue), (186 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (196 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (162 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueueReceive), (342 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.text.prvCopyDataFromQueue), (84 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.text.prvIsQueueEmpty), (46 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.text.prvGetDisinheritPriorityAfterTimeout), (44 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (346 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (178 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (80 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (30 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (38 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (24 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (30 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.vQueueUnregisterQueue), (80 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueUnregisterQueue), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (24 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (18 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (44 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.text.vQueueAddToRegistry), (84 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueAddToRegistry), (8 bytes).
    Removing queue.o(.text.pcQueueGetName), (76 bytes).
    Removing queue.o(.ARM.exidx.text.pcQueueGetName), (8 bytes).
    Removing queue.o(.bss.xQueueRegistry), (64 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (152 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (64 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (344 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCount), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (236 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (174 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnEventList), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (68 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.xTaskRemoveFromEventList), (180 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (148 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.text.vTaskInternalSetTimeOutState), (36 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.text.xTaskCheckForTimeOut), (136 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.text.vTaskMissedYield), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (40 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (200 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (52 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (236 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityDisinherit), (168 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (232 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskNotifyTake), (152 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyWait), (184 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (280 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (348 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskNotifyGiveFromISR), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyStateClear), (88 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskNotifyValueClear), (80 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (200 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortYield), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.ulSetInterruptMaskFromISR), (8 bytes).
    Removing port.o(.ARM.exidx.text.vClearInterruptMaskFromISR), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing app.o(.text), (0 bytes).
    Removing app.o(.ARM.exidx.text.InitTask1), (8 bytes).
    Removing app.o(.ARM.exidx.text.HighProTask), (8 bytes).
    Removing app.o(.ARM.exidx.text.MediumProTask), (8 bytes).
    Removing app.o(.ARM.exidx.text.LowProTask), (8 bytes).
    Removing app.o(.ARM.exidx.text.APP_Start), (8 bytes).
    Removing app.o(.ARM.exidx.text.LED_Init), (8 bytes).
    Removing app.o(.ARM.exidx.text.LED_MainFunc), (8 bytes).
    Removing app.o(.ARM.exidx.text.Beep_MainFunc), (8 bytes).
    Removing app.o(.text.Motor_MainFunc), (68 bytes).
    Removing app.o(.ARM.exidx.text.Motor_MainFunc), (8 bytes).
    Removing app.o(.text.Motor_LevelSet), (92 bytes).
    Removing app.o(.ARM.exidx.text.Motor_LevelSet), (8 bytes).
    Removing app.o(.ARM.exidx.text.Lipus_MainFunc), (8 bytes).
    Removing app.o(.ARM.exidx.text.Power_MainFunc), (8 bytes).
    Removing app.o(.text.ProbTest_MainFunc), (30 bytes).
    Removing app.o(.ARM.exidx.text.ProbTest_MainFunc), (8 bytes).
    Removing app.o(.ARM.exidx.text.StandyDete), (8 bytes).
    Removing app.o(.bss.Frequnecy_Param), (4 bytes).
    Removing app.o(.bss.Vibration_Param), (4 bytes).
    Removing app.o(.bss.Motor_MainFunc.motor_duty_old), (1 bytes).
    Removing dev_ad9877.o(.text), (0 bytes).
    Removing dev_ad9877.o(.ARM.exidx.text.AD9833_SetPara), (8 bytes).
    Removing dev_ad9877.o(.ARM.exidx.text.AD9833_SendData), (8 bytes).
    Removing dev_ad9877.o(.ARM.exidx.text.AD9833_SendFrequency), (8 bytes).
    Removing dev_ad9877.o(.ARM.exidx.text.AD9833_SendPhase), (8 bytes).
    Removing dev_ad9877.o(.ARM.exidx.text.AD9833_SendWave), (8 bytes).
    Removing dev_ad9877.o(.ARM.exidx.text.AD9833_InitIo), (8 bytes).
    Removing dev_ad9877.o(.ARM.exidx.text.AD9833_FSYNC_Set), (8 bytes).
    Removing dev_ad9877.o(.ARM.exidx.text.AD9833_SCLK_Set), (8 bytes).
    Removing dev_ad9877.o(.ARM.exidx.text.AD9833_SDATA_Set), (8 bytes).
    Removing dev_ad9877.o(.ARM.exidx.text.AD9833_Delay), (8 bytes).
    Removing dev_adc.o(.text), (0 bytes).
    Removing dev_adc.o(.ARM.exidx.text.look1_iflf_binlxpw), (8 bytes).
    Removing dev_adc.o(.ARM.exidx.text.ADC_MainFunc), (8 bytes).
    Removing dev_adc.o(.ARM.exidx.text.ADCSample_Filter), (8 bytes).
    Removing dev_exit.o(.text), (0 bytes).
    Removing dev_flash.o(.text), (0 bytes).
    Removing dev_flash.o(.ARM.exidx.text.Flash_Write), (8 bytes).
    Removing dev_flash.o(.ARM.exidx.text.Flash_Read), (8 bytes).
    Removing dev_flash.o(.ARM.exidx.text.UltraParam_Init), (8 bytes).
    Removing dev_flash.o(.ARM.exidx.text.UltraParam_Set), (8 bytes).
    Removing dev_gpio.o(.text), (0 bytes).
    Removing dev_gpio.o(.ARM.exidx.text.DevGpio_SetOutPut), (8 bytes).
    Removing dev_gpio.o(.text.DevGpio_ReadInPut), (60 bytes).
    Removing dev_gpio.o(.ARM.exidx.text.DevGpio_ReadInPut), (8 bytes).
    Removing dev_gpio.o(.ARM.exidx.text.GPIO_ToggleBit), (8 bytes).
    Removing dev_gpio.o(.bss.PowerFlg), (1 bytes).
    Removing dev_pid.o(.text), (0 bytes).
    Removing dev_pid.o(.ARM.exidx.text.PIDController_Init), (8 bytes).
    Removing dev_pid.o(.ARM.exidx.text.PIDController_Update), (8 bytes).
    Removing dev_pwm.o(.text), (0 bytes).
    Removing dev_pwm.o(.ARM.exidx.text.Devpwm_SetDuty), (8 bytes).
    Removing dev_pwm.o(.ARM.exidx.text.Set_PWM1_Duty), (8 bytes).
    Removing dev_pwm.o(.ARM.exidx.text.Set_PWM2_Duty), (8 bytes).
    Removing dev_pwm.o(.ARM.exidx.text.Set_PWM3_Duty), (8 bytes).
    Removing ft32f0xx_adc.o(.text), (0 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_DeInit), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_StructInit), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_Cmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_ClockModeConfig), (24 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_ClockModeConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_JitterCmd), (60 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_JitterCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_AutoPowerOffCmd), (56 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_AutoPowerOffCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_WaitModeCmd), (56 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_WaitModeCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_AnalogWatchdogCmd), (56 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_AnalogWatchdogThresholdsConfig), (42 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogThresholdsConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_AnalogWatchdogSingleChannelConfig), (52 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_AnalogWatchdogSingleChannelCmd), (56 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_TempSensorCmd), (56 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_TempSensorCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_VrefintCmd), (56 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_VrefintCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_VbatCmd), (56 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_VbatCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_ChannelConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_ContinuousModeCmd), (56 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_ContinuousModeCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_DiscModeCmd), (56 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_DiscModeCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_OverrunModeCmd), (56 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_OverrunModeCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetCalibrationFactor), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_StopOfConversion), (22 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_StopOfConversion), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_StartOfConversion), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_GetConversionValue), (18 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetConversionValue), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_DMACmd), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_DMARequestModeConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_ITConfig), (60 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_ITConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_ClearFlag), (24 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_ClearFlag), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_GetITStatus), (76 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetITStatus), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_ClearITPendingBit), (24 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_VrefselConfig), (48 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_VrefselConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_VrefDecibCmd), (52 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_VrefDecibCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_IoshSmpCmd), (56 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_IoshSmpCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_IoshAmpCmd), (56 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_IoshAmpCmd), (8 bytes).
    Removing ft32f0xx_crc.o(.text), (0 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_DeInit), (40 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_DeInit), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_ResetDR), (16 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_ResetDR), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_ReverseInputDataSelect), (48 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_ReverseInputDataSelect), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_ReverseOutputDataCmd), (52 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_ReverseOutputDataCmd), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_SetInitRegister), (24 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_SetInitRegister), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_SetPolynomial), (12 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_SetPolynomial), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_CalcCRC), (24 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_CalcCRC), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_CalcCRC16bits), (28 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_CalcCRC16bits), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_CalcCRC8bits), (28 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_CalcCRC8bits), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_CalcBlockCRC), (64 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_CalcBlockCRC), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_GetCRC), (12 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_GetCRC), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_SetIDRegister), (24 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_SetIDRegister), (8 bytes).
    Removing ft32f0xx_crc.o(.text.CRC_GetIDRegister), (12 bytes).
    Removing ft32f0xx_crc.o(.ARM.exidx.text.CRC_GetIDRegister), (8 bytes).
    Removing ft32f0xx_crs.o(.text), (0 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_DeInit), (34 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_DeInit), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_AdjustHSI48CalibrationValue), (44 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_AdjustHSI48CalibrationValue), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_FrequencyErrorCounterCmd), (52 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_FrequencyErrorCounterCmd), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_AutomaticCalibrationCmd), (52 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_AutomaticCalibrationCmd), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_SoftwareSynchronizationGenerate), (16 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_SoftwareSynchronizationGenerate), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_FrequencyErrorCounterReload), (40 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_FrequencyErrorCounterReload), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_FrequencyErrorLimitConfig), (44 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_FrequencyErrorLimitConfig), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_SynchronizationPrescalerConfig), (36 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_SynchronizationPrescalerConfig), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_SynchronizationSourceConfig), (36 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_SynchronizationSourceConfig), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_SynchronizationPolarityConfig), (36 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_SynchronizationPolarityConfig), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_GetReloadValue), (12 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetReloadValue), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_GetHSI48CalibrationValue), (20 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetHSI48CalibrationValue), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_GetFrequencyErrorValue), (20 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetFrequencyErrorValue), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_GetFrequencyErrorDirection), (16 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetFrequencyErrorDirection), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_ITConfig), (56 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_ITConfig), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_GetFlagStatus), (28 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_ClearFlag), (52 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_ClearFlag), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_GetITStatus), (28 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_GetITStatus), (8 bytes).
    Removing ft32f0xx_crs.o(.text.CRS_ClearITPendingBit), (52 bytes).
    Removing ft32f0xx_crs.o(.ARM.exidx.text.CRS_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_dac.o(.text), (0 bytes).
    Removing ft32f0xx_dac.o(.text.DAC_Ref_Config), (52 bytes).
    Removing ft32f0xx_dac.o(.ARM.exidx.text.DAC_Ref_Config), (8 bytes).
    Removing ft32f0xx_dac.o(.text.DAC_Cmd), (52 bytes).
    Removing ft32f0xx_dac.o(.ARM.exidx.text.DAC_Cmd), (8 bytes).
    Removing ft32f0xx_dac.o(.text.DAC_SetChannel1Data), (32 bytes).
    Removing ft32f0xx_dac.o(.ARM.exidx.text.DAC_SetChannel1Data), (8 bytes).
    Removing ft32f0xx_dac.o(.text.DAC_SetChannel2Data), (32 bytes).
    Removing ft32f0xx_dac.o(.ARM.exidx.text.DAC_SetChannel2Data), (8 bytes).
    Removing ft32f0xx_dac.o(.text.DAC_Read_Reg), (40 bytes).
    Removing ft32f0xx_dac.o(.ARM.exidx.text.DAC_Read_Reg), (8 bytes).
    Removing ft32f0xx_debug.o(.text), (0 bytes).
    Removing ft32f0xx_debug.o(.text.DBGMCU_GetREVID), (12 bytes).
    Removing ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_GetREVID), (8 bytes).
    Removing ft32f0xx_debug.o(.text.DBGMCU_GetDEVID), (20 bytes).
    Removing ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_GetDEVID), (8 bytes).
    Removing ft32f0xx_debug.o(.text.DBGMCU_Config), (56 bytes).
    Removing ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_Config), (8 bytes).
    Removing ft32f0xx_debug.o(.text.DBGMCU_APB1PeriphConfig), (56 bytes).
    Removing ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_APB1PeriphConfig), (8 bytes).
    Removing ft32f0xx_debug.o(.text.DBGMCU_APB2PeriphConfig), (56 bytes).
    Removing ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_APB2PeriphConfig), (8 bytes).
    Removing ft32f0xx_dma.o(.text), (0 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_DeInit), (8 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_Init), (8 bytes).
    Removing ft32f0xx_dma.o(.text.DMA_StructInit), (58 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_StructInit), (8 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_Cmd), (8 bytes).
    Removing ft32f0xx_dma.o(.text.DMA_SetCurrDataCounter), (26 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_SetCurrDataCounter), (8 bytes).
    Removing ft32f0xx_dma.o(.text.DMA_GetCurrDataCounter), (18 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_GetCurrDataCounter), (8 bytes).
    Removing ft32f0xx_dma.o(.text.DMA_ITConfig), (60 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_ITConfig), (8 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_ClearFlag), (8 bytes).
    Removing ft32f0xx_dma.o(.text.DMA_GetITStatus), (76 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_GetITStatus), (8 bytes).
    Removing ft32f0xx_dma.o(.text.DMA_ClearITPendingBit), (40 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_exti.o(.text), (0 bytes).
    Removing ft32f0xx_exti.o(.text.EXTI_DeInit), (56 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_DeInit), (8 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_Init), (8 bytes).
    Removing ft32f0xx_exti.o(.text.EXTI_StructInit), (32 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_StructInit), (8 bytes).
    Removing ft32f0xx_exti.o(.text.EXTI_GenerateSWInterrupt), (28 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_GenerateSWInterrupt), (8 bytes).
    Removing ft32f0xx_exti.o(.text.EXTI_GetFlagStatus), (56 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_exti.o(.text.EXTI_ClearFlag), (24 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_ClearFlag), (8 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_GetITStatus), (8 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_flash.o(.text), (0 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_SetLatency), (48 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_SetLatency), (8 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_PrefetchBufferCmd), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_GetPrefetchBufferStatus), (48 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_GetPrefetchBufferStatus), (8 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_Unlock), (8 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_Lock), (8 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ErasePage), (8 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_EraseAllPages), (112 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_EraseAllPages), (8 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ProgramWord), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_Unlock), (44 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Unlock), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_Lock), (20 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Lock), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_Launch), (20 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Launch), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_Erase), (212 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Erase), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_GetRDP), (52 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_GetRDP), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_EnableWRP), (320 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_EnableWRP), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_RDPConfig), (240 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_RDPConfig), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_UserConfig), (244 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_UserConfig), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_BOOTConfig), (220 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_BOOTConfig), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_VDDAConfig), (220 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_VDDAConfig), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_SRAMParityConfig), (220 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_SRAMParityConfig), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_WriteUser), (220 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_WriteUser), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_ProgramData), (108 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_ProgramData), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_GetUser), (16 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_GetUser), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_GetWRP), (12 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_GetWRP), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_ITConfig), (56 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ITConfig), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_GetFlagStatus), (56 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_ClearFlag), (24 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ClearFlag), (8 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_GetStatus), (8 bytes).
    Removing ft32f0xx_gpio.o(.text), (0 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_DeInit), (8 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_StructInit), (44 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_StructInit), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_PinLockConfig), (66 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig), (8 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_ReadInputData), (16 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadInputData), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_ReadOutputDataBit), (62 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_ReadOutputData), (16 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_SetBits), (26 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_SetBits), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_ResetBits), (26 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ResetBits), (8 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_WriteBit), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_Write), (26 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_Write), (8 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_LedmConfig), (32 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_LedmConfig), (8 bytes).
    Removing ft32f0xx_i2c.o(.text), (0 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_DeInit), (84 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_DeInit), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_Init), (188 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_Init), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_StructInit), (46 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_StructInit), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_Cmd), (52 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_Cmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_SoftwareResetCmd), (38 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SoftwareResetCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_ITConfig), (60 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ITConfig), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_StretchClockCmd), (56 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_StretchClockCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_DualAddressCmd), (56 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_DualAddressCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_OwnAddress2Config), (80 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_OwnAddress2Config), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_GeneralCallCmd), (56 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_SlaveByteControlCmd), (56 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SlaveByteControlCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_SlaveAddressConfig), (68 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SlaveAddressConfig), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_10BitAddressingModeCmd), (56 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_10BitAddressingModeCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_AutoEndCmd), (56 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_AutoEndCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_ReloadCmd), (56 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ReloadCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_NumberOfBytesConfig), (58 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_NumberOfBytesConfig), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_MasterRequestConfig), (56 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_MasterRequestConfig), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_GenerateSTART), (56 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GenerateSTART), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_GenerateSTOP), (56 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_10BitAddressHeaderCmd), (56 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_10BitAddressHeaderCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_AcknowledgeConfig), (56 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_AcknowledgeConfig), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_GetAddressMatched), (24 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetAddressMatched), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_GetTransferDirection), (62 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetTransferDirection), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_TransferHandling), (100 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_TransferHandling), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_SMBusAlertCmd), (56 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SMBusAlertCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_ClockTimeoutCmd), (56 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ClockTimeoutCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_ExtendedClockTimeoutCmd), (56 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ExtendedClockTimeoutCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_IdleClockTimeoutCmd), (56 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_IdleClockTimeoutCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_TimeoutAConfig), (68 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_TimeoutAConfig), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_TimeoutBConfig), (60 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_TimeoutBConfig), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_CalculatePEC), (56 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_CalculatePEC), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_PECRequestCmd), (56 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_PECRequestCmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_GetPEC), (18 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetPEC), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_ReadRegister), (40 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ReadRegister), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_SendData), (26 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_SendData), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_ReceiveData), (18 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ReceiveData), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_DMACmd), (60 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_DMACmd), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_GetFlagStatus), (68 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_ClearFlag), (24 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ClearFlag), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_GetITStatus), (142 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_GetITStatus), (8 bytes).
    Removing ft32f0xx_i2c.o(.text.I2C_ClearITPendingBit), (24 bytes).
    Removing ft32f0xx_i2c.o(.ARM.exidx.text.I2C_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_iwdg.o(.text), (0 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_WriteAccessCmd), (8 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_SetPrescaler), (8 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_SetReload), (8 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_ReloadCounter), (8 bytes).
    Removing ft32f0xx_iwdg.o(.text.IWDG_SetWindowValue), (24 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_SetWindowValue), (8 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_Enable), (8 bytes).
    Removing ft32f0xx_iwdg.o(.text.IWDG_GetFlagStatus), (56 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_misc.o(.text), (0 bytes).
    Removing ft32f0xx_misc.o(.ARM.exidx.text.NVIC_Init), (8 bytes).
    Removing ft32f0xx_misc.o(.text.NVIC_SystemLPConfig), (64 bytes).
    Removing ft32f0xx_misc.o(.ARM.exidx.text.NVIC_SystemLPConfig), (8 bytes).
    Removing ft32f0xx_misc.o(.text.SysTick_CLKSourceConfig), (48 bytes).
    Removing ft32f0xx_misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig), (8 bytes).
    Removing ft32f0xx_pwr.o(.text), (0 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_DeInit), (34 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_DeInit), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_BackupAccessCmd), (56 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_BackupAccessCmd), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_PVDLevelConfig), (48 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_PVDLevelConfig), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_PVDCmd), (52 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_PVDCmd), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_WakeUpPinCmd), (56 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_WakeUpPinCmd), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_EnterSleepMode), (52 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_EnterSleepMode), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_EnterSTOPMode), (136 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_EnterSTOPMode), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_EnterSTANDBYMode), (32 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_EnterSTANDBYMode), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_GetFlagStatus), (56 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_ClearFlag), (28 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_ClearFlag), (8 bytes).
    Removing ft32f0xx_rcc.o(.text), (0 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_DeInit), (120 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_DeInit), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_HSEConfig), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSEConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_WaitForHSEStartUp), (110 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_WaitForHSEStartUp), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_GetFlagStatus), (152 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_AdjustHSICalibrationValue), (52 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_HSICmd), (52 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSICmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_AdjustHSI14CalibrationValue), (52 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AdjustHSI14CalibrationValue), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_HSI14Cmd), (52 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSI14Cmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_HSI14ADCRequestCmd), (52 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSI14ADCRequestCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_LSEConfig), (44 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_LSEConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_LSEDriveConfig), (36 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_LSEDriveConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_LSICmd), (52 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_LSICmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_PLLConfig), (48 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PLLConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_PLLCmd), (56 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PLLCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_HSI48Cmd), (56 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSI48Cmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_PREDIV1Config), (48 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PREDIV1Config), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_ClockSecuritySystemCmd), (56 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_MCOConfig), (64 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_MCOConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_SYSCLKConfig), (48 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_GetSYSCLKSource), (16 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_HCLKConfig), (48 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_PCLKConfig), (48 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_ADCCLKConfig), (64 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_I2CCLKConfig), (36 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_I2CCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_USARTCLKConfig), (56 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_USARTCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_USBCLKConfig), (36 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_USBCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_GetClocksFreq), (508 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_RTCCLKConfig), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_RTCCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_RTCCLKCmd), (56 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_RTCCLKCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_BackupResetCmd), (56 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_BackupResetCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AHBPeriphResetCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd), (56 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_ITConfig), (64 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ITConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_ClearFlag), (20 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ClearFlag), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_GetITStatus), (56 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetITStatus), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_ClearITPendingBit), (24 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_rcc.o(.rodata.APBAHBPrescTable), (16 bytes).
    Removing ft32f0xx_rtc.o(.text), (0 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_DeInit), (184 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_DeInit), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_EnterInitMode), (140 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_EnterInitMode), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_WaitForSynchro), (164 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_WaitForSynchro), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_Init), (124 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_Init), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_ExitInitMode), (32 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ExitInitMode), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_StructInit), (30 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_StructInit), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_WriteProtectionCmd), (48 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_WriteProtectionCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_RefClockCmd), (116 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_RefClockCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_BypassShadowCmd), (72 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_BypassShadowCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_SetTime), (304 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SetTime), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_Bcd2ToByte), (44 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_Bcd2ToByte), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_ByteToBcd2), (62 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ByteToBcd2), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TimeStructInit), (30 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TimeStructInit), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetTime), (140 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetTime), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetSubSecond), (36 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetSubSecond), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_SetDate), (304 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SetDate), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_DateStructInit), (32 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_DateStructInit), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetDate), (128 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetDate), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_SetAlarm), (308 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SetAlarm), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_AlarmStructInit), (44 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_AlarmStructInit), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetAlarm), (184 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetAlarm), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_AlarmCmd), (192 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_AlarmCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_AlarmSubSecondConfig), (72 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_AlarmSubSecondConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetAlarmSubSecond), (36 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetAlarmSubSecond), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_DayLightSavingConfig), (68 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_DayLightSavingConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetStoreOperation), (16 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetStoreOperation), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_OutputConfig), (68 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_OutputConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_CalibOutputCmd), (76 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_CalibOutputCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_CalibOutputConfig), (56 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_CalibOutputConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_SmoothCalibConfig), (176 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SmoothCalibConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TimeStampCmd), (104 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TimeStampCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetTimeStamp), (236 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetTimeStamp), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetTimeStampSubSecond), (12 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetTimeStampSubSecond), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TamperTriggerConfig), (60 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperTriggerConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TamperCmd), (56 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TamperFilterConfig), (36 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperFilterConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TamperSamplingFreqConfig), (36 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperSamplingFreqConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TamperPinsPrechargeDuration), (36 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperPinsPrechargeDuration), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TimeStampOnTamperDetectionCmd), (52 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TimeStampOnTamperDetectionCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TamperPullUpCmd), (56 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperPullUpCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_OutputTypeConfig), (36 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_OutputTypeConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_SynchroShiftConfig), (212 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SynchroShiftConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_ITConfig), (120 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ITConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetFlagStatus), (68 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_ClearFlag), (44 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ClearFlag), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetITStatus), (120 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetITStatus), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_ClearITPendingBit), (56 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_spi.o(.text), (0 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_I2S_DeInit), (100 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_DeInit), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_StructInit), (56 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_StructInit), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_Init), (152 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_Init), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_Cmd), (52 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_Cmd), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_TIModeCmd), (52 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_TIModeCmd), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_DataSizeConfig), (60 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_DataSizeConfig), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_RxFIFOThresholdConfig), (48 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_RxFIFOThresholdConfig), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_BiDirectionalLineConfig), (64 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_BiDirectionalLineConfig), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_NSSInternalSoftwareConfig), (60 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_NSSInternalSoftwareConfig), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_SSOutputCmd), (52 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_SSOutputCmd), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_NSSPulseModeCmd), (52 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_NSSPulseModeCmd), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_SendData8), (40 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_SendData8), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_I2S_SendData16), (26 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_SendData16), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_ReceiveData8), (30 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_ReceiveData8), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_I2S_ReceiveData16), (16 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_ReceiveData16), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_CRCLengthConfig), (48 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_CRCLengthConfig), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_CalculateCRC), (60 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_CalculateCRC), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_TransmitCRC), (24 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_TransmitCRC), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_GetCRC), (60 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_GetCRC), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_GetCRCPolynomial), (16 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_GetCRCPolynomial), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_I2S_DMACmd), (64 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_DMACmd), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_LastDMATransferCmd), (48 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_LastDMATransferCmd), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_I2S_ITConfig), (88 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_ITConfig), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_GetTransmissionFIFOStatus), (22 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_GetTransmissionFIFOStatus), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_GetReceptionFIFOStatus), (22 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_GetReceptionFIFOStatus), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_I2S_GetFlagStatus), (62 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_I2S_ClearFlag), (28 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_ClearFlag), (8 bytes).
    Removing ft32f0xx_spi.o(.text.SPI_I2S_GetITStatus), (126 bytes).
    Removing ft32f0xx_spi.o(.ARM.exidx.text.SPI_I2S_GetITStatus), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text), (0 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_DeInit), (60 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_DeInit), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_MemoryRemapConfig), (48 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_MemoryRemapConfig), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_DMAChannelRemapConfig), (56 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_DMAChannelRemapConfig), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_I2CFastModePlusConfig), (56 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_I2CFastModePlusConfig), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_IRDAEnvSelection), (36 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_IRDAEnvSelection), (8 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_EXTILineConfig), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_BreakConfig), (28 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_BreakConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text), (0 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_DeInit), (304 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_DeInit), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_TimeBaseInit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_TimeBaseStructInit), (36 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_PrescalerConfig), (42 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_PrescalerConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_CounterModeConfig), (56 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_CounterModeConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetCounter), (24 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCounter), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetAutoreload), (24 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetAutoreload), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetCounter), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCounter), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetPrescaler), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetPrescaler), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_UpdateDisableConfig), (52 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_UpdateRequestConfig), (52 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ARRPreloadConfig), (70 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectOnePulseMode), (42 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetClockDivision), (48 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetClockDivision), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_Cmd), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_BDTRConfig), (54 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_BDTRConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_BDTRStructInit), (42 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_BDTRStructInit), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1Init), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC2Init), (292 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2Init), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC3Init), (272 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3Init), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC4Init), (208 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4Init), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OCStructInit), (46 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OCStructInit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectOCxM), (162 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOCxM), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare1), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetCompare2), (24 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare2), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetCompare3), (24 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare3), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetCompare4), (24 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare4), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ForcedOC1Config), (56 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ForcedOC2Config), (64 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ForcedOC3Config), (56 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ForcedOC4Config), (64 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_CCPreloadControl), (52 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_CCPreloadControl), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC1PreloadConfig), (56 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC2PreloadConfig), (64 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC3PreloadConfig), (56 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC4PreloadConfig), (64 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC1FastConfig), (56 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1FastConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC2FastConfig), (64 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2FastConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC3FastConfig), (56 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3FastConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC4FastConfig), (64 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4FastConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ClearOC1Ref), (56 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ClearOC2Ref), (64 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ClearOC3Ref), (56 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ClearOC4Ref), (64 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC1PolarityConfig), (56 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC1NPolarityConfig), (56 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC2PolarityConfig), (58 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC2NPolarityConfig), (58 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC3PolarityConfig), (64 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC3NPolarityConfig), (64 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC4PolarityConfig), (64 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectOCREFClear), (42 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOCREFClear), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_CCxCmd), (68 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_CCxCmd), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_CCxNCmd), (68 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_CCxNCmd), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectCOM), (52 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectCOM), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ICInit), (190 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ICInit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TI1_Config), (144 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TI1_Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetIC1Prescaler), (42 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TI2_Config), (172 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TI2_Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetIC2Prescaler), (48 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TI3_Config), (168 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TI3_Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetIC3Prescaler), (42 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TI4_Config), (180 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TI4_Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetIC4Prescaler), (48 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ICStructInit), (36 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ICStructInit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_PWMIConfig), (218 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_PWMIConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetCapture1), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture1), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetCapture2), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture2), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetCapture3), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture3), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetCapture4), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture4), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ITConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GenerateEvent), (26 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GenerateEvent), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetFlagStatus), (62 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ClearFlag), (28 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearFlag), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetITStatus), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_DMAConfig), (42 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_DMAConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_DMACmd), (64 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_DMACmd), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectCCDMA), (52 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectCCDMA), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_InternalClockConfig), (22 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_InternalClockConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ITRxExternalClockConfig), (46 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectInputTrigger), (56 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_TIxExternalClockConfig), (102 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ETRClockMode1Config), (120 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ETRConfig), (82 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ETRConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ETRClockMode2Config), (80 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectOutputTrigger), (42 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectSlaveMode), (42 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectMasterSlaveMode), (42 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_EncoderInterfaceConfig), (156 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectHallSensor), (52 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectHallSensor), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_RemapConfig), (30 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_RemapConfig), (8 bytes).
    Removing ft32f0xx_usart.o(.text), (0 bytes).
    Removing ft32f0xx_usart.o(.text.USART_DeInit), (100 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_DeInit), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_Init), (332 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_Init), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_StructInit), (44 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_StructInit), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_ClockInit), (68 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_ClockInit), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_ClockStructInit), (30 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_ClockStructInit), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_Cmd), (52 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_Cmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_DirectionModeCmd), (60 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_DirectionModeCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_OverSampling8Cmd), (56 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_OneBitMethodCmd), (56 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_MSBFirstCmd), (56 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_MSBFirstCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_DataInvCmd), (56 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_DataInvCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_InvPinCmd), (60 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_InvPinCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_SWAPPinCmd), (56 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_SWAPPinCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_ReceiverTimeOutCmd), (56 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_ReceiverTimeOutCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_SetReceiverTimeOut), (42 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_SetReceiverTimeOut), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_AutoBaudRateCmd), (56 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_AutoBaudRateCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_AutoBaudRateConfig), (42 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_AutoBaudRateConfig), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_SendData), (36 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_SendData), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_ReceiveData), (24 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_ReceiveData), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_SetAddress), (46 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_SetAddress), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_MuteModeCmd), (56 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_MuteModeCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_MuteModeWakeUpConfig), (42 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_MuteModeWakeUpConfig), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_AddressDetectionConfig), (40 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_AddressDetectionConfig), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_HalfDuplexCmd), (52 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_DECmd), (56 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_DECmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_DEPolarityConfig), (42 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_DEPolarityConfig), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_SetDEAssertionTime), (44 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_SetDEAssertionTime), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_SetDEDeassertionTime), (44 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_SetDEDeassertionTime), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_DMACmd), (60 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_DMACmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_DMAReceptionErrorConfig), (42 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_DMAReceptionErrorConfig), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_ITConfig), (130 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_ITConfig), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_RequestCmd), (60 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_RequestCmd), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_OverrunDetectionConfig), (42 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_OverrunDetectionConfig), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_GetFlagStatus), (56 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_ClearFlag), (24 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_ClearFlag), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_GetITStatus), (162 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_GetITStatus), (8 bytes).
    Removing ft32f0xx_usart.o(.text.USART_ClearITPendingBit), (44 bytes).
    Removing ft32f0xx_usart.o(.ARM.exidx.text.USART_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_wwdg.o(.text), (0 bytes).
    Removing ft32f0xx_wwdg.o(.text.WWDG_DeInit), (34 bytes).
    Removing ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_DeInit), (8 bytes).
    Removing ft32f0xx_wwdg.o(.text.WWDG_SetPrescaler), (44 bytes).
    Removing ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_SetPrescaler), (8 bytes).
    Removing ft32f0xx_wwdg.o(.text.WWDG_SetWindowValue), (48 bytes).
    Removing ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_SetWindowValue), (8 bytes).
    Removing ft32f0xx_wwdg.o(.text.WWDG_EnableIT), (20 bytes).
    Removing ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_EnableIT), (8 bytes).
    Removing ft32f0xx_wwdg.o(.text.WWDG_SetCounter), (28 bytes).
    Removing ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_SetCounter), (8 bytes).
    Removing ft32f0xx_wwdg.o(.text.WWDG_Enable), (28 bytes).
    Removing ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_Enable), (8 bytes).
    Removing ft32f0xx_wwdg.o(.text.WWDG_GetFlagStatus), (48 bytes).
    Removing ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_wwdg.o(.text.WWDG_ClearFlag), (12 bytes).
    Removing ft32f0xx_wwdg.o(.ARM.exidx.text.WWDG_ClearFlag), (8 bytes).
    Removing startup_ft32f030x8.o(HEAP), (512 bytes).
    Removing system_ft32f0xx.o(.text), (0 bytes).
    Removing system_ft32f0xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_ft32f0xx.o(.ARM.exidx.text.SetSysClock), (8 bytes).
    Removing system_ft32f0xx.o(.text.SystemCoreClockUpdate), (208 bytes).
    Removing system_ft32f0xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_ft32f0xx.o(.ARM.exidx.text.SetSysClockTo72), (8 bytes).
    Removing system_ft32f0xx.o(.rodata.AHBPrescTable), (16 bytes).

1176 unused section(s) (total 41354 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/d2f.c                  0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/microlib/f2d.c                  0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  fadd.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  fcmple.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  fcmpge.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  fcmpgt.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmple.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmpge.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  ffixui.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixui.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  fflti.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltui.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    App.c                                    0x00000000   Number         0  app.o ABSOLUTE
    RTE\Device\FT32F030G8BUx\startup_ft32f030x8.s 0x00000000   Number         0  startup_ft32f030x8.o ABSOLUTE
    TaskManager.c                            0x00000000   Number         0  taskmanager.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    dev_ad9877.c                             0x00000000   Number         0  dev_ad9877.o ABSOLUTE
    dev_adc.c                                0x00000000   Number         0  dev_adc.o ABSOLUTE
    dev_exit.c                               0x00000000   Number         0  dev_exit.o ABSOLUTE
    dev_flash.c                              0x00000000   Number         0  dev_flash.o ABSOLUTE
    dev_gpio.c                               0x00000000   Number         0  dev_gpio.o ABSOLUTE
    dev_pid.c                                0x00000000   Number         0  dev_pid.o ABSOLUTE
    dev_pwm.c                                0x00000000   Number         0  dev_pwm.o ABSOLUTE
    ft32f0xx_adc.c                           0x00000000   Number         0  ft32f0xx_adc.o ABSOLUTE
    ft32f0xx_crc.c                           0x00000000   Number         0  ft32f0xx_crc.o ABSOLUTE
    ft32f0xx_crs.c                           0x00000000   Number         0  ft32f0xx_crs.o ABSOLUTE
    ft32f0xx_dac.c                           0x00000000   Number         0  ft32f0xx_dac.o ABSOLUTE
    ft32f0xx_debug.c                         0x00000000   Number         0  ft32f0xx_debug.o ABSOLUTE
    ft32f0xx_dma.c                           0x00000000   Number         0  ft32f0xx_dma.o ABSOLUTE
    ft32f0xx_exti.c                          0x00000000   Number         0  ft32f0xx_exti.o ABSOLUTE
    ft32f0xx_flash.c                         0x00000000   Number         0  ft32f0xx_flash.o ABSOLUTE
    ft32f0xx_gpio.c                          0x00000000   Number         0  ft32f0xx_gpio.o ABSOLUTE
    ft32f0xx_i2c.c                           0x00000000   Number         0  ft32f0xx_i2c.o ABSOLUTE
    ft32f0xx_it.c                            0x00000000   Number         0  ft32f0xx_it.o ABSOLUTE
    ft32f0xx_iwdg.c                          0x00000000   Number         0  ft32f0xx_iwdg.o ABSOLUTE
    ft32f0xx_misc.c                          0x00000000   Number         0  ft32f0xx_misc.o ABSOLUTE
    ft32f0xx_pwr.c                           0x00000000   Number         0  ft32f0xx_pwr.o ABSOLUTE
    ft32f0xx_rcc.c                           0x00000000   Number         0  ft32f0xx_rcc.o ABSOLUTE
    ft32f0xx_rtc.c                           0x00000000   Number         0  ft32f0xx_rtc.o ABSOLUTE
    ft32f0xx_spi.c                           0x00000000   Number         0  ft32f0xx_spi.o ABSOLUTE
    ft32f0xx_syscfg.c                        0x00000000   Number         0  ft32f0xx_syscfg.o ABSOLUTE
    ft32f0xx_tim.c                           0x00000000   Number         0  ft32f0xx_tim.o ABSOLUTE
    ft32f0xx_usart.c                         0x00000000   Number         0  ft32f0xx_usart.o ABSOLUTE
    ft32f0xx_wwdg.c                          0x00000000   Number         0  ft32f0xx_wwdg.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    system_ft32f0xx.c                        0x00000000   Number         0  system_ft32f0xx.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x08000000   Section      192  startup_ft32f030x8.o(RESET)
    .ARM.Collect$$$$00000000                 0x080000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x080000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x080000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x080000d4   Section       88  startup_ft32f030x8.o(.text)
    .text                                    0x0800012c   Section        0  uidiv.o(.text)
    .text                                    0x08000158   Section        0  memseta.o(.text)
    .text                                    0x0800017c   Section        0  fadd.o(.text)
    .text                                    0x0800022e   Section        0  fmul.o(.text)
    .text                                    0x080002a8   Section        0  fdiv.o(.text)
    .text                                    0x08000324   Section        0  dadd.o(.text)
    .text                                    0x08000488   Section        0  dmul.o(.text)
    .text                                    0x08000558   Section        0  ddiv.o(.text)
    .text                                    0x08000648   Section        0  fcmple.o(.text)
    .text                                    0x08000664   Section        0  fcmpge.o(.text)
    .text                                    0x08000680   Section        0  fcmpgt.o(.text)
    .text                                    0x0800069c   Section        0  dcmple.o(.text)
    .text                                    0x080006c8   Section        0  dcmpge.o(.text)
    .text                                    0x080006f4   Section        0  fflti.o(.text)
    .text                                    0x0800070c   Section        0  dflti.o(.text)
    .text                                    0x08000734   Section        0  dfltui.o(.text)
    .text                                    0x08000750   Section        0  ffixui.o(.text)
    .text                                    0x08000778   Section        0  dfixi.o(.text)
    .text                                    0x080007c0   Section        0  dfixui.o(.text)
    .text                                    0x080007fc   Section        0  f2d.o(.text)
    .text                                    0x08000824   Section        0  d2f.o(.text)
    .text                                    0x0800085c   Section        0  llshl.o(.text)
    .text                                    0x0800087c   Section        0  llushr.o(.text)
    .text                                    0x0800089e   Section        0  llsshr.o(.text)
    .text                                    0x080008c4   Section        0  iusefp.o(.text)
    .text                                    0x080008c4   Section        0  fepilogue.o(.text)
    .text                                    0x08000946   Section        0  depilogue.o(.text)
    .text                                    0x08000a04   Section       36  init.o(.text)
    AD9833_Delay                             0x08000a29   Thumb Code    36  dev_ad9877.o(.text.AD9833_Delay)
    [Anonymous Symbol]                       0x08000a28   Section        0  dev_ad9877.o(.text.AD9833_Delay)
    AD9833_FSYNC_Set                         0x08000a4d   Thumb Code    32  dev_ad9877.o(.text.AD9833_FSYNC_Set)
    [Anonymous Symbol]                       0x08000a4c   Section        0  dev_ad9877.o(.text.AD9833_FSYNC_Set)
    [Anonymous Symbol]                       0x08000a6c   Section        0  dev_ad9877.o(.text.AD9833_InitIo)
    AD9833_SCLK_Set                          0x08000a9f   Thumb Code    32  dev_ad9877.o(.text.AD9833_SCLK_Set)
    [Anonymous Symbol]                       0x08000a9e   Section        0  dev_ad9877.o(.text.AD9833_SCLK_Set)
    AD9833_SDATA_Set                         0x08000abf   Thumb Code    32  dev_ad9877.o(.text.AD9833_SDATA_Set)
    [Anonymous Symbol]                       0x08000abe   Section        0  dev_ad9877.o(.text.AD9833_SDATA_Set)
    AD9833_SendData                          0x08000adf   Thumb Code   184  dev_ad9877.o(.text.AD9833_SendData)
    [Anonymous Symbol]                       0x08000ade   Section        0  dev_ad9877.o(.text.AD9833_SendData)
    AD9833_SendFrequency                     0x08000b99   Thumb Code   208  dev_ad9877.o(.text.AD9833_SendFrequency)
    [Anonymous Symbol]                       0x08000b98   Section        0  dev_ad9877.o(.text.AD9833_SendFrequency)
    __arm_cp.2_0                             0x08000c58   Number         4  dev_ad9877.o(.text.AD9833_SendFrequency)
    __arm_cp.2_1                             0x08000c5c   Number         4  dev_ad9877.o(.text.AD9833_SendFrequency)
    __arm_cp.2_2                             0x08000c60   Number         4  dev_ad9877.o(.text.AD9833_SendFrequency)
    __arm_cp.2_3                             0x08000c64   Number         4  dev_ad9877.o(.text.AD9833_SendFrequency)
    AD9833_SendPhase                         0x08000c69   Thumb Code    54  dev_ad9877.o(.text.AD9833_SendPhase)
    [Anonymous Symbol]                       0x08000c68   Section        0  dev_ad9877.o(.text.AD9833_SendPhase)
    AD9833_SendWave                          0x08000c9f   Thumb Code    74  dev_ad9877.o(.text.AD9833_SendWave)
    [Anonymous Symbol]                       0x08000c9e   Section        0  dev_ad9877.o(.text.AD9833_SendWave)
    [Anonymous Symbol]                       0x08000ce8   Section        0  dev_ad9877.o(.text.AD9833_SetPara)
    ADCSample_Filter                         0x08000d9d   Thumb Code   238  dev_adc.o(.text.ADCSample_Filter)
    [Anonymous Symbol]                       0x08000d9c   Section        0  dev_adc.o(.text.ADCSample_Filter)
    [Anonymous Symbol]                       0x08000e8a   Section        0  ft32f0xx_adc.o(.text.ADC_ChannelConfig)
    [Anonymous Symbol]                       0x08000ec8   Section        0  ft32f0xx_adc.o(.text.ADC_Cmd)
    [Anonymous Symbol]                       0x08000efc   Section        0  ft32f0xx_adc.o(.text.ADC_DMACmd)
    [Anonymous Symbol]                       0x08000f30   Section        0  ft32f0xx_adc.o(.text.ADC_DMARequestModeConfig)
    ADC_DMA_Config                           0x08000f59   Thumb Code   280  main.o(.text.ADC_DMA_Config)
    [Anonymous Symbol]                       0x08000f58   Section        0  main.o(.text.ADC_DMA_Config)
    __arm_cp.4_1                             0x08001060   Number         4  main.o(.text.ADC_DMA_Config)
    __arm_cp.4_2                             0x08001064   Number         4  main.o(.text.ADC_DMA_Config)
    [Anonymous Symbol]                       0x08001068   Section        0  ft32f0xx_adc.o(.text.ADC_DeInit)
    __arm_cp.0_0                             0x0800109c   Number         4  ft32f0xx_adc.o(.text.ADC_DeInit)
    [Anonymous Symbol]                       0x080010a0   Section        0  ft32f0xx_adc.o(.text.ADC_GetCalibrationFactor)
    [Anonymous Symbol]                       0x08001122   Section        0  ft32f0xx_adc.o(.text.ADC_GetFlagStatus)
    [Anonymous Symbol]                       0x0800117c   Section        0  ft32f0xx_adc.o(.text.ADC_Init)
    __arm_cp.1_0                             0x080011c8   Number         4  ft32f0xx_adc.o(.text.ADC_Init)
    [Anonymous Symbol]                       0x080011cc   Section        0  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_0                             0x08001314   Number         4  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_1                             0x08001318   Number         4  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_2                             0x0800131c   Number         4  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_3                             0x08001320   Number         4  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_4                             0x08001324   Number         4  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_5                             0x08001328   Number         4  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_6                             0x0800132c   Number         4  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_7                             0x08001330   Number         4  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_8                             0x08001334   Number         4  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_9                             0x08001338   Number         4  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_10                            0x0800133c   Number         4  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_11                            0x08001340   Number         4  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_12                            0x08001344   Number         4  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_13                            0x08001348   Number         4  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_14                            0x0800134c   Number         4  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_15                            0x08001350   Number         4  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_16                            0x08001354   Number         4  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_17                            0x08001358   Number         4  dev_adc.o(.text.ADC_MainFunc)
    __arm_cp.1_18                            0x0800135c   Number         4  dev_adc.o(.text.ADC_MainFunc)
    [Anonymous Symbol]                       0x08001360   Section        0  ft32f0xx_adc.o(.text.ADC_StartOfConversion)
    [Anonymous Symbol]                       0x08001376   Section        0  ft32f0xx_adc.o(.text.ADC_StructInit)
    [Anonymous Symbol]                       0x0800139c   Section        0  app.o(.text.APP_Start)
    __arm_cp.4_0                             0x080013bc   Number         4  app.o(.text.APP_Start)
    __arm_cp.4_1                             0x080013c0   Number         4  app.o(.text.APP_Start)
    __arm_cp.4_2                             0x080013c4   Number         4  app.o(.text.APP_Start)
    [Anonymous Symbol]                       0x080013c8   Section        0  app.o(.text.Beep_MainFunc)
    __arm_cp.7_0                             0x08001570   Number         4  app.o(.text.Beep_MainFunc)
    __arm_cp.7_1                             0x08001574   Number         4  app.o(.text.Beep_MainFunc)
    __arm_cp.7_2                             0x08001578   Number         4  app.o(.text.Beep_MainFunc)
    __arm_cp.7_3                             0x0800157c   Number         4  app.o(.text.Beep_MainFunc)
    __arm_cp.7_4                             0x08001580   Number         4  app.o(.text.Beep_MainFunc)
    [Anonymous Symbol]                       0x08001584   Section        0  ft32f0xx_dma.o(.text.DMA_ClearFlag)
    [Anonymous Symbol]                       0x080015a8   Section        0  ft32f0xx_dma.o(.text.DMA_Cmd)
    [Anonymous Symbol]                       0x080015dc   Section        0  ft32f0xx_dma.o(.text.DMA_DeInit)
    __arm_cp.0_0                             0x08001680   Number         4  ft32f0xx_dma.o(.text.DMA_DeInit)
    __arm_cp.0_1                             0x08001684   Number         4  ft32f0xx_dma.o(.text.DMA_DeInit)
    __arm_cp.0_2                             0x08001688   Number         4  ft32f0xx_dma.o(.text.DMA_DeInit)
    __arm_cp.0_3                             0x0800168c   Number         4  ft32f0xx_dma.o(.text.DMA_DeInit)
    __arm_cp.0_4                             0x08001690   Number         4  ft32f0xx_dma.o(.text.DMA_DeInit)
    __arm_cp.0_5                             0x08001694   Number         4  ft32f0xx_dma.o(.text.DMA_DeInit)
    __arm_cp.0_6                             0x08001698   Number         4  ft32f0xx_dma.o(.text.DMA_DeInit)
    [Anonymous Symbol]                       0x0800169c   Section        0  ft32f0xx_dma.o(.text.DMA_GetFlagStatus)
    __arm_cp.7_0                             0x080016e4   Number         4  ft32f0xx_dma.o(.text.DMA_GetFlagStatus)
    [Anonymous Symbol]                       0x080016e8   Section        0  ft32f0xx_dma.o(.text.DMA_Init)
    __arm_cp.1_0                             0x08001754   Number         4  ft32f0xx_dma.o(.text.DMA_Init)
    [Anonymous Symbol]                       0x08001758   Section        0  dev_gpio.o(.text.DevGpio_SetOutPut)
    __arm_cp.0_0                             0x0800179c   Number         4  dev_gpio.o(.text.DevGpio_SetOutPut)
    [Anonymous Symbol]                       0x080017a0   Section        0  dev_pwm.o(.text.Devpwm_SetDuty)
    __arm_cp.0_0                             0x080017c4   Number         4  dev_pwm.o(.text.Devpwm_SetDuty)
    [Anonymous Symbol]                       0x080017c8   Section        0  ft32f0xx_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.4_0                             0x08001824   Number         4  ft32f0xx_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.4_1                             0x08001828   Number         4  ft32f0xx_it.o(.text.EXTI4_15_IRQHandler)
    [Anonymous Symbol]                       0x0800182c   Section        0  ft32f0xx_exti.o(.text.EXTI_ClearITPendingBit)
    [Anonymous Symbol]                       0x08001840   Section        0  ft32f0xx_exti.o(.text.EXTI_GetITStatus)
    __arm_cp.6_0                             0x08001874   Number         4  ft32f0xx_exti.o(.text.EXTI_GetITStatus)
    [Anonymous Symbol]                       0x08001878   Section        0  ft32f0xx_exti.o(.text.EXTI_Init)
    __arm_cp.1_0                             0x08001938   Number         4  ft32f0xx_exti.o(.text.EXTI_Init)
    __arm_cp.1_1                             0x0800193c   Number         4  ft32f0xx_exti.o(.text.EXTI_Init)
    __arm_cp.1_2                             0x08001940   Number         4  ft32f0xx_exti.o(.text.EXTI_Init)
    __arm_cp.1_3                             0x08001944   Number         4  ft32f0xx_exti.o(.text.EXTI_Init)
    [Anonymous Symbol]                       0x08001948   Section        0  ft32f0xx_flash.o(.text.FLASH_ErasePage)
    __arm_cp.5_1                             0x080019c0   Number         4  ft32f0xx_flash.o(.text.FLASH_ErasePage)
    [Anonymous Symbol]                       0x080019c4   Section        0  ft32f0xx_flash.o(.text.FLASH_GetStatus)
    __arm_cp.27_0                            0x08001a1c   Number         4  ft32f0xx_flash.o(.text.FLASH_GetStatus)
    [Anonymous Symbol]                       0x08001a20   Section        0  ft32f0xx_flash.o(.text.FLASH_Lock)
    [Anonymous Symbol]                       0x08001a2c   Section        0  ft32f0xx_flash.o(.text.FLASH_PrefetchBufferCmd)
    __arm_cp.1_0                             0x08001a5c   Number         4  ft32f0xx_flash.o(.text.FLASH_PrefetchBufferCmd)
    [Anonymous Symbol]                       0x08001a60   Section        0  ft32f0xx_flash.o(.text.FLASH_ProgramWord)
    [Anonymous Symbol]                       0x08001ad8   Section        0  ft32f0xx_flash.o(.text.FLASH_Unlock)
    __arm_cp.3_0                             0x08001af4   Number         4  ft32f0xx_flash.o(.text.FLASH_Unlock)
    __arm_cp.3_1                             0x08001af8   Number         4  ft32f0xx_flash.o(.text.FLASH_Unlock)
    __arm_cp.3_2                             0x08001afc   Number         4  ft32f0xx_flash.o(.text.FLASH_Unlock)
    __arm_cp.3_3                             0x08001b00   Number         4  ft32f0xx_flash.o(.text.FLASH_Unlock)
    [Anonymous Symbol]                       0x08001b04   Section        0  ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation)
    FT32_EXIT_Init                           0x08001b77   Thumb Code   116  main.o(.text.FT32_EXIT_Init)
    [Anonymous Symbol]                       0x08001b76   Section        0  main.o(.text.FT32_EXIT_Init)
    FT32_GPIOA_Init                          0x08001beb   Thumb Code    84  main.o(.text.FT32_GPIOA_Init)
    [Anonymous Symbol]                       0x08001bea   Section        0  main.o(.text.FT32_GPIOA_Init)
    FT32_GPIOB_Init                          0x08001c41   Thumb Code   116  main.o(.text.FT32_GPIOB_Init)
    [Anonymous Symbol]                       0x08001c40   Section        0  main.o(.text.FT32_GPIOB_Init)
    __arm_cp.2_1                             0x08001cac   Number         4  main.o(.text.FT32_GPIOB_Init)
    [Anonymous Symbol]                       0x08001cb0   Section        0  dev_flash.o(.text.Flash_Read)
    [Anonymous Symbol]                       0x08001d1a   Section        0  dev_flash.o(.text.Flash_Write)
    [Anonymous Symbol]                       0x08001ddc   Section        0  ft32f0xx_gpio.o(.text.GPIO_DeInit)
    __arm_cp.0_0                             0x08001eb4   Number         4  ft32f0xx_gpio.o(.text.GPIO_DeInit)
    __arm_cp.0_1                             0x08001eb8   Number         4  ft32f0xx_gpio.o(.text.GPIO_DeInit)
    __arm_cp.0_2                             0x08001ebc   Number         4  ft32f0xx_gpio.o(.text.GPIO_DeInit)
    __arm_cp.0_3                             0x08001ec0   Number         4  ft32f0xx_gpio.o(.text.GPIO_DeInit)
    [Anonymous Symbol]                       0x08001ec4   Section        0  ft32f0xx_gpio.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x08001fb0   Section        0  ft32f0xx_gpio.o(.text.GPIO_PinAFConfig)
    __arm_cp.12_0                            0x0800201c   Number         4  ft32f0xx_gpio.o(.text.GPIO_PinAFConfig)
    [Anonymous Symbol]                       0x08002020   Section        0  ft32f0xx_gpio.o(.text.GPIO_ReadInputDataBit)
    [Anonymous Symbol]                       0x08002060   Section        0  dev_gpio.o(.text.GPIO_ToggleBit)
    __arm_cp.2_0                             0x080020a8   Number         4  dev_gpio.o(.text.GPIO_ToggleBit)
    [Anonymous Symbol]                       0x080020ac   Section        0  ft32f0xx_gpio.o(.text.GPIO_WriteBit)
    [Anonymous Symbol]                       0x080020e4   Section        0  ft32f0xx_it.o(.text.HardFault_Handler)
    HighProTask                              0x080020e9   Thumb Code    22  app.o(.text.HighProTask)
    [Anonymous Symbol]                       0x080020e8   Section        0  app.o(.text.HighProTask)
    IWDG_Config                              0x08002101   Thumb Code    44  main.o(.text.IWDG_Config)
    [Anonymous Symbol]                       0x08002100   Section        0  main.o(.text.IWDG_Config)
    __arm_cp.10_0                            0x08002124   Number         4  main.o(.text.IWDG_Config)
    __arm_cp.10_1                            0x08002128   Number         4  main.o(.text.IWDG_Config)
    [Anonymous Symbol]                       0x0800212c   Section        0  ft32f0xx_iwdg.o(.text.IWDG_Enable)
    __arm_cp.5_1                             0x08002134   Number         4  ft32f0xx_iwdg.o(.text.IWDG_Enable)
    [Anonymous Symbol]                       0x08002138   Section        0  ft32f0xx_iwdg.o(.text.IWDG_ReloadCounter)
    __arm_cp.3_1                             0x08002140   Number         4  ft32f0xx_iwdg.o(.text.IWDG_ReloadCounter)
    [Anonymous Symbol]                       0x08002144   Section        0  ft32f0xx_iwdg.o(.text.IWDG_SetPrescaler)
    __arm_cp.1_0                             0x08002158   Number         4  ft32f0xx_iwdg.o(.text.IWDG_SetPrescaler)
    [Anonymous Symbol]                       0x0800215c   Section        0  ft32f0xx_iwdg.o(.text.IWDG_SetReload)
    __arm_cp.2_0                             0x08002170   Number         4  ft32f0xx_iwdg.o(.text.IWDG_SetReload)
    [Anonymous Symbol]                       0x08002174   Section        0  ft32f0xx_iwdg.o(.text.IWDG_WriteAccessCmd)
    __arm_cp.0_0                             0x08002188   Number         4  ft32f0xx_iwdg.o(.text.IWDG_WriteAccessCmd)
    [Anonymous Symbol]                       0x0800218c   Section        0  app.o(.text.InitTask1)
    __arm_cp.0_0                             0x08002200   Number         4  app.o(.text.InitTask1)
    __arm_cp.0_1                             0x08002204   Number         4  app.o(.text.InitTask1)
    __arm_cp.0_2                             0x08002208   Number         4  app.o(.text.InitTask1)
    __arm_cp.0_3                             0x0800220c   Number         4  app.o(.text.InitTask1)
    __arm_cp.0_4                             0x08002210   Number         4  app.o(.text.InitTask1)
    __arm_cp.0_5                             0x08002214   Number         4  app.o(.text.InitTask1)
    __arm_cp.0_6                             0x08002218   Number         4  app.o(.text.InitTask1)
    [Anonymous Symbol]                       0x0800221c   Section        0  app.o(.text.LED_Init)
    [Anonymous Symbol]                       0x08002238   Section        0  app.o(.text.LED_MainFunc)
    __arm_cp.6_0                             0x0800231c   Number         4  app.o(.text.LED_MainFunc)
    __arm_cp.6_1                             0x08002320   Number         4  app.o(.text.LED_MainFunc)
    __arm_cp.6_2                             0x08002324   Number         4  app.o(.text.LED_MainFunc)
    __arm_cp.6_4                             0x08002328   Number         4  app.o(.text.LED_MainFunc)
    [Anonymous Symbol]                       0x0800232c   Section        0  app.o(.text.Lipus_MainFunc)
    __arm_cp.10_0                            0x080024dc   Number         4  app.o(.text.Lipus_MainFunc)
    __arm_cp.10_1                            0x080024e0   Number         4  app.o(.text.Lipus_MainFunc)
    __arm_cp.10_2                            0x080024e4   Number         4  app.o(.text.Lipus_MainFunc)
    __arm_cp.10_3                            0x080024e8   Number         4  app.o(.text.Lipus_MainFunc)
    __arm_cp.10_4                            0x080024ec   Number         4  app.o(.text.Lipus_MainFunc)
    __arm_cp.10_5                            0x080024f0   Number         4  app.o(.text.Lipus_MainFunc)
    __arm_cp.10_6                            0x080024f4   Number         4  app.o(.text.Lipus_MainFunc)
    __arm_cp.10_7                            0x080024f8   Number         4  app.o(.text.Lipus_MainFunc)
    __arm_cp.10_8                            0x080024fc   Number         4  app.o(.text.Lipus_MainFunc)
    LowProTask                               0x08002501   Thumb Code    34  app.o(.text.LowProTask)
    [Anonymous Symbol]                       0x08002500   Section        0  app.o(.text.LowProTask)
    MediumProTask                            0x08002525   Thumb Code    40  app.o(.text.MediumProTask)
    [Anonymous Symbol]                       0x08002524   Section        0  app.o(.text.MediumProTask)
    __arm_cp.2_0                             0x08002548   Number         4  app.o(.text.MediumProTask)
    [Anonymous Symbol]                       0x0800254c   Section        0  ft32f0xx_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x08002550   Section        0  ft32f0xx_misc.o(.text.NVIC_Init)
    __arm_cp.0_0                             0x080025d4   Number         4  ft32f0xx_misc.o(.text.NVIC_Init)
    __arm_cp.0_1                             0x080025d8   Number         4  ft32f0xx_misc.o(.text.NVIC_Init)
    __arm_cp.0_2                             0x080025dc   Number         4  ft32f0xx_misc.o(.text.NVIC_Init)
    __arm_cp.0_3                             0x080025e0   Number         4  ft32f0xx_misc.o(.text.NVIC_Init)
    [Anonymous Symbol]                       0x080025e4   Section        0  dev_pid.o(.text.PIDController_Init)
    [Anonymous Symbol]                       0x08002642   Section        0  dev_pid.o(.text.PIDController_Update)
    [Anonymous Symbol]                       0x08002760   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x080027a0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x080027a4   Section        0  app.o(.text.Power_MainFunc)
    __arm_cp.11_1                            0x08002848   Number         4  app.o(.text.Power_MainFunc)
    [Anonymous Symbol]                       0x0800284c   Section        0  ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd)
    __arm_cp.30_0                            0x08002880   Number         4  ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd)
    [Anonymous Symbol]                       0x08002884   Section        0  ft32f0xx_rcc.o(.text.RCC_AHBPeriphResetCmd)
    __arm_cp.33_0                            0x080028b8   Number         4  ft32f0xx_rcc.o(.text.RCC_AHBPeriphResetCmd)
    [Anonymous Symbol]                       0x080028bc   Section        0  ft32f0xx_rcc.o(.text.RCC_APB1PeriphClockCmd)
    __arm_cp.32_0                            0x080028f0   Number         4  ft32f0xx_rcc.o(.text.RCC_APB1PeriphClockCmd)
    [Anonymous Symbol]                       0x080028f4   Section        0  ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd)
    __arm_cp.31_0                            0x08002928   Number         4  ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd)
    [Anonymous Symbol]                       0x0800292c   Section        0  ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd)
    __arm_cp.34_0                            0x08002960   Number         4  ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd)
    [Anonymous Symbol]                       0x08002964   Section        0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x08002968   Section        0  ft32f0xx_syscfg.o(.text.SYSCFG_EXTILineConfig)
    __arm_cp.5_0                             0x080029b8   Number         4  ft32f0xx_syscfg.o(.text.SYSCFG_EXTILineConfig)
    SetSysClock                              0x080029bd   Thumb Code     8  system_ft32f0xx.o(.text.SetSysClock)
    [Anonymous Symbol]                       0x080029bc   Section        0  system_ft32f0xx.o(.text.SetSysClock)
    SetSysClockTo72                          0x080029c5   Thumb Code   228  system_ft32f0xx.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x080029c4   Section        0  system_ft32f0xx.o(.text.SetSysClockTo72)
    __arm_cp.3_1                             0x08002a9c   Number         4  system_ft32f0xx.o(.text.SetSysClockTo72)
    Set_PWM1_Duty                            0x08002aa1   Thumb Code    48  dev_pwm.o(.text.Set_PWM1_Duty)
    [Anonymous Symbol]                       0x08002aa0   Section        0  dev_pwm.o(.text.Set_PWM1_Duty)
    __arm_cp.1_0                             0x08002acc   Number         4  dev_pwm.o(.text.Set_PWM1_Duty)
    Set_PWM2_Duty                            0x08002ad1   Thumb Code    60  dev_pwm.o(.text.Set_PWM2_Duty)
    [Anonymous Symbol]                       0x08002ad0   Section        0  dev_pwm.o(.text.Set_PWM2_Duty)
    __arm_cp.2_0                             0x08002b04   Number         4  dev_pwm.o(.text.Set_PWM2_Duty)
    __arm_cp.2_1                             0x08002b08   Number         4  dev_pwm.o(.text.Set_PWM2_Duty)
    Set_PWM3_Duty                            0x08002b0d   Thumb Code    60  dev_pwm.o(.text.Set_PWM3_Duty)
    [Anonymous Symbol]                       0x08002b0c   Section        0  dev_pwm.o(.text.Set_PWM3_Duty)
    __arm_cp.3_0                             0x08002b3c   Number         4  dev_pwm.o(.text.Set_PWM3_Duty)
    __arm_cp.3_1                             0x08002b40   Number         4  dev_pwm.o(.text.Set_PWM3_Duty)
    __arm_cp.3_2                             0x08002b44   Number         4  dev_pwm.o(.text.Set_PWM3_Duty)
    [Anonymous Symbol]                       0x08002b48   Section        0  app.o(.text.StandyDete)
    __arm_cp.13_1                            0x08002b78   Number         4  app.o(.text.StandyDete)
    __arm_cp.13_2                            0x08002b7c   Number         4  app.o(.text.StandyDete)
    [Anonymous Symbol]                       0x08002b80   Section        0  port.o(.text.SysTick_Handler)
    __arm_cp.13_0                            0x08002ba8   Number         4  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08002bac   Section        0  system_ft32f0xx.o(.text.SystemInit)
    __arm_cp.0_0                             0x08002c08   Number         4  system_ft32f0xx.o(.text.SystemInit)
    __arm_cp.0_1                             0x08002c0c   Number         4  system_ft32f0xx.o(.text.SystemInit)
    __arm_cp.0_2                             0x08002c10   Number         4  system_ft32f0xx.o(.text.SystemInit)
    __arm_cp.0_3                             0x08002c14   Number         4  system_ft32f0xx.o(.text.SystemInit)
    __arm_cp.0_4                             0x08002c18   Number         4  system_ft32f0xx.o(.text.SystemInit)
    __arm_cp.0_5                             0x08002c1c   Number         4  system_ft32f0xx.o(.text.SystemInit)
    __arm_cp.0_6                             0x08002c20   Number         4  system_ft32f0xx.o(.text.SystemInit)
    __arm_cp.0_7                             0x08002c24   Number         4  system_ft32f0xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08002c28   Section        0  ft32f0xx_it.o(.text.TIM14_IRQHandler)
    __arm_cp.2_0                             0x08002c80   Number         4  ft32f0xx_it.o(.text.TIM14_IRQHandler)
    __arm_cp.2_2                             0x08002c84   Number         4  ft32f0xx_it.o(.text.TIM14_IRQHandler)
    __arm_cp.2_3                             0x08002c88   Number         4  ft32f0xx_it.o(.text.TIM14_IRQHandler)
    [Anonymous Symbol]                       0x08002c8c   Section        0  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    __arm_cp.3_0                             0x08002ed0   Number         4  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    __arm_cp.3_1                             0x08002ed4   Number         4  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    __arm_cp.3_2                             0x08002ed8   Number         4  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    __arm_cp.3_3                             0x08002edc   Number         4  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    __arm_cp.3_4                             0x08002ee0   Number         4  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    __arm_cp.3_5                             0x08002ee4   Number         4  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    __arm_cp.3_6                             0x08002ee8   Number         4  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    __arm_cp.3_7                             0x08002eec   Number         4  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    __arm_cp.3_8                             0x08002ef0   Number         4  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    __arm_cp.3_9                             0x08002ef4   Number         4  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    __arm_cp.3_10                            0x08002ef8   Number         4  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    __arm_cp.3_11                            0x08002efc   Number         4  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    __arm_cp.3_12                            0x08002f00   Number         4  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    __arm_cp.3_13                            0x08002f04   Number         4  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    __arm_cp.3_14                            0x08002f08   Number         4  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    __arm_cp.3_15                            0x08002f0c   Number         4  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    __arm_cp.3_16                            0x08002f10   Number         4  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    [Anonymous Symbol]                       0x08002f14   Section        0  ft32f0xx_tim.o(.text.TIM_ClearITPendingBit)
    [Anonymous Symbol]                       0x08002f30   Section        0  ft32f0xx_tim.o(.text.TIM_Cmd)
    [Anonymous Symbol]                       0x08002f64   Section        0  ft32f0xx_tim.o(.text.TIM_CtrlPWMOutputs)
    __arm_cp.17_0                            0x08002fa0   Number         4  ft32f0xx_tim.o(.text.TIM_CtrlPWMOutputs)
    [Anonymous Symbol]                       0x08002fa4   Section        0  ft32f0xx_tim.o(.text.TIM_GetITStatus)
    [Anonymous Symbol]                       0x08003002   Section        0  ft32f0xx_tim.o(.text.TIM_ITConfig)
    [Anonymous Symbol]                       0x08003044   Section        0  ft32f0xx_tim.o(.text.TIM_OC1Init)
    __arm_cp.18_4                            0x08003148   Number         4  ft32f0xx_tim.o(.text.TIM_OC1Init)
    __arm_cp.18_5                            0x0800314c   Number         4  ft32f0xx_tim.o(.text.TIM_OC1Init)
    [Anonymous Symbol]                       0x08003150   Section        0  ft32f0xx_tim.o(.text.TIM_SetCompare1)
    [Anonymous Symbol]                       0x08003168   Section        0  ft32f0xx_tim.o(.text.TIM_TimeBaseInit)
    __arm_cp.1_0                             0x0800322c   Number         4  ft32f0xx_tim.o(.text.TIM_TimeBaseInit)
    __arm_cp.1_2                             0x08003230   Number         4  ft32f0xx_tim.o(.text.TIM_TimeBaseInit)
    __arm_cp.1_3                             0x08003234   Number         4  ft32f0xx_tim.o(.text.TIM_TimeBaseInit)
    __arm_cp.1_6                             0x08003238   Number         4  ft32f0xx_tim.o(.text.TIM_TimeBaseInit)
    Tim14BaseInit                            0x0800323d   Thumb Code   100  main.o(.text.Tim14BaseInit)
    [Anonymous Symbol]                       0x0800323c   Section        0  main.o(.text.Tim14BaseInit)
    __arm_cp.9_0                             0x08003298   Number         4  main.o(.text.Tim14BaseInit)
    __arm_cp.9_1                             0x0800329c   Number         4  main.o(.text.Tim14BaseInit)
    Tim15BaseInit                            0x080032a1   Thumb Code   172  main.o(.text.Tim15BaseInit)
    [Anonymous Symbol]                       0x080032a0   Section        0  main.o(.text.Tim15BaseInit)
    __arm_cp.6_0                             0x08003348   Number         4  main.o(.text.Tim15BaseInit)
    Tim16BaseInit                            0x0800334d   Thumb Code   180  main.o(.text.Tim16BaseInit)
    [Anonymous Symbol]                       0x0800334c   Section        0  main.o(.text.Tim16BaseInit)
    __arm_cp.7_0                             0x080033f8   Number         4  main.o(.text.Tim16BaseInit)
    __arm_cp.7_1                             0x080033fc   Number         4  main.o(.text.Tim16BaseInit)
    Tim17BaseInit                            0x08003401   Thumb Code   104  main.o(.text.Tim17BaseInit)
    [Anonymous Symbol]                       0x08003400   Section        0  main.o(.text.Tim17BaseInit)
    __arm_cp.8_0                             0x08003460   Number         4  main.o(.text.Tim17BaseInit)
    __arm_cp.8_1                             0x08003464   Number         4  main.o(.text.Tim17BaseInit)
    Tim3BaseInit                             0x08003469   Thumb Code   188  main.o(.text.Tim3BaseInit)
    [Anonymous Symbol]                       0x08003468   Section        0  main.o(.text.Tim3BaseInit)
    __arm_cp.5_0                             0x08003518   Number         4  main.o(.text.Tim3BaseInit)
    __arm_cp.5_1                             0x0800351c   Number         4  main.o(.text.Tim3BaseInit)
    __arm_cp.5_2                             0x08003520   Number         4  main.o(.text.Tim3BaseInit)
    [Anonymous Symbol]                       0x08003524   Section        0  dev_flash.o(.text.UltraParam_Init)
    __arm_cp.2_2                             0x080035b4   Number         4  dev_flash.o(.text.UltraParam_Init)
    [Anonymous Symbol]                       0x080035b8   Section        0  dev_flash.o(.text.UltraParam_Set)
    __arm_cp.3_0                             0x080036b8   Number         4  dev_flash.o(.text.UltraParam_Set)
    __arm_cp.3_1                             0x080036bc   Number         4  dev_flash.o(.text.UltraParam_Set)
    __arm_cp.3_2                             0x080036c0   Number         4  dev_flash.o(.text.UltraParam_Set)
    __arm_cp.3_3                             0x080036c4   Number         4  dev_flash.o(.text.UltraParam_Set)
    __arm_cp.3_4                             0x080036c8   Number         4  dev_flash.o(.text.UltraParam_Set)
    __arm_cp.3_5                             0x080036cc   Number         4  dev_flash.o(.text.UltraParam_Set)
    __arm_cp.3_6                             0x080036d0   Number         4  dev_flash.o(.text.UltraParam_Set)
    [Anonymous Symbol]                       0x080036d4   Section        0  dev_adc.o(.text.look1_iflf_binlxpw)
    [Anonymous Symbol]                       0x08003828   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x080038a8   Number         4  main.o(.text.main)
    __arm_cp.0_1                             0x080038ac   Number         4  main.o(.text.main)
    __arm_cp.0_2                             0x080038b0   Number         4  main.o(.text.main)
    __arm_cp.0_3                             0x080038b4   Number         4  main.o(.text.main)
    __arm_cp.0_4                             0x080038b8   Number         4  main.o(.text.main)
    __arm_cp.0_5                             0x080038bc   Number         4  main.o(.text.main)
    __arm_cp.0_6                             0x080038c0   Number         4  main.o(.text.main)
    __arm_cp.0_7                             0x080038c4   Number         4  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x080038c9   Thumb Code   148  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x080038c8   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    __arm_cp.8_0                             0x08003948   Number         4  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    __arm_cp.8_3                             0x0800394c   Number         4  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    __arm_cp.8_4                             0x08003950   Number         4  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x08003955   Thumb Code   232  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x08003954   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    __arm_cp.2_1                             0x08003a24   Number         4  tasks.o(.text.prvAddNewTaskToReadyList)
    __arm_cp.2_2                             0x08003a28   Number         4  tasks.o(.text.prvAddNewTaskToReadyList)
    __arm_cp.2_3                             0x08003a2c   Number         4  tasks.o(.text.prvAddNewTaskToReadyList)
    __arm_cp.2_4                             0x08003a30   Number         4  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckTasksWaitingTermination          0x08003a35   Thumb Code    84  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x08003a34   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    __arm_cp.52_0                            0x08003a7c   Number         4  tasks.o(.text.prvCheckTasksWaitingTermination)
    __arm_cp.52_2                            0x08003a80   Number         4  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvDeleteTCB                             0x08003a85   Thumb Code    28  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x08003a84   Section        0  tasks.o(.text.prvDeleteTCB)
    prvHeapInit                              0x08003aa1   Thumb Code   176  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x08003aa0   Section        0  heap_4.o(.text.prvHeapInit)
    __arm_cp.1_0                             0x08003b38   Number         4  heap_4.o(.text.prvHeapInit)
    __arm_cp.1_3                             0x08003b3c   Number         4  heap_4.o(.text.prvHeapInit)
    __arm_cp.1_4                             0x08003b40   Number         4  heap_4.o(.text.prvHeapInit)
    __arm_cp.1_5                             0x08003b44   Number         4  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x08003b49   Thumb Code    40  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x08003b48   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseNewTask                     0x08003b6d   Thumb Code   284  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x08003b6c   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x08003c89   Thumb Code   116  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x08003c88   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    __arm_cp.51_0                            0x08003ce0   Number         4  tasks.o(.text.prvInitialiseTaskLists)
    __arm_cp.51_1                            0x08003ce4   Number         4  tasks.o(.text.prvInitialiseTaskLists)
    __arm_cp.51_2                            0x08003ce8   Number         4  tasks.o(.text.prvInitialiseTaskLists)
    __arm_cp.51_3                            0x08003cec   Number         4  tasks.o(.text.prvInitialiseTaskLists)
    __arm_cp.51_4                            0x08003cf0   Number         4  tasks.o(.text.prvInitialiseTaskLists)
    __arm_cp.51_5                            0x08003cf4   Number         4  tasks.o(.text.prvInitialiseTaskLists)
    __arm_cp.51_6                            0x08003cf8   Number         4  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x08003cfd   Thumb Code   192  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x08003cfc   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    __arm_cp.2_0                             0x08003db4   Number         4  heap_4.o(.text.prvInsertBlockIntoFreeList)
    __arm_cp.2_1                             0x08003db8   Number         4  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvResetNextTaskUnblockTime              0x08003dbd   Thumb Code    56  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x08003dbc   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    __arm_cp.5_0                             0x08003dec   Number         4  tasks.o(.text.prvResetNextTaskUnblockTime)
    __arm_cp.5_1                             0x08003df0   Number         4  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvTaskExitError                         0x08003df5   Thumb Code    24  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x08003df4   Section        0  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x08003e0c   Section        0  heap_4.o(.text.pvPortMalloc)
    __arm_cp.0_0                             0x08003f80   Number         4  heap_4.o(.text.pvPortMalloc)
    __arm_cp.0_3                             0x08003f84   Number         4  heap_4.o(.text.pvPortMalloc)
    __arm_cp.0_4                             0x08003f88   Number         4  heap_4.o(.text.pvPortMalloc)
    __arm_cp.0_5                             0x08003f8c   Number         4  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x08003f90   Section        0  port.o(.text.pxPortInitialiseStack)
    __arm_cp.0_0                             0x08003fe4   Number         4  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x08003fe8   Section        0  port.o(.text.ulSetInterruptMaskFromISR)
    [Anonymous Symbol]                       0x08003ff0   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x0800403c   Section        0  taskmanager.o(.text.vApplicationMallocFailedHook)
    [Anonymous Symbol]                       0x08004042   Section        0  taskmanager.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x08004058   Section        0  taskmanager.o(.text.vApplicationTickHook)
    __arm_cp.3_0                             0x08004064   Number         4  taskmanager.o(.text.vApplicationTickHook)
    [Anonymous Symbol]                       0x08004068   Section        0  port.o(.text.vClearInterruptMaskFromISR)
    [Anonymous Symbol]                       0x0800406e   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x0800409e   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x080040b0   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x08004124   Section        0  list.o(.text.vListInsertEnd)
    [Anonymous Symbol]                       0x08004168   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x0800417c   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x08004194   Section        0  heap_4.o(.text.vPortFree)
    __arm_cp.3_0                             0x0800420c   Number         4  heap_4.o(.text.vPortFree)
    __arm_cp.3_1                             0x08004210   Number         4  heap_4.o(.text.vPortFree)
    __arm_cp.3_2                             0x08004214   Number         4  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x08004218   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    __arm_cp.4_0                             0x08004248   Number         4  port.o(.text.vPortSetupTimerInterrupt)
    __arm_cp.4_1                             0x0800424c   Number         4  port.o(.text.vPortSetupTimerInterrupt)
    __arm_cp.4_2                             0x08004250   Number         4  port.o(.text.vPortSetupTimerInterrupt)
    __arm_cp.4_3                             0x08004254   Number         4  port.o(.text.vPortSetupTimerInterrupt)
    vPortStartFirstTask                      0x08004261   Thumb Code    52  port.o(.text.vPortStartFirstTask)
    [Anonymous Symbol]                       0x08004260   Section        0  port.o(.text.vPortStartFirstTask)
    pxCurrentTCBConst2                       0x08004290   Number         0  port.o(.text.vPortStartFirstTask)
    [Anonymous Symbol]                       0x08004294   Section        0  port.o(.text.vPortYield)
    __arm_cp.7_0                             0x080042a8   Number         4  port.o(.text.vPortYield)
    [Anonymous Symbol]                       0x080042ac   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x080042ec   Section        0  tasks.o(.text.vTaskDelete)
    __arm_cp.3_1                             0x080043a4   Number         4  tasks.o(.text.vTaskDelete)
    __arm_cp.3_2                             0x080043a8   Number         4  tasks.o(.text.vTaskDelete)
    __arm_cp.3_3                             0x080043ac   Number         4  tasks.o(.text.vTaskDelete)
    __arm_cp.3_4                             0x080043b0   Number         4  tasks.o(.text.vTaskDelete)
    [Anonymous Symbol]                       0x080043b4   Section        0  tasks.o(.text.vTaskStartScheduler)
    __arm_cp.14_0                            0x0800440c   Number         4  tasks.o(.text.vTaskStartScheduler)
    __arm_cp.14_1                            0x08004410   Number         4  tasks.o(.text.vTaskStartScheduler)
    __arm_cp.14_2                            0x08004414   Number         4  tasks.o(.text.vTaskStartScheduler)
    __arm_cp.14_4                            0x08004418   Number         4  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x0800441c   Section        0  tasks.o(.text.vTaskSuspendAll)
    [Anonymous Symbol]                       0x08004428   Section        0  tasks.o(.text.vTaskSwitchContext)
    __arm_cp.25_2                            0x080044f4   Number         4  tasks.o(.text.vTaskSwitchContext)
    __arm_cp.25_3                            0x080044f8   Number         4  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x080044fc   Section        0  port.o(.text.xPortStartScheduler)
    __arm_cp.3_0                             0x08004534   Number         4  port.o(.text.xPortStartScheduler)
    __arm_cp.3_1                             0x08004538   Number         4  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x0800453c   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x080045e8   Section        0  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.17_0                            0x0800473c   Number         4  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.17_2                            0x08004740   Number         4  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.17_3                            0x08004744   Number         4  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.17_4                            0x08004748   Number         4  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.17_5                            0x0800474c   Number         4  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.17_6                            0x08004750   Number         4  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.17_7                            0x08004754   Number         4  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.17_8                            0x08004758   Number         4  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.17_9                            0x0800475c   Number         4  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.17_10                           0x08004760   Number         4  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x08004764   Section        0  tasks.o(.text.xTaskResumeAll)
    __arm_cp.9_0                             0x08004874   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.9_1                             0x08004878   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.9_2                             0x0800487c   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.9_3                             0x08004880   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.9_4                             0x08004884   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.9_5                             0x08004888   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.9_6                             0x0800488c   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.9_7                             0x08004890   Number         4  tasks.o(.text.xTaskResumeAll)
    i.__ARM_clz                              0x08004894   Section        0  depilogue.o(i.__ARM_clz)
    i.__scatterload_copy                     0x080048c2   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x080048d0   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x080048d2   Section       14  handlers.o(i.__scatterload_zeroinit)
    set_pwm_duty                             0x08004de0   Data          12  dev_pwm.o(.rodata.set_pwm_duty)
    [Anonymous Symbol]                       0x08004de0   Section        0  dev_pwm.o(.rodata.set_pwm_duty)
    .L.str                                   0x08004dec   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08004dec   Section        0  tasks.o(.rodata.str1.1)
    .L.str                                   0x08004df1   Data          12  app.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08004df1   Section        0  app.o(.rodata.str1.1)
    .L.str.1                                 0x08004dfd   Data          14  app.o(.rodata.str1.1)
    .L.str.2                                 0x08004e0b   Data          11  app.o(.rodata.str1.1)
    .L.str.3                                 0x08004e16   Data          10  app.o(.rodata.str1.1)
    Lipus_MainFunc.CycleDuty                 0x20000000   Data           1  app.o(.data.Lipus_MainFunc.CycleDuty)
    [Anonymous Symbol]                       0x20000000   Section        0  app.o(.data.Lipus_MainFunc.CycleDuty)
    TIM17_IRQHandler.Key2_Sta                0x20000048   Data           1  ft32f0xx_it.o(.data.TIM17_IRQHandler.Key2_Sta)
    [Anonymous Symbol]                       0x20000048   Section        0  ft32f0xx_it.o(.data.TIM17_IRQHandler.Key2_Sta)
    dev_gpio_handle                          0x2000004c   Data          96  dev_gpio.o(.data.dev_gpio_handle)
    [Anonymous Symbol]                       0x2000004c   Section        0  dev_gpio.o(.data.dev_gpio_handle)
    uxCriticalNesting                        0x200000b0   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x200000b0   Section        0  port.o(.data.uxCriticalNesting)
    ADC_MainFunc.SampleCount                 0x200000b8   Data           1  dev_adc.o(.bss.ADC_MainFunc.SampleCount)
    [Anonymous Symbol]                       0x200000b8   Section        0  dev_adc.o(.bss.ADC_MainFunc.SampleCount)
    Beep_MainFunc.BeepCount                  0x200000c0   Data           1  app.o(.bss.Beep_MainFunc.BeepCount)
    [Anonymous Symbol]                       0x200000c0   Section        0  app.o(.bss.Beep_MainFunc.BeepCount)
    Beep_MainFunc.BeepSta                    0x200000c1   Data           1  app.o(.bss.Beep_MainFunc.BeepSta)
    [Anonymous Symbol]                       0x200000c1   Section        0  app.o(.bss.Beep_MainFunc.BeepSta)
    StandyDete.StandyCount                   0x2000014c   Data           4  app.o(.bss.StandyDete.StandyCount)
    [Anonymous Symbol]                       0x2000014c   Section        0  app.o(.bss.StandyDete.StandyCount)
    TIM17_IRQHandler.Key1_Sta                0x20000150   Data           1  ft32f0xx_it.o(.bss.TIM17_IRQHandler.Key1_Sta)
    [Anonymous Symbol]                       0x20000150   Section        0  ft32f0xx_it.o(.bss.TIM17_IRQHandler.Key1_Sta)
    TIM17_IRQHandler.SetFlg                  0x20000151   Data           1  ft32f0xx_it.o(.bss.TIM17_IRQHandler.SetFlg)
    [Anonymous Symbol]                       0x20000151   Section        0  ft32f0xx_it.o(.bss.TIM17_IRQHandler.SetFlg)
    UltraParam_Set.Clear_Flg_old             0x20000152   Data           1  dev_flash.o(.bss.UltraParam_Set.Clear_Flg_old)
    [Anonymous Symbol]                       0x20000152   Section        0  dev_flash.o(.bss.UltraParam_Set.Clear_Flg_old)
    UltraParam_Set.SetFreq_Flg_old           0x20000153   Data           1  dev_flash.o(.bss.UltraParam_Set.SetFreq_Flg_old)
    [Anonymous Symbol]                       0x20000153   Section        0  dev_flash.o(.bss.UltraParam_Set.SetFreq_Flg_old)
    WorkTime                                 0x2000015c   Data           4  ft32f0xx_it.o(.bss.WorkTime)
    [Anonymous Symbol]                       0x2000015c   Section        0  ft32f0xx_it.o(.bss.WorkTime)
    pInitTaskHandle                          0x20000160   Data           4  app.o(.bss.pInitTaskHandle)
    [Anonymous Symbol]                       0x20000160   Section        0  app.o(.bss.pInitTaskHandle)
    pxDelayedTaskList                        0x20000168   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000168   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x2000016c   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x2000016c   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x20000170   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000170   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxReadyTasksLists                        0x20000174   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000174   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x200001d8   Data        3072  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x200001d8   Section        0  heap_4.o(.bss.ucHeap)
    ulSystemTimeTickCount                    0x20000dd8   Data           4  taskmanager.o(.bss.ulSystemTimeTickCount)
    [Anonymous Symbol]                       0x20000dd8   Section        0  taskmanager.o(.bss.ulSystemTimeTickCount)
    uxCurrentNumberOfTasks                   0x20000ddc   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20000ddc   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20000de0   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20000de0   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20000de4   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20000de4   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20000de8   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20000de8   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20000dec   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20000dec   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xBlockAllocatedBit                       0x20000df0   Data           4  heap_4.o(.bss.xBlockAllocatedBit)
    [Anonymous Symbol]                       0x20000df0   Section        0  heap_4.o(.bss.xBlockAllocatedBit)
    xDelayedTaskList1                        0x20000df4   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20000df4   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20000e08   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20000e08   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20000e1c   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20000e1c   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20000e20   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20000e20   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x20000e24   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20000e24   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20000e28   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20000e28   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20000e2c   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20000e2c   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20000e30   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20000e30   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20000e34   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20000e34   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20000e38   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20000e38   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20000e3c   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20000e3c   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20000e50   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20000e50   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20000e54   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20000e54   Section        0  heap_4.o(.bss.xStart)
    xTasksWaitingTermination                 0x20000e5c   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20000e5c   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20000e70   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20000e70   Section        0  tasks.o(.bss.xTickCount)
    xYieldPending                            0x20000e74   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20000e74   Section        0  tasks.o(.bss.xYieldPending)
    STACK                                    0x20000e78   Section     1024  startup_ft32f030x8.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x000000c0   Number         0  startup_ft32f030x8.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_ft32f030x8.o(RESET)
    __Vectors_End                            0x080000c0   Data           0  startup_ft32f030x8.o(RESET)
    __main                                   0x080000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x080000d5   Thumb Code    38  startup_ft32f030x8.o(.text)
    ADC1_IRQHandler                          0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    DMA1_Channel1_IRQHandler                 0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    DMA1_Channel2_3_IRQHandler               0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    DMA1_Channel4_5_IRQHandler               0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    EXTI0_1_IRQHandler                       0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    EXTI2_3_IRQHandler                       0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    FLASH_IRQHandler                         0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    I2C1_IRQHandler                          0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    I2C2_IRQHandler                          0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    PVD_VDDIO_IRQHandler                     0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    RCC_IRQHandler                           0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    RTC_IRQHandler                           0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    SPI1_IRQHandler                          0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    SPI2_IRQHandler                          0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    TIM15_IRQHandler                         0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    TIM16_IRQHandler                         0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    TIM1_CC_IRQHandler                       0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    TIM3_IRQHandler                          0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    TIM6_IRQHandler                          0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    USART1_IRQHandler                        0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    USART2_IRQHandler                        0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    USB_IRQHandler                           0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    WWDG_IRQHandler                          0x08000105   Thumb Code     0  startup_ft32f030x8.o(.text)
    __aeabi_uidiv                            0x0800012d   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x0800012d   Thumb Code    44  uidiv.o(.text)
    __aeabi_memset                           0x08000159   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x08000159   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x08000159   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x08000167   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x08000167   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x08000167   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x0800016b   Thumb Code    18  memseta.o(.text)
    __aeabi_fadd                             0x0800017d   Thumb Code   162  fadd.o(.text)
    __aeabi_fsub                             0x0800021f   Thumb Code     8  fadd.o(.text)
    __aeabi_frsub                            0x08000227   Thumb Code     8  fadd.o(.text)
    __aeabi_fmul                             0x0800022f   Thumb Code   122  fmul.o(.text)
    __aeabi_fdiv                             0x080002a9   Thumb Code   124  fdiv.o(.text)
    __aeabi_dadd                             0x08000325   Thumb Code   328  dadd.o(.text)
    __aeabi_dsub                             0x0800046d   Thumb Code    12  dadd.o(.text)
    __aeabi_drsub                            0x08000479   Thumb Code    12  dadd.o(.text)
    __aeabi_dmul                             0x08000489   Thumb Code   202  dmul.o(.text)
    __aeabi_ddiv                             0x08000559   Thumb Code   234  ddiv.o(.text)
    __aeabi_fcmple                           0x08000649   Thumb Code    28  fcmple.o(.text)
    __aeabi_fcmpge                           0x08000665   Thumb Code    28  fcmpge.o(.text)
    __aeabi_fcmpgt                           0x08000681   Thumb Code    28  fcmpgt.o(.text)
    __aeabi_dcmple                           0x0800069d   Thumb Code    44  dcmple.o(.text)
    __aeabi_dcmpge                           0x080006c9   Thumb Code    44  dcmpge.o(.text)
    __aeabi_i2f                              0x080006f5   Thumb Code    22  fflti.o(.text)
    __aeabi_i2d                              0x0800070d   Thumb Code    34  dflti.o(.text)
    __aeabi_ui2d                             0x08000735   Thumb Code    24  dfltui.o(.text)
    __aeabi_f2uiz                            0x08000751   Thumb Code    40  ffixui.o(.text)
    __aeabi_d2iz                             0x08000779   Thumb Code    62  dfixi.o(.text)
    __aeabi_d2uiz                            0x080007c1   Thumb Code    50  dfixui.o(.text)
    __aeabi_f2d                              0x080007fd   Thumb Code    40  f2d.o(.text)
    __aeabi_d2f                              0x08000825   Thumb Code    56  d2f.o(.text)
    __aeabi_llsl                             0x0800085d   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x0800085d   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x0800087d   Thumb Code    34  llushr.o(.text)
    _ll_ushift_r                             0x0800087d   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x0800089f   Thumb Code    38  llsshr.o(.text)
    _ll_sshift_r                             0x0800089f   Thumb Code     0  llsshr.o(.text)
    __I$use$fp                               0x080008c5   Thumb Code     0  iusefp.o(.text)
    _float_round                             0x080008c5   Thumb Code    16  fepilogue.o(.text)
    _float_epilogue                          0x080008d5   Thumb Code   114  fepilogue.o(.text)
    _double_round                            0x08000947   Thumb Code    26  depilogue.o(.text)
    _double_epilogue                         0x08000961   Thumb Code   164  depilogue.o(.text)
    __scatterload                            0x08000a05   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x08000a05   Thumb Code     0  init.o(.text)
    AD9833_InitIo                            0x08000a6d   Thumb Code    50  dev_ad9877.o(.text.AD9833_InitIo)
    AD9833_SetPara                           0x08000ce9   Thumb Code   180  dev_ad9877.o(.text.AD9833_SetPara)
    ADC_ChannelConfig                        0x08000e8b   Thumb Code    62  ft32f0xx_adc.o(.text.ADC_ChannelConfig)
    ADC_Cmd                                  0x08000ec9   Thumb Code    52  ft32f0xx_adc.o(.text.ADC_Cmd)
    ADC_DMACmd                               0x08000efd   Thumb Code    52  ft32f0xx_adc.o(.text.ADC_DMACmd)
    ADC_DMARequestModeConfig                 0x08000f31   Thumb Code    40  ft32f0xx_adc.o(.text.ADC_DMARequestModeConfig)
    ADC_DeInit                               0x08001069   Thumb Code    56  ft32f0xx_adc.o(.text.ADC_DeInit)
    ADC_GetCalibrationFactor                 0x080010a1   Thumb Code   130  ft32f0xx_adc.o(.text.ADC_GetCalibrationFactor)
    ADC_GetFlagStatus                        0x08001123   Thumb Code    90  ft32f0xx_adc.o(.text.ADC_GetFlagStatus)
    ADC_Init                                 0x0800117d   Thumb Code    80  ft32f0xx_adc.o(.text.ADC_Init)
    ADC_MainFunc                             0x080011cd   Thumb Code   404  dev_adc.o(.text.ADC_MainFunc)
    ADC_StartOfConversion                    0x08001361   Thumb Code    22  ft32f0xx_adc.o(.text.ADC_StartOfConversion)
    ADC_StructInit                           0x08001377   Thumb Code    38  ft32f0xx_adc.o(.text.ADC_StructInit)
    APP_Start                                0x0800139d   Thumb Code    44  app.o(.text.APP_Start)
    Beep_MainFunc                            0x080013c9   Thumb Code   444  app.o(.text.Beep_MainFunc)
    DMA_ClearFlag                            0x08001585   Thumb Code    40  ft32f0xx_dma.o(.text.DMA_ClearFlag)
    DMA_Cmd                                  0x080015a9   Thumb Code    56  ft32f0xx_dma.o(.text.DMA_Cmd)
    DMA_DeInit                               0x080015dd   Thumb Code   192  ft32f0xx_dma.o(.text.DMA_DeInit)
    DMA_GetFlagStatus                        0x0800169d   Thumb Code    76  ft32f0xx_dma.o(.text.DMA_GetFlagStatus)
    DMA_Init                                 0x080016e9   Thumb Code   112  ft32f0xx_dma.o(.text.DMA_Init)
    DevGpio_SetOutPut                        0x08001759   Thumb Code    72  dev_gpio.o(.text.DevGpio_SetOutPut)
    Devpwm_SetDuty                           0x080017a1   Thumb Code    40  dev_pwm.o(.text.Devpwm_SetDuty)
    EXTI4_15_IRQHandler                      0x080017c9   Thumb Code   100  ft32f0xx_it.o(.text.EXTI4_15_IRQHandler)
    EXTI_ClearITPendingBit                   0x0800182d   Thumb Code    24  ft32f0xx_exti.o(.text.EXTI_ClearITPendingBit)
    EXTI_GetITStatus                         0x08001841   Thumb Code    56  ft32f0xx_exti.o(.text.EXTI_GetITStatus)
    EXTI_Init                                0x08001879   Thumb Code   208  ft32f0xx_exti.o(.text.EXTI_Init)
    FLASH_ErasePage                          0x08001949   Thumb Code   128  ft32f0xx_flash.o(.text.FLASH_ErasePage)
    FLASH_GetStatus                          0x080019c5   Thumb Code    92  ft32f0xx_flash.o(.text.FLASH_GetStatus)
    FLASH_Lock                               0x08001a21   Thumb Code    16  ft32f0xx_flash.o(.text.FLASH_Lock)
    FLASH_PrefetchBufferCmd                  0x08001a2d   Thumb Code    52  ft32f0xx_flash.o(.text.FLASH_PrefetchBufferCmd)
    FLASH_ProgramWord                        0x08001a61   Thumb Code   124  ft32f0xx_flash.o(.text.FLASH_ProgramWord)
    FLASH_Unlock                             0x08001ad9   Thumb Code    44  ft32f0xx_flash.o(.text.FLASH_Unlock)
    FLASH_WaitForLastOperation               0x08001b05   Thumb Code   114  ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation)
    Flash_Read                               0x08001cb1   Thumb Code   106  dev_flash.o(.text.Flash_Read)
    Flash_Write                              0x08001d1b   Thumb Code   192  dev_flash.o(.text.Flash_Write)
    GPIO_DeInit                              0x08001ddd   Thumb Code   232  ft32f0xx_gpio.o(.text.GPIO_DeInit)
    GPIO_Init                                0x08001ec5   Thumb Code   236  ft32f0xx_gpio.o(.text.GPIO_Init)
    GPIO_PinAFConfig                         0x08001fb1   Thumb Code   112  ft32f0xx_gpio.o(.text.GPIO_PinAFConfig)
    GPIO_ReadInputDataBit                    0x08002021   Thumb Code    62  ft32f0xx_gpio.o(.text.GPIO_ReadInputDataBit)
    GPIO_ToggleBit                           0x08002061   Thumb Code    76  dev_gpio.o(.text.GPIO_ToggleBit)
    GPIO_WriteBit                            0x080020ad   Thumb Code    56  ft32f0xx_gpio.o(.text.GPIO_WriteBit)
    HardFault_Handler                        0x080020e5   Thumb Code     4  ft32f0xx_it.o(.text.HardFault_Handler)
    IWDG_Enable                              0x0800212d   Thumb Code    16  ft32f0xx_iwdg.o(.text.IWDG_Enable)
    IWDG_ReloadCounter                       0x08002139   Thumb Code    16  ft32f0xx_iwdg.o(.text.IWDG_ReloadCounter)
    IWDG_SetPrescaler                        0x08002145   Thumb Code    24  ft32f0xx_iwdg.o(.text.IWDG_SetPrescaler)
    IWDG_SetReload                           0x0800215d   Thumb Code    24  ft32f0xx_iwdg.o(.text.IWDG_SetReload)
    IWDG_WriteAccessCmd                      0x08002175   Thumb Code    24  ft32f0xx_iwdg.o(.text.IWDG_WriteAccessCmd)
    InitTask1                                0x0800218d   Thumb Code   144  app.o(.text.InitTask1)
    LED_Init                                 0x0800221d   Thumb Code    28  app.o(.text.LED_Init)
    LED_MainFunc                             0x08002239   Thumb Code   248  app.o(.text.LED_MainFunc)
    Lipus_MainFunc                           0x0800232d   Thumb Code   468  app.o(.text.Lipus_MainFunc)
    NMI_Handler                              0x0800254d   Thumb Code     2  ft32f0xx_it.o(.text.NMI_Handler)
    NVIC_Init                                0x08002551   Thumb Code   148  ft32f0xx_misc.o(.text.NVIC_Init)
    PIDController_Init                       0x080025e5   Thumb Code    94  dev_pid.o(.text.PIDController_Init)
    PIDController_Update                     0x08002643   Thumb Code   272  dev_pid.o(.text.PIDController_Update)
    PendSV_Handler                           0x08002761   Thumb Code    68  port.o(.text.PendSV_Handler)
    Power_MainFunc                           0x080027a5   Thumb Code   184  app.o(.text.Power_MainFunc)
    RCC_AHBPeriphClockCmd                    0x0800284d   Thumb Code    56  ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd)
    RCC_AHBPeriphResetCmd                    0x08002885   Thumb Code    56  ft32f0xx_rcc.o(.text.RCC_AHBPeriphResetCmd)
    RCC_APB1PeriphClockCmd                   0x080028bd   Thumb Code    56  ft32f0xx_rcc.o(.text.RCC_APB1PeriphClockCmd)
    RCC_APB2PeriphClockCmd                   0x080028f5   Thumb Code    56  ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd)
    RCC_APB2PeriphResetCmd                   0x0800292d   Thumb Code    56  ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd)
    SVC_Handler                              0x08002965   Thumb Code     2  port.o(.text.SVC_Handler)
    SYSCFG_EXTILineConfig                    0x08002969   Thumb Code    84  ft32f0xx_syscfg.o(.text.SYSCFG_EXTILineConfig)
    StandyDete                               0x08002b49   Thumb Code    60  app.o(.text.StandyDete)
    SysTick_Handler                          0x08002b81   Thumb Code    44  port.o(.text.SysTick_Handler)
    SystemInit                               0x08002bad   Thumb Code   124  system_ft32f0xx.o(.text.SystemInit)
    TIM14_IRQHandler                         0x08002c29   Thumb Code   108  ft32f0xx_it.o(.text.TIM14_IRQHandler)
    TIM17_IRQHandler                         0x08002c8d   Thumb Code   648  ft32f0xx_it.o(.text.TIM17_IRQHandler)
    TIM_ClearITPendingBit                    0x08002f15   Thumb Code    28  ft32f0xx_tim.o(.text.TIM_ClearITPendingBit)
    TIM_Cmd                                  0x08002f31   Thumb Code    52  ft32f0xx_tim.o(.text.TIM_Cmd)
    TIM_CtrlPWMOutputs                       0x08002f65   Thumb Code    64  ft32f0xx_tim.o(.text.TIM_CtrlPWMOutputs)
    TIM_GetITStatus                          0x08002fa5   Thumb Code    94  ft32f0xx_tim.o(.text.TIM_GetITStatus)
    TIM_ITConfig                             0x08003003   Thumb Code    64  ft32f0xx_tim.o(.text.TIM_ITConfig)
    TIM_OC1Init                              0x08003045   Thumb Code   284  ft32f0xx_tim.o(.text.TIM_OC1Init)
    TIM_SetCompare1                          0x08003151   Thumb Code    24  ft32f0xx_tim.o(.text.TIM_SetCompare1)
    TIM_TimeBaseInit                         0x08003169   Thumb Code   224  ft32f0xx_tim.o(.text.TIM_TimeBaseInit)
    UltraParam_Init                          0x08003525   Thumb Code   156  dev_flash.o(.text.UltraParam_Init)
    UltraParam_Set                           0x080035b9   Thumb Code   284  dev_flash.o(.text.UltraParam_Set)
    look1_iflf_binlxpw                       0x080036d5   Thumb Code   340  dev_adc.o(.text.look1_iflf_binlxpw)
    main                                     0x08003829   Thumb Code   160  main.o(.text.main)
    pvPortMalloc                             0x08003e0d   Thumb Code   396  heap_4.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x08003f91   Thumb Code    88  port.o(.text.pxPortInitialiseStack)
    ulSetInterruptMaskFromISR                0x08003fe9   Thumb Code     8  port.o(.text.ulSetInterruptMaskFromISR)
    uxListRemove                             0x08003ff1   Thumb Code    76  list.o(.text.uxListRemove)
    vApplicationMallocFailedHook             0x0800403d   Thumb Code     6  taskmanager.o(.text.vApplicationMallocFailedHook)
    vApplicationStackOverflowHook            0x08004043   Thumb Code    20  taskmanager.o(.text.vApplicationStackOverflowHook)
    vApplicationTickHook                     0x08004059   Thumb Code    16  taskmanager.o(.text.vApplicationTickHook)
    vClearInterruptMaskFromISR               0x08004069   Thumb Code     6  port.o(.text.vClearInterruptMaskFromISR)
    vListInitialise                          0x0800406f   Thumb Code    48  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x0800409f   Thumb Code    18  list.o(.text.vListInitialiseItem)
    vListInsert                              0x080040b1   Thumb Code   116  list.o(.text.vListInsert)
    vListInsertEnd                           0x08004125   Thumb Code    66  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x08004169   Thumb Code    24  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x0800417d   Thumb Code    28  port.o(.text.vPortExitCritical)
    vPortFree                                0x08004195   Thumb Code   132  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x08004219   Thumb Code    64  port.o(.text.vPortSetupTimerInterrupt)
    vPortYield                               0x08004295   Thumb Code    24  port.o(.text.vPortYield)
    vTaskDelay                               0x080042ad   Thumb Code    64  tasks.o(.text.vTaskDelay)
    vTaskDelete                              0x080042ed   Thumb Code   208  tasks.o(.text.vTaskDelete)
    vTaskStartScheduler                      0x080043b5   Thumb Code   112  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x0800441d   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x08004429   Thumb Code   228  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x080044fd   Thumb Code    64  port.o(.text.xPortStartScheduler)
    xTaskCreate                              0x0800453d   Thumb Code   170  tasks.o(.text.xTaskCreate)
    xTaskIncrementTick                       0x080045e9   Thumb Code   384  tasks.o(.text.xTaskIncrementTick)
    xTaskResumeAll                           0x08004765   Thumb Code   304  tasks.o(.text.xTaskResumeAll)
    __ARM_clz                                0x08004895   Thumb Code    46  depilogue.o(i.__ARM_clz)
    __scatterload_copy                       0x080048c3   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x080048d1   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x080048d3   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    INP_HWTemp1_R                            0x080048e0   Data         640  dev_adc.o(.rodata.INP_HWTemp1_R)
    OUT_HWTemp1_T                            0x08004b60   Data         640  dev_adc.o(.rodata.OUT_HWTemp1_T)
    Region$$Table$$Base                      0x08004e20   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08004e40   Number         0  anon$$obj.o(Region$$Table)
    Motor_Level                              0x20000001   Data           1  ft32f0xx_it.o(.data.Motor_Level)
    PowerOff_Flg                             0x20000002   Data           1  main.o(.data.PowerOff_Flg)
    SampleVol_Buff                           0x20000004   Data          64  dev_adc.o(.data.SampleVol_Buff)
    SystemCoreClock                          0x20000044   Data           4  system_ft32f0xx.o(.data.SystemCoreClock)
    UltraModule                              0x20000049   Data           1  ft32f0xx_it.o(.data.UltraModule)
    lsi_freq                                 0x200000ac   Data           4  main.o(.data.lsi_freq)
    Battery_vol                              0x200000bc   Data           4  dev_adc.o(.bss.Battery_vol)
    Beep_SatrtFlg                            0x200000c2   Data           1  ft32f0xx_it.o(.bss.Beep_SatrtFlg)
    Clear_Flg                                0x200000c3   Data           1  ft32f0xx_it.o(.bss.Clear_Flg)
    CycleTime                                0x200000c4   Data           2  ft32f0xx_it.o(.bss.CycleTime)
    DMA_DualConvertedValue                   0x200000c8   Data           4  main.o(.bss.DMA_DualConvertedValue)
    Data_Store                               0x200000cc   Data           4  dev_flash.o(.bss.Data_Store)
    KEY1_Count                               0x200000d0   Data           4  ft32f0xx_it.o(.bss.KEY1_Count)
    KEY1_Flg                                 0x200000d4   Data           1  ft32f0xx_it.o(.bss.KEY1_Flg)
    KEY2_Count                               0x200000d8   Data           4  ft32f0xx_it.o(.bss.KEY2_Count)
    KEY2_Flg                                 0x200000dc   Data           1  ft32f0xx_it.o(.bss.KEY2_Flg)
    Led_GreenFlg                             0x200000dd   Data           1  app.o(.bss.Led_GreenFlg)
    Led_RedFlg                               0x200000de   Data           1  app.o(.bss.Led_RedFlg)
    POWER_Count                              0x200000e0   Data           4  ft32f0xx_it.o(.bss.POWER_Count)
    Pid_Contronl                             0x200000e4   Data          32  dev_pid.o(.bss.Pid_Contronl)
    PowerOn_Flg                              0x20000104   Data           1  ft32f0xx_it.o(.bss.PowerOn_Flg)
    SampleTemp_Buff                          0x20000108   Data          64  dev_adc.o(.bss.SampleTemp_Buff)
    SetFreq_Flg                              0x20000148   Data           1  ft32f0xx_it.o(.bss.SetFreq_Flg)
    Ultra_Temp                               0x20000154   Data           4  dev_adc.o(.bss.Ultra_Temp)
    WorkStart_Flg                            0x20000158   Data           1  ft32f0xx_it.o(.bss.WorkStart_Flg)
    pxCurrentTCB                             0x20000164   Data           4  tasks.o(.bss.pxCurrentTCB)
    __initial_sp                             0x20001278   Data           0  startup_ft32f030x8.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000d5

  Load Region LR_1 (Base: 0x08000000, Size: 0x00004ef4, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00004e40, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000c0   Data   RO         1631    RESET               startup_ft32f030x8.o
    0x080000c0   0x080000c0   0x00000000   Code   RO         1656  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x080000c0   0x080000c0   0x00000004   Code   RO         1705    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x080000c4   0x080000c4   0x00000004   Code   RO         1708    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO         1710    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO         1712    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x080000c8   0x080000c8   0x00000008   Code   RO         1713    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO         1715    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO         1717    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x080000d0   0x080000d0   0x00000004   Code   RO         1706    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x080000d4   0x080000d4   0x00000058   Code   RO         1632  * .text               startup_ft32f030x8.o
    0x0800012c   0x0800012c   0x0000002c   Code   RO         1659    .text               mc_p.l(uidiv.o)
    0x08000158   0x08000158   0x00000024   Code   RO         1663    .text               mc_p.l(memseta.o)
    0x0800017c   0x0800017c   0x000000b2   Code   RO         1667    .text               mf_p.l(fadd.o)
    0x0800022e   0x0800022e   0x0000007a   Code   RO         1669    .text               mf_p.l(fmul.o)
    0x080002a8   0x080002a8   0x0000007c   Code   RO         1671    .text               mf_p.l(fdiv.o)
    0x08000324   0x08000324   0x00000164   Code   RO         1673    .text               mf_p.l(dadd.o)
    0x08000488   0x08000488   0x000000d0   Code   RO         1675    .text               mf_p.l(dmul.o)
    0x08000558   0x08000558   0x000000f0   Code   RO         1677    .text               mf_p.l(ddiv.o)
    0x08000648   0x08000648   0x0000001c   Code   RO         1679    .text               mf_p.l(fcmple.o)
    0x08000664   0x08000664   0x0000001c   Code   RO         1681    .text               mf_p.l(fcmpge.o)
    0x08000680   0x08000680   0x0000001c   Code   RO         1683    .text               mf_p.l(fcmpgt.o)
    0x0800069c   0x0800069c   0x0000002c   Code   RO         1685    .text               mf_p.l(dcmple.o)
    0x080006c8   0x080006c8   0x0000002c   Code   RO         1687    .text               mf_p.l(dcmpge.o)
    0x080006f4   0x080006f4   0x00000016   Code   RO         1689    .text               mf_p.l(fflti.o)
    0x0800070a   0x0800070a   0x00000002   PAD
    0x0800070c   0x0800070c   0x00000028   Code   RO         1691    .text               mf_p.l(dflti.o)
    0x08000734   0x08000734   0x0000001c   Code   RO         1693    .text               mf_p.l(dfltui.o)
    0x08000750   0x08000750   0x00000028   Code   RO         1695    .text               mf_p.l(ffixui.o)
    0x08000778   0x08000778   0x00000048   Code   RO         1697    .text               mf_p.l(dfixi.o)
    0x080007c0   0x080007c0   0x0000003c   Code   RO         1699    .text               mf_p.l(dfixui.o)
    0x080007fc   0x080007fc   0x00000028   Code   RO         1701    .text               mf_p.l(f2d.o)
    0x08000824   0x08000824   0x00000038   Code   RO         1703    .text               mf_p.l(d2f.o)
    0x0800085c   0x0800085c   0x00000020   Code   RO         1719    .text               mc_p.l(llshl.o)
    0x0800087c   0x0800087c   0x00000022   Code   RO         1721    .text               mc_p.l(llushr.o)
    0x0800089e   0x0800089e   0x00000026   Code   RO         1723    .text               mc_p.l(llsshr.o)
    0x080008c4   0x080008c4   0x00000000   Code   RO         1725    .text               mc_p.l(iusefp.o)
    0x080008c4   0x080008c4   0x00000082   Code   RO         1726    .text               mf_p.l(fepilogue.o)
    0x08000946   0x08000946   0x000000be   Code   RO         1728    .text               mf_p.l(depilogue.o)
    0x08000a04   0x08000a04   0x00000024   Code   RO         1732    .text               mc_p.l(init.o)
    0x08000a28   0x08000a28   0x00000024   Code   RO          456    .text.AD9833_Delay  dev_ad9877.o
    0x08000a4c   0x08000a4c   0x00000020   Code   RO          450    .text.AD9833_FSYNC_Set  dev_ad9877.o
    0x08000a6c   0x08000a6c   0x00000032   Code   RO          448    .text.AD9833_InitIo  dev_ad9877.o
    0x08000a9e   0x08000a9e   0x00000020   Code   RO          452    .text.AD9833_SCLK_Set  dev_ad9877.o
    0x08000abe   0x08000abe   0x00000020   Code   RO          454    .text.AD9833_SDATA_Set  dev_ad9877.o
    0x08000ade   0x08000ade   0x000000b8   Code   RO          440    .text.AD9833_SendData  dev_ad9877.o
    0x08000b96   0x08000b96   0x00000002   PAD
    0x08000b98   0x08000b98   0x000000d0   Code   RO          442    .text.AD9833_SendFrequency  dev_ad9877.o
    0x08000c68   0x08000c68   0x00000036   Code   RO          444    .text.AD9833_SendPhase  dev_ad9877.o
    0x08000c9e   0x08000c9e   0x0000004a   Code   RO          446    .text.AD9833_SendWave  dev_ad9877.o
    0x08000ce8   0x08000ce8   0x000000b4   Code   RO          438    .text.AD9833_SetPara  dev_ad9877.o
    0x08000d9c   0x08000d9c   0x000000ee   Code   RO          470    .text.ADCSample_Filter  dev_adc.o
    0x08000e8a   0x08000e8a   0x0000003e   Code   RO          583    .text.ADC_ChannelConfig  ft32f0xx_adc.o
    0x08000ec8   0x08000ec8   0x00000034   Code   RO          559    .text.ADC_Cmd       ft32f0xx_adc.o
    0x08000efc   0x08000efc   0x00000034   Code   RO          599    .text.ADC_DMACmd    ft32f0xx_adc.o
    0x08000f30   0x08000f30   0x00000028   Code   RO          601    .text.ADC_DMARequestModeConfig  ft32f0xx_adc.o
    0x08000f58   0x08000f58   0x00000110   Code   RO           45    .text.ADC_DMA_Config  main.o
    0x08001068   0x08001068   0x00000038   Code   RO          553    .text.ADC_DeInit    ft32f0xx_adc.o
    0x080010a0   0x080010a0   0x00000082   Code   RO          591    .text.ADC_GetCalibrationFactor  ft32f0xx_adc.o
    0x08001122   0x08001122   0x0000005a   Code   RO          605    .text.ADC_GetFlagStatus  ft32f0xx_adc.o
    0x0800117c   0x0800117c   0x00000050   Code   RO          555    .text.ADC_Init      ft32f0xx_adc.o
    0x080011cc   0x080011cc   0x00000194   Code   RO          468    .text.ADC_MainFunc  dev_adc.o
    0x08001360   0x08001360   0x00000016   Code   RO          595    .text.ADC_StartOfConversion  ft32f0xx_adc.o
    0x08001376   0x08001376   0x00000026   Code   RO          557    .text.ADC_StructInit  ft32f0xx_adc.o
    0x0800139c   0x0800139c   0x0000002c   Code   RO          399    .text.APP_Start     app.o
    0x080013c8   0x080013c8   0x000001bc   Code   RO          405    .text.Beep_MainFunc  app.o
    0x08001584   0x08001584   0x00000024   Code   RO          761    .text.DMA_ClearFlag  ft32f0xx_dma.o
    0x080015a8   0x080015a8   0x00000034   Code   RO          751    .text.DMA_Cmd       ft32f0xx_dma.o
    0x080015dc   0x080015dc   0x000000c0   Code   RO          745    .text.DMA_DeInit    ft32f0xx_dma.o
    0x0800169c   0x0800169c   0x0000004c   Code   RO          759    .text.DMA_GetFlagStatus  ft32f0xx_dma.o
    0x080016e8   0x080016e8   0x00000070   Code   RO          747    .text.DMA_Init      ft32f0xx_dma.o
    0x08001758   0x08001758   0x00000048   Code   RO          507    .text.DevGpio_SetOutPut  dev_gpio.o
    0x080017a0   0x080017a0   0x00000028   Code   RO          536    .text.Devpwm_SetDuty  dev_pwm.o
    0x080017c8   0x080017c8   0x00000064   Code   RO           10    .text.EXTI4_15_IRQHandler  ft32f0xx_it.o
    0x0800182c   0x0800182c   0x00000014   Code   RO          789    .text.EXTI_ClearITPendingBit  ft32f0xx_exti.o
    0x08001840   0x08001840   0x00000038   Code   RO          787    .text.EXTI_GetITStatus  ft32f0xx_exti.o
    0x08001878   0x08001878   0x000000d0   Code   RO          777    .text.EXTI_Init     ft32f0xx_exti.o
    0x08001948   0x08001948   0x0000007c   Code   RO          809    .text.FLASH_ErasePage  ft32f0xx_flash.o
    0x080019c4   0x080019c4   0x0000005c   Code   RO          853    .text.FLASH_GetStatus  ft32f0xx_flash.o
    0x08001a20   0x08001a20   0x0000000c   Code   RO          807    .text.FLASH_Lock    ft32f0xx_flash.o
    0x08001a2c   0x08001a2c   0x00000034   Code   RO          801    .text.FLASH_PrefetchBufferCmd  ft32f0xx_flash.o
    0x08001a60   0x08001a60   0x00000078   Code   RO          815    .text.FLASH_ProgramWord  ft32f0xx_flash.o
    0x08001ad8   0x08001ad8   0x0000002c   Code   RO          805    .text.FLASH_Unlock  ft32f0xx_flash.o
    0x08001b04   0x08001b04   0x00000072   Code   RO          811    .text.FLASH_WaitForLastOperation  ft32f0xx_flash.o
    0x08001b76   0x08001b76   0x00000074   Code   RO           43    .text.FT32_EXIT_Init  main.o
    0x08001bea   0x08001bea   0x00000054   Code   RO           39    .text.FT32_GPIOA_Init  main.o
    0x08001c3e   0x08001c3e   0x00000002   PAD
    0x08001c40   0x08001c40   0x00000070   Code   RO           41    .text.FT32_GPIOB_Init  main.o
    0x08001cb0   0x08001cb0   0x0000006a   Code   RO          490    .text.Flash_Read    dev_flash.o
    0x08001d1a   0x08001d1a   0x000000c0   Code   RO          488    .text.Flash_Write   dev_flash.o
    0x08001dda   0x08001dda   0x00000002   PAD
    0x08001ddc   0x08001ddc   0x000000e8   Code   RO          863    .text.GPIO_DeInit   ft32f0xx_gpio.o
    0x08001ec4   0x08001ec4   0x000000ec   Code   RO          865    .text.GPIO_Init     ft32f0xx_gpio.o
    0x08001fb0   0x08001fb0   0x00000070   Code   RO          887    .text.GPIO_PinAFConfig  ft32f0xx_gpio.o
    0x08002020   0x08002020   0x0000003e   Code   RO          871    .text.GPIO_ReadInputDataBit  ft32f0xx_gpio.o
    0x0800205e   0x0800205e   0x00000002   PAD
    0x08002060   0x08002060   0x0000004c   Code   RO          511    .text.GPIO_ToggleBit  dev_gpio.o
    0x080020ac   0x080020ac   0x00000038   Code   RO          883    .text.GPIO_WriteBit  ft32f0xx_gpio.o
    0x080020e4   0x080020e4   0x00000004   Code   RO            4    .text.HardFault_Handler  ft32f0xx_it.o
    0x080020e8   0x080020e8   0x00000016   Code   RO          393    .text.HighProTask   app.o
    0x080020fe   0x080020fe   0x00000002   PAD
    0x08002100   0x08002100   0x0000002c   Code   RO           57    .text.IWDG_Config   main.o
    0x0800212c   0x0800212c   0x0000000c   Code   RO          999    .text.IWDG_Enable   ft32f0xx_iwdg.o
    0x08002138   0x08002138   0x0000000c   Code   RO          995    .text.IWDG_ReloadCounter  ft32f0xx_iwdg.o
    0x08002144   0x08002144   0x00000018   Code   RO          991    .text.IWDG_SetPrescaler  ft32f0xx_iwdg.o
    0x0800215c   0x0800215c   0x00000018   Code   RO          993    .text.IWDG_SetReload  ft32f0xx_iwdg.o
    0x08002174   0x08002174   0x00000018   Code   RO          989    .text.IWDG_WriteAccessCmd  ft32f0xx_iwdg.o
    0x0800218c   0x0800218c   0x00000090   Code   RO          391    .text.InitTask1     app.o
    0x0800221c   0x0800221c   0x0000001c   Code   RO          401    .text.LED_Init      app.o
    0x08002238   0x08002238   0x000000f4   Code   RO          403    .text.LED_MainFunc  app.o
    0x0800232c   0x0800232c   0x000001d4   Code   RO          411    .text.Lipus_MainFunc  app.o
    0x08002500   0x08002500   0x00000022   Code   RO          397    .text.LowProTask    app.o
    0x08002522   0x08002522   0x00000002   PAD
    0x08002524   0x08002524   0x00000028   Code   RO          395    .text.MediumProTask  app.o
    0x0800254c   0x0800254c   0x00000002   Code   RO            2    .text.NMI_Handler   ft32f0xx_it.o
    0x0800254e   0x0800254e   0x00000002   PAD
    0x08002550   0x08002550   0x00000094   Code   RO         1011    .text.NVIC_Init     ft32f0xx_misc.o
    0x080025e4   0x080025e4   0x0000005e   Code   RO          523    .text.PIDController_Init  dev_pid.o
    0x08002642   0x08002642   0x00000110   Code   RO          525    .text.PIDController_Update  dev_pid.o
    0x08002752   0x08002752   0x0000000e   PAD
    0x08002760   0x08002760   0x00000044   Code   RO          378    .text.PendSV_Handler  port.o
    0x080027a4   0x080027a4   0x000000a8   Code   RO          413    .text.Power_MainFunc  app.o
    0x0800284c   0x0800284c   0x00000038   Code   RO         1113    .text.RCC_AHBPeriphClockCmd  ft32f0xx_rcc.o
    0x08002884   0x08002884   0x00000038   Code   RO         1119    .text.RCC_AHBPeriphResetCmd  ft32f0xx_rcc.o
    0x080028bc   0x080028bc   0x00000038   Code   RO         1117    .text.RCC_APB1PeriphClockCmd  ft32f0xx_rcc.o
    0x080028f4   0x080028f4   0x00000038   Code   RO         1115    .text.RCC_APB2PeriphClockCmd  ft32f0xx_rcc.o
    0x0800292c   0x0800292c   0x00000038   Code   RO         1121    .text.RCC_APB2PeriphResetCmd  ft32f0xx_rcc.o
    0x08002964   0x08002964   0x00000002   Code   RO          358    .text.SVC_Handler   port.o
    0x08002966   0x08002966   0x00000002   PAD
    0x08002968   0x08002968   0x00000054   Code   RO         1318    .text.SYSCFG_EXTILineConfig  ft32f0xx_syscfg.o
    0x080029bc   0x080029bc   0x00000008   Code   RO         1641    .text.SetSysClock   system_ft32f0xx.o
    0x080029c4   0x080029c4   0x000000dc   Code   RO         1645    .text.SetSysClockTo72  system_ft32f0xx.o
    0x08002aa0   0x08002aa0   0x00000030   Code   RO          538    .text.Set_PWM1_Duty  dev_pwm.o
    0x08002ad0   0x08002ad0   0x0000003c   Code   RO          540    .text.Set_PWM2_Duty  dev_pwm.o
    0x08002b0c   0x08002b0c   0x0000003c   Code   RO          542    .text.Set_PWM3_Duty  dev_pwm.o
    0x08002b48   0x08002b48   0x00000038   Code   RO          417    .text.StandyDete    app.o
    0x08002b80   0x08002b80   0x0000002c   Code   RO          380    .text.SysTick_Handler  port.o
    0x08002bac   0x08002bac   0x0000007c   Code   RO         1639    .text.SystemInit    system_ft32f0xx.o
    0x08002c28   0x08002c28   0x00000064   Code   RO            6    .text.TIM14_IRQHandler  ft32f0xx_it.o
    0x08002c8c   0x08002c8c   0x00000288   Code   RO            8    .text.TIM17_IRQHandler  ft32f0xx_it.o
    0x08002f14   0x08002f14   0x0000001c   Code   RO         1482    .text.TIM_ClearITPendingBit  ft32f0xx_tim.o
    0x08002f30   0x08002f30   0x00000034   Code   RO         1358    .text.TIM_Cmd       ft32f0xx_tim.o
    0x08002f64   0x08002f64   0x00000040   Code   RO         1364    .text.TIM_CtrlPWMOutputs  ft32f0xx_tim.o
    0x08002fa4   0x08002fa4   0x0000005e   Code   RO         1480    .text.TIM_GetITStatus  ft32f0xx_tim.o
    0x08003002   0x08003002   0x00000040   Code   RO         1472    .text.TIM_ITConfig  ft32f0xx_tim.o
    0x08003042   0x08003042   0x00000002   PAD
    0x08003044   0x08003044   0x0000010c   Code   RO         1366    .text.TIM_OC1Init   ft32f0xx_tim.o
    0x08003150   0x08003150   0x00000018   Code   RO         1378    .text.TIM_SetCompare1  ft32f0xx_tim.o
    0x08003168   0x08003168   0x000000d4   Code   RO         1332    .text.TIM_TimeBaseInit  ft32f0xx_tim.o
    0x0800323c   0x0800323c   0x00000064   Code   RO           55    .text.Tim14BaseInit  main.o
    0x080032a0   0x080032a0   0x000000ac   Code   RO           49    .text.Tim15BaseInit  main.o
    0x0800334c   0x0800334c   0x000000b4   Code   RO           51    .text.Tim16BaseInit  main.o
    0x08003400   0x08003400   0x00000068   Code   RO           53    .text.Tim17BaseInit  main.o
    0x08003468   0x08003468   0x000000bc   Code   RO           47    .text.Tim3BaseInit  main.o
    0x08003524   0x08003524   0x00000094   Code   RO          492    .text.UltraParam_Init  dev_flash.o
    0x080035b8   0x080035b8   0x0000011c   Code   RO          494    .text.UltraParam_Set  dev_flash.o
    0x080036d4   0x080036d4   0x00000154   Code   RO          466    .text.look1_iflf_binlxpw  dev_adc.o
    0x08003828   0x08003828   0x000000a0   Code   RO           37    .text.main          main.o
    0x080038c8   0x080038c8   0x0000008c   Code   RO          202    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x08003954   0x08003954   0x000000e0   Code   RO          190    .text.prvAddNewTaskToReadyList  tasks.o
    0x08003a34   0x08003a34   0x00000050   Code   RO          290    .text.prvCheckTasksWaitingTermination  tasks.o
    0x08003a84   0x08003a84   0x0000001c   Code   RO          194    .text.prvDeleteTCB  tasks.o
    0x08003aa0   0x08003aa0   0x000000a8   Code   RO          324    .text.prvHeapInit   heap_4.o
    0x08003b48   0x08003b48   0x00000024   Code   RO          216    .text.prvIdleTask   tasks.o
    0x08003b6c   0x08003b6c   0x0000011c   Code   RO          188    .text.prvInitialiseNewTask  tasks.o
    0x08003c88   0x08003c88   0x00000074   Code   RO          288    .text.prvInitialiseTaskLists  tasks.o
    0x08003cfc   0x08003cfc   0x000000c0   Code   RO          326    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x08003dbc   0x08003dbc   0x00000038   Code   RO          196    .text.prvResetNextTaskUnblockTime  tasks.o
    0x08003df4   0x08003df4   0x00000018   Code   RO          356    .text.prvTaskExitError  port.o
    0x08003e0c   0x08003e0c   0x00000184   Code   RO          322    .text.pvPortMalloc  heap_4.o
    0x08003f90   0x08003f90   0x00000058   Code   RO          354    .text.pxPortInitialiseStack  port.o
    0x08003fe8   0x08003fe8   0x00000008   Code   RO          374    .text.ulSetInterruptMaskFromISR  port.o
    0x08003ff0   0x08003ff0   0x0000004c   Code   RO           99    .text.uxListRemove  list.o
    0x0800403c   0x0800403c   0x00000006   Code   RO           78    .text.vApplicationMallocFailedHook  taskmanager.o
    0x08004042   0x08004042   0x00000014   Code   RO           80    .text.vApplicationStackOverflowHook  taskmanager.o
    0x08004056   0x08004056   0x00000002   PAD
    0x08004058   0x08004058   0x00000010   Code   RO           76    .text.vApplicationTickHook  taskmanager.o
    0x08004068   0x08004068   0x00000006   Code   RO          376    .text.vClearInterruptMaskFromISR  port.o
    0x0800406e   0x0800406e   0x00000030   Code   RO           91    .text.vListInitialise  list.o
    0x0800409e   0x0800409e   0x00000012   Code   RO           93    .text.vListInitialiseItem  list.o
    0x080040b0   0x080040b0   0x00000074   Code   RO           97    .text.vListInsert   list.o
    0x08004124   0x08004124   0x00000042   Code   RO           95    .text.vListInsertEnd  list.o
    0x08004166   0x08004166   0x00000002   PAD
    0x08004168   0x08004168   0x00000014   Code   RO          370    .text.vPortEnterCritical  port.o
    0x0800417c   0x0800417c   0x00000018   Code   RO          372    .text.vPortExitCritical  port.o
    0x08004194   0x08004194   0x00000084   Code   RO          328    .text.vPortFree     heap_4.o
    0x08004218   0x08004218   0x00000040   Code   RO          362    .text.vPortSetupTimerInterrupt  port.o
    0x08004258   0x08004258   0x00000008   PAD
    0x08004260   0x08004260   0x00000034   Code   RO          364    .text.vPortStartFirstTask  port.o
    0x08004294   0x08004294   0x00000018   Code   RO          368    .text.vPortYield    port.o
    0x080042ac   0x080042ac   0x00000040   Code   RO          198    .text.vTaskDelay    tasks.o
    0x080042ec   0x080042ec   0x000000c8   Code   RO          192    .text.vTaskDelete   tasks.o
    0x080043b4   0x080043b4   0x00000068   Code   RO          214    .text.vTaskStartScheduler  tasks.o
    0x0800441c   0x0800441c   0x0000000c   Code   RO          200    .text.vTaskSuspendAll  tasks.o
    0x08004428   0x08004428   0x000000d4   Code   RO          236    .text.vTaskSwitchContext  tasks.o
    0x080044fc   0x080044fc   0x00000040   Code   RO          360    .text.xPortStartScheduler  port.o
    0x0800453c   0x0800453c   0x000000aa   Code   RO          186    .text.xTaskCreate   tasks.o
    0x080045e6   0x080045e6   0x00000002   PAD
    0x080045e8   0x080045e8   0x0000017c   Code   RO          220    .text.xTaskIncrementTick  tasks.o
    0x08004764   0x08004764   0x00000130   Code   RO          204    .text.xTaskResumeAll  tasks.o
    0x08004894   0x08004894   0x0000002e   Code   RO         1730    i.__ARM_clz         mf_p.l(depilogue.o)
    0x080048c2   0x080048c2   0x0000000e   Code   RO         1736    i.__scatterload_copy  mc_p.l(handlers.o)
    0x080048d0   0x080048d0   0x00000002   Code   RO         1737    i.__scatterload_null  mc_p.l(handlers.o)
    0x080048d2   0x080048d2   0x0000000e   Code   RO         1738    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x080048e0   0x080048e0   0x00000280   Data   RO          475    .rodata.INP_HWTemp1_R  dev_adc.o
    0x08004b60   0x08004b60   0x00000280   Data   RO          476    .rodata.OUT_HWTemp1_T  dev_adc.o
    0x08004de0   0x08004de0   0x0000000c   Data   RO          544    .rodata.set_pwm_duty  dev_pwm.o
    0x08004dec   0x08004dec   0x00000005   Data   RO          302    .rodata.str1.1      tasks.o
    0x08004df1   0x08004df1   0x0000002f   Data   RO          423    .rodata.str1.1      app.o
    0x08004e20   0x08004e20   0x00000020   Data   RO         1735    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x08004e40, Size: 0x000000b4, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08004e40   0x00000001   Data   RW          428    .data.Lipus_MainFunc.CycleDuty  app.o
    0x20000001   0x08004e41   0x00000001   Data   RW           24    .data.Motor_Level   ft32f0xx_it.o
    0x20000002   0x08004e42   0x00000001   Data   RW           59    .data.PowerOff_Flg  main.o
    0x20000003   0x08004e43   0x00000001   PAD
    0x20000004   0x08004e44   0x00000040   Data   RW          472    .data.SampleVol_Buff  dev_adc.o
    0x20000044   0x08004e84   0x00000004   Data   RW         1647    .data.SystemCoreClock  system_ft32f0xx.o
    0x20000048   0x08004e88   0x00000001   Data   RW           27    .data.TIM17_IRQHandler.Key2_Sta  ft32f0xx_it.o
    0x20000049   0x08004e89   0x00000001   Data   RW           23    .data.UltraModule   ft32f0xx_it.o
    0x2000004a   0x08004e8a   0x00000002   PAD
    0x2000004c   0x08004e8c   0x00000060   Data   RW          514    .data.dev_gpio_handle  dev_gpio.o
    0x200000ac   0x08004eec   0x00000004   Data   RW           61    .data.lsi_freq      main.o
    0x200000b0   0x08004ef0   0x00000004   Data   RW          382    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x200000b8, Load base: 0x08004ef4, Size: 0x000011c0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200000b8        -       0x00000001   Zero   RW          477    .bss.ADC_MainFunc.SampleCount  dev_adc.o
    0x200000b9   0x08004ef4   0x00000003   PAD
    0x200000bc        -       0x00000004   Zero   RW          473    .bss.Battery_vol    dev_adc.o
    0x200000c0        -       0x00000001   Zero   RW          425    .bss.Beep_MainFunc.BeepCount  app.o
    0x200000c1        -       0x00000001   Zero   RW          426    .bss.Beep_MainFunc.BeepSta  app.o
    0x200000c2        -       0x00000001   Zero   RW           18    .bss.Beep_SatrtFlg  ft32f0xx_it.o
    0x200000c3        -       0x00000001   Zero   RW           22    .bss.Clear_Flg      ft32f0xx_it.o
    0x200000c4        -       0x00000002   Zero   RW           21    .bss.CycleTime      ft32f0xx_it.o
    0x200000c6   0x08004ef4   0x00000002   PAD
    0x200000c8        -       0x00000004   Zero   RW           60    .bss.DMA_DualConvertedValue  main.o
    0x200000cc        -       0x00000004   Zero   RW          496    .bss.Data_Store     dev_flash.o
    0x200000d0        -       0x00000004   Zero   RW           12    .bss.KEY1_Count     ft32f0xx_it.o
    0x200000d4        -       0x00000001   Zero   RW           15    .bss.KEY1_Flg       ft32f0xx_it.o
    0x200000d5   0x08004ef4   0x00000003   PAD
    0x200000d8        -       0x00000004   Zero   RW           13    .bss.KEY2_Count     ft32f0xx_it.o
    0x200000dc        -       0x00000001   Zero   RW           16    .bss.KEY2_Flg       ft32f0xx_it.o
    0x200000dd        -       0x00000001   Zero   RW          422    .bss.Led_GreenFlg   app.o
    0x200000de        -       0x00000001   Zero   RW          421    .bss.Led_RedFlg     app.o
    0x200000df   0x08004ef4   0x00000001   PAD
    0x200000e0        -       0x00000004   Zero   RW           14    .bss.POWER_Count    ft32f0xx_it.o
    0x200000e4        -       0x00000020   Zero   RW          527    .bss.Pid_Contronl   dev_pid.o
    0x20000104        -       0x00000001   Zero   RW           17    .bss.PowerOn_Flg    ft32f0xx_it.o
    0x20000105   0x08004ef4   0x00000003   PAD
    0x20000108        -       0x00000040   Zero   RW          478    .bss.SampleTemp_Buff  dev_adc.o
    0x20000148        -       0x00000001   Zero   RW           20    .bss.SetFreq_Flg    ft32f0xx_it.o
    0x20000149   0x08004ef4   0x00000003   PAD
    0x2000014c        -       0x00000004   Zero   RW          429    .bss.StandyDete.StandyCount  app.o
    0x20000150        -       0x00000001   Zero   RW           26    .bss.TIM17_IRQHandler.Key1_Sta  ft32f0xx_it.o
    0x20000151        -       0x00000001   Zero   RW           28    .bss.TIM17_IRQHandler.SetFlg  ft32f0xx_it.o
    0x20000152        -       0x00000001   Zero   RW          498    .bss.UltraParam_Set.Clear_Flg_old  dev_flash.o
    0x20000153        -       0x00000001   Zero   RW          497    .bss.UltraParam_Set.SetFreq_Flg_old  dev_flash.o
    0x20000154        -       0x00000004   Zero   RW          474    .bss.Ultra_Temp     dev_adc.o
    0x20000158        -       0x00000001   Zero   RW           19    .bss.WorkStart_Flg  ft32f0xx_it.o
    0x20000159   0x08004ef4   0x00000003   PAD
    0x2000015c        -       0x00000004   Zero   RW           25    .bss.WorkTime       ft32f0xx_it.o
    0x20000160        -       0x00000004   Zero   RW          424    .bss.pInitTaskHandle  app.o
    0x20000164        -       0x00000004   Zero   RW          292    .bss.pxCurrentTCB   tasks.o
    0x20000168        -       0x00000004   Zero   RW          298    .bss.pxDelayedTaskList  tasks.o
    0x2000016c        -       0x00000004   Zero   RW          338    .bss.pxEnd          heap_4.o
    0x20000170        -       0x00000004   Zero   RW          299    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000174        -       0x00000064   Zero   RW          300    .bss.pxReadyTasksLists  tasks.o
    0x200001d8        -       0x00000c00   Zero   RW          345    .bss.ucHeap         heap_4.o
    0x20000dd8        -       0x00000004   Zero   RW           82    .bss.ulSystemTimeTickCount  taskmanager.o
    0x20000ddc        -       0x00000004   Zero   RW          296    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20000de0        -       0x00000004   Zero   RW          295    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20000de4        -       0x00000004   Zero   RW          306    .bss.uxSchedulerSuspended  tasks.o
    0x20000de8        -       0x00000004   Zero   RW          293    .bss.uxTaskNumber   tasks.o
    0x20000dec        -       0x00000004   Zero   RW          301    .bss.uxTopReadyPriority  tasks.o
    0x20000df0        -       0x00000004   Zero   RW          339    .bss.xBlockAllocatedBit  heap_4.o
    0x20000df4        -       0x00000014   Zero   RW          311    .bss.xDelayedTaskList1  tasks.o
    0x20000e08        -       0x00000014   Zero   RW          312    .bss.xDelayedTaskList2  tasks.o
    0x20000e1c        -       0x00000004   Zero   RW          340    .bss.xFreeBytesRemaining  heap_4.o
    0x20000e20        -       0x00000004   Zero   RW          303    .bss.xIdleTaskHandle  tasks.o
    0x20000e24        -       0x00000004   Zero   RW          342    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20000e28        -       0x00000004   Zero   RW          304    .bss.xNextTaskUnblockTime  tasks.o
    0x20000e2c        -       0x00000004   Zero   RW          310    .bss.xNumOfOverflows  tasks.o
    0x20000e30        -       0x00000004   Zero   RW          343    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20000e34        -       0x00000004   Zero   RW          344    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20000e38        -       0x00000004   Zero   RW          309    .bss.xPendedTicks   tasks.o
    0x20000e3c        -       0x00000014   Zero   RW          307    .bss.xPendingReadyList  tasks.o
    0x20000e50        -       0x00000004   Zero   RW          297    .bss.xSchedulerRunning  tasks.o
    0x20000e54        -       0x00000008   Zero   RW          341    .bss.xStart         heap_4.o
    0x20000e5c        -       0x00000014   Zero   RW          294    .bss.xTasksWaitingTermination  tasks.o
    0x20000e70        -       0x00000004   Zero   RW          305    .bss.xTickCount     tasks.o
    0x20000e74        -       0x00000004   Zero   RW          308    .bss.xYieldPending  tasks.o
    0x20000e78        -       0x00000400   Zero   RW         1629    STACK               startup_ft32f030x8.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1692        132         47          1         12       5683   app.o
       882         16          0          0          0       3128   dev_ad9877.o
       982         76       1280         64         73       2532   dev_adc.o
       730         32          0          0          6       2385   dev_flash.o
       148          8          0         96          0       2088   dev_gpio.o
       366          0          0          0         32       1427   dev_pid.o
       208         28         12          0          0       2195   dev_pwm.o
       622          8          0          0          0       7256   ft32f0xx_adc.o
       468         36          0          0          0       3635   ft32f0xx_dma.o
       284         20          0          0          0       2762   ft32f0xx_exti.o
       558         28          0          0          0       8136   ft32f0xx_flash.o
       698         20          0          0          0       4698   ft32f0xx_gpio.o
       854         88          0          3         27       3388   ft32f0xx_it.o
        96         20          0          0          0       1884   ft32f0xx_iwdg.o
       148         16          0          0          0       2372   ft32f0xx_misc.o
       280         20          0          0          0       9124   ft32f0xx_rcc.o
        84          4          0          0          0       2168   ft32f0xx_syscfg.o
       806         28          0          0          0      21041   ft32f0xx_tim.o
       880         52          0          0       3104       3930   heap_4.o
       324          0          0          0          0       2054   list.o
      1532         92          0          5          4       7380   main.o
       488         44          0          4          0       2522   port.o
        88         38        192          0       1024        660   startup_ft32f030x8.o
       352         36          0          4          0       2461   system_ft32f0xx.o
        42          4          0          0          4       1759   taskmanager.o
      2410        184          5          0        240      17900   tasks.o

    ----------------------------------------------------------------------
     16068       1038       1568        180       4544     124568   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        46          8          0          3         18          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        32          0          0          0          0         68   llshl.o
        38          0          0          0          0         68   llsshr.o
        34          0          0          0          0         68   llushr.o
        36          0          0          0          0        100   memseta.o
        44          0          0          0          0         72   uidiv.o
        56          0          0          0          0         68   d2f.o
       356          4          0          0          0        140   dadd.o
        44          0          0          0          0         68   dcmpge.o
        44          0          0          0          0         68   dcmple.o
       240          6          0          0          0         84   ddiv.o
       236          0          0          0          0        216   depilogue.o
        72         10          0          0          0         72   dfixi.o
        60         10          0          0          0         68   dfixui.o
        40          6          0          0          0         68   dflti.o
        28          4          0          0          0         68   dfltui.o
       208          6          0          0          0         88   dmul.o
        40          0          0          0          0         60   f2d.o
       178          0          0          0          0        108   fadd.o
        28          0          0          0          0         60   fcmpge.o
        28          0          0          0          0         60   fcmpgt.o
        28          0          0          0          0         60   fcmple.o
       124          0          0          0          0         72   fdiv.o
       130          0          0          0          0        144   fepilogue.o
        40          0          0          0          0         60   ffixui.o
        22          0          0          0          0         68   fflti.o
       122          0          0          0          0         72   fmul.o

    ----------------------------------------------------------------------
      2396         62          0          0          0       2216   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       270         16          0          0          0        444   mc_p.l
      2124         46          0          0          0       1772   mf_p.l

    ----------------------------------------------------------------------
      2396         62          0          0          0       2216   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     18464       1100       1568        180       4544     125452   Grand Totals
     18464       1100       1568        180       4544     125452   ELF Image Totals
     18464       1100       1568        180          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                20032 (  19.56kB)
    Total RW  Size (RW Data + ZI Data)              4724 (   4.61kB)
    Total ROM Size (Code + RO Data + RW Data)      20212 (  19.74kB)

==============================================================================

