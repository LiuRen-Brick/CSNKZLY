<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\FreeRTOS_Demo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\FreeRTOS_Demo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6120001: Last Updated: Tue Aug 27 17:53:10 2024
<BR><P>
<H3>Maximum Stack Usage =        464 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; UltraParam_Init &rArr; AD9833_SetPara &rArr; AD9833_SendFrequency &rArr; AD9833_SendData &rArr; AD9833_SDATA_Set &rArr; DevGpio_SetOutPut &rArr; GPIO_WriteBit
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[11]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">ADC1_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[11]">ADC1_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[e]">DMA1_Channel1_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[f]">DMA1_Channel2_3_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[10]">DMA1_Channel4_5_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[b]">EXTI0_1_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[c]">EXTI2_3_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[d]">EXTI4_15_IRQHandler</a> from ft32f0xx_it.o(.text.EXTI4_15_IRQHandler) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from ft32f0xx_it.o(.text.HardFault_Handler) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[25]">HighProTask</a> from app.o(.text.HighProTask) referenced from app.o(.text.InitTask1)
 <LI><a href="#[1a]">I2C1_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[1b]">I2C2_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[24]">InitTask1</a> from app.o(.text.InitTask1) referenced from app.o(.text.APP_Start)
 <LI><a href="#[27]">LowProTask</a> from app.o(.text.LowProTask) referenced from app.o(.text.InitTask1)
 <LI><a href="#[26]">MediumProTask</a> from app.o(.text.MediumProTask) referenced from app.o(.text.InitTask1)
 <LI><a href="#[1]">NMI_Handler</a> from ft32f0xx_it.o(.text.NMI_Handler) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[7]">PVD_VDDIO_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from port.o(.text.PendSV_Handler) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[a]">RCC_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[1c]">SPI1_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[1d]">SPI2_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from port.o(.text.SVC_Handler) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[2a]">Set_PWM1_Duty</a> from dev_pwm.o(.text.Set_PWM1_Duty) referenced from dev_pwm.o(.rodata.set_pwm_duty)
 <LI><a href="#[2b]">Set_PWM2_Duty</a> from dev_pwm.o(.text.Set_PWM2_Duty) referenced from dev_pwm.o(.rodata.set_pwm_duty)
 <LI><a href="#[2c]">Set_PWM3_Duty</a> from dev_pwm.o(.text.Set_PWM3_Duty) referenced from dev_pwm.o(.rodata.set_pwm_duty)
 <LI><a href="#[5]">SysTick_Handler</a> from port.o(.text.SysTick_Handler) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[22]">SystemInit</a> from system_ft32f0xx.o(.text.SystemInit) referenced from startup_ft32f030x8.o(.text)
 <LI><a href="#[16]">TIM14_IRQHandler</a> from ft32f0xx_it.o(.text.TIM14_IRQHandler) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[17]">TIM15_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[18]">TIM16_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[19]">TIM17_IRQHandler</a> from ft32f0xx_it.o(.text.TIM17_IRQHandler) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[12]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[13]">TIM1_CC_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[14]">TIM3_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[15]">TIM6_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[1e]">USART1_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[1f]">USART2_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[20]">USB_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_ft32f030x8.o(.text) referenced from startup_ft32f030x8.o(RESET)
 <LI><a href="#[23]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_ft32f030x8.o(.text)
 <LI><a href="#[21]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[29]">prvIdleTask</a> from tasks.o(.text.prvIdleTask) referenced from tasks.o(.text.vTaskStartScheduler)
 <LI><a href="#[28]">prvTaskExitError</a> from port.o(.text.prvTaskExitError) referenced from port.o(.text.pxPortInitialiseStack)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[23]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(.text)
</UL>
<P><STRONG><a name="[d3]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[49]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[d4]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[d5]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[d6]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[d7]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[d8]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_VDDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ft32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[cd]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
</UL>

<P><STRONG><a name="[d9]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[c2]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[da]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[db]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[dc]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;look1_iflf_binlxpw
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSample_Filter
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDController_Update
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;look1_iflf_binlxpw
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSample_Filter
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDController_Update
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;look1_iflf_binlxpw
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDController_Update
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MainFunc
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;look1_iflf_binlxpw
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDController_Update
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MainFunc
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MainFunc
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>

<P><STRONG><a name="[3d]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MainFunc
</UL>

<P><STRONG><a name="[3e]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[3f]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PWM3_Duty
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PWM2_Duty
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SendFrequency
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MainFunc
</UL>

<P><STRONG><a name="[40]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSample_Filter
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SendFrequency
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MainFunc
</UL>

<P><STRONG><a name="[56]"></a>__aeabi_fcmple</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSample_Filter
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDController_Update
</UL>

<P><STRONG><a name="[57]"></a>__aeabi_fcmpge</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpge.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;look1_iflf_binlxpw
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSample_Filter
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDController_Update
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_MainFunc
</UL>

<P><STRONG><a name="[b2]"></a>__aeabi_fcmpgt</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, fcmpgt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;look1_iflf_binlxpw
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_dcmple</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dcmple.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lipus_MainFunc
</UL>

<P><STRONG><a name="[98]"></a>__aeabi_dcmpge</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, dcmpge.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_dcmpge
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lipus_MainFunc
</UL>

<P><STRONG><a name="[41]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MainFunc
</UL>

<P><STRONG><a name="[42]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PWM3_Duty
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PWM2_Duty
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSample_Filter
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MainFunc
</UL>

<P><STRONG><a name="[43]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraParam_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraParam_Set
</UL>

<P><STRONG><a name="[96]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lipus_MainFunc
</UL>

<P><STRONG><a name="[44]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_d2iz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SendFrequency
</UL>

<P><STRONG><a name="[46]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PWM3_Duty
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PWM2_Duty
</UL>

<P><STRONG><a name="[58]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSample_Filter
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lipus_MainFunc
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MainFunc
</UL>

<P><STRONG><a name="[47]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSample_Filter
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MainFunc
</UL>

<P><STRONG><a name="[39]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[dd]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[de]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[df]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[e0]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[33]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[3c]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[3b]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>

<P><STRONG><a name="[2e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[e1]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>AD9833_InitIo</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, dev_ad9877.o(.text.AD9833_InitIo))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = AD9833_InitIo &rArr; AD9833_SDATA_Set &rArr; DevGpio_SetOutPut &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SDATA_Set
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SCLK_Set
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_FSYNC_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraParam_Init
</UL>

<P><STRONG><a name="[54]"></a>AD9833_SetPara</STRONG> (Thumb, 180 bytes, Stack size 96 bytes, dev_ad9877.o(.text.AD9833_SetPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = AD9833_SetPara &rArr; AD9833_SendFrequency &rArr; AD9833_SendData &rArr; AD9833_SDATA_Set &rArr; DevGpio_SetOutPut &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SendWave
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SendPhase
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SendFrequency
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraParam_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraParam_Set
</UL>

<P><STRONG><a name="[60]"></a>ADC_ChannelConfig</STRONG> (Thumb, 62 bytes, Stack size 44 bytes, ft32f0xx_adc.o(.text.ADC_ChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ADC_ChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Config
</UL>

<P><STRONG><a name="[64]"></a>ADC_Cmd</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ft32f0xx_adc.o(.text.ADC_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Config
</UL>

<P><STRONG><a name="[63]"></a>ADC_DMACmd</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ft32f0xx_adc.o(.text.ADC_DMACmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_DMACmd
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Config
</UL>

<P><STRONG><a name="[62]"></a>ADC_DMARequestModeConfig</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, ft32f0xx_adc.o(.text.ADC_DMARequestModeConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_DMARequestModeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Config
</UL>

<P><STRONG><a name="[5a]"></a>ADC_DeInit</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, ft32f0xx_adc.o(.text.ADC_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ADC_DeInit &rArr; RCC_APB2PeriphResetCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Config
</UL>

<P><STRONG><a name="[61]"></a>ADC_GetCalibrationFactor</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, ft32f0xx_adc.o(.text.ADC_GetCalibrationFactor))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ADC_GetCalibrationFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Config
</UL>

<P><STRONG><a name="[65]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, ft32f0xx_adc.o(.text.ADC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Config
</UL>

<P><STRONG><a name="[5f]"></a>ADC_Init</STRONG> (Thumb, 80 bytes, Stack size 28 bytes, ft32f0xx_adc.o(.text.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Config
</UL>

<P><STRONG><a name="[6b]"></a>ADC_MainFunc</STRONG> (Thumb, 404 bytes, Stack size 88 bytes, dev_adc.o(.text.ADC_MainFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = ADC_MainFunc &rArr; look1_iflf_binlxpw &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;look1_iflf_binlxpw
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_GetFlagStatus
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_ClearFlag
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCSample_Filter
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediumProTask
</UL>

<P><STRONG><a name="[69]"></a>ADC_StartOfConversion</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ft32f0xx_adc.o(.text.ADC_StartOfConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_StartOfConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Config
</UL>

<P><STRONG><a name="[5e]"></a>ADC_StructInit</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ft32f0xx_adc.o(.text.ADC_StructInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_StructInit
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Config
</UL>

<P><STRONG><a name="[70]"></a>APP_Start</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, app.o(.text.APP_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = APP_Start &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>Beep_MainFunc</STRONG> (Thumb, 444 bytes, Stack size 56 bytes, app.o(.text.Beep_MainFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Beep_MainFunc &rArr; Devpwm_SetDuty
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devpwm_SetDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediumProTask
</UL>

<P><STRONG><a name="[6f]"></a>DMA_ClearFlag</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ft32f0xx_dma.o(.text.DMA_ClearFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MainFunc
</UL>

<P><STRONG><a name="[68]"></a>DMA_Cmd</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ft32f0xx_dma.o(.text.DMA_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Config
</UL>

<P><STRONG><a name="[66]"></a>DMA_DeInit</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, ft32f0xx_dma.o(.text.DMA_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Config
</UL>

<P><STRONG><a name="[6c]"></a>DMA_GetFlagStatus</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, ft32f0xx_dma.o(.text.DMA_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MainFunc
</UL>

<P><STRONG><a name="[67]"></a>DMA_Init</STRONG> (Thumb, 112 bytes, Stack size 28 bytes, ft32f0xx_dma.o(.text.DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Config
</UL>

<P><STRONG><a name="[4b]"></a>DevGpio_SetOutPut</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, dev_gpio.o(.text.DevGpio_SetOutPut))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DevGpio_SetOutPut &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SDATA_Set
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SCLK_Set
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_FSYNC_Set
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_MainFunc
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lipus_MainFunc
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_MainFunc
</UL>

<P><STRONG><a name="[73]"></a>Devpwm_SetDuty</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, dev_pwm.o(.text.Devpwm_SetDuty))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Devpwm_SetDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraParam_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_MainFunc
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lipus_MainFunc
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_MainFunc
</UL>

<P><STRONG><a name="[d]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, ft32f0xx_it.o(.text.EXTI4_15_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = EXTI4_15_IRQHandler &rArr; GPIO_ReadInputDataBit
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ft32f0xx_exti.o(.text.EXTI_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[75]"></a>EXTI_GetITStatus</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, ft32f0xx_exti.o(.text.EXTI_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = EXTI_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[7f]"></a>EXTI_Init</STRONG> (Thumb, 208 bytes, Stack size 12 bytes, ft32f0xx_exti.o(.text.EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT32_EXIT_Init
</UL>

<P><STRONG><a name="[78]"></a>FLASH_ErasePage</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, ft32f0xx_flash.o(.text.FLASH_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = FLASH_ErasePage &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PrefetchBufferCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
</UL>

<P><STRONG><a name="[7c]"></a>FLASH_GetStatus</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, ft32f0xx_flash.o(.text.FLASH_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
</UL>

<P><STRONG><a name="[85]"></a>FLASH_Lock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ft32f0xx_flash.o(.text.FLASH_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
</UL>

<P><STRONG><a name="[79]"></a>FLASH_PrefetchBufferCmd</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ft32f0xx_flash.o(.text.FLASH_PrefetchBufferCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FLASH_PrefetchBufferCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[7b]"></a>FLASH_ProgramWord</STRONG> (Thumb, 124 bytes, Stack size 48 bytes, ft32f0xx_flash.o(.text.FLASH_ProgramWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_WaitForLastOperation
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_PrefetchBufferCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
</UL>

<P><STRONG><a name="[84]"></a>FLASH_Unlock</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ft32f0xx_flash.o(.text.FLASH_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
</UL>

<P><STRONG><a name="[7a]"></a>FLASH_WaitForLastOperation</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>

<P><STRONG><a name="[83]"></a>Flash_Read</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, dev_flash.o(.text.Flash_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Flash_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraParam_Init
</UL>

<P><STRONG><a name="[86]"></a>Flash_Write</STRONG> (Thumb, 192 bytes, Stack size 64 bytes, dev_flash.o(.text.Flash_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Flash_Write &rArr; FLASH_ProgramWord &rArr; FLASH_WaitForLastOperation &rArr; FLASH_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Unlock
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ProgramWord
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_Lock
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_ErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraParam_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraParam_Set
</UL>

<P><STRONG><a name="[87]"></a>GPIO_DeInit</STRONG> (Thumb, 232 bytes, Stack size 56 bytes, ft32f0xx_gpio.o(.text.GPIO_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GPIO_DeInit &rArr; RCC_AHBPeriphResetCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_MainFunc
</UL>

<P><STRONG><a name="[5d]"></a>GPIO_Init</STRONG> (Thumb, 236 bytes, Stack size 28 bytes, ft32f0xx_gpio.o(.text.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim3BaseInit
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim16BaseInit
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim15BaseInit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT32_GPIOB_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT32_GPIOA_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT32_EXIT_Init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Config
</UL>

<P><STRONG><a name="[ab]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, ft32f0xx_gpio.o(.text.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim3BaseInit
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim16BaseInit
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim15BaseInit
</UL>

<P><STRONG><a name="[76]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, ft32f0xx_gpio.o(.text.GPIO_ReadInputDataBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM17_IRQHandler
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI4_15_IRQHandler
</UL>

<P><STRONG><a name="[94]"></a>GPIO_ToggleBit</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, dev_gpio.o(.text.GPIO_ToggleBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_ToggleBit
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_MainFunc
</UL>

<P><STRONG><a name="[74]"></a>GPIO_WriteBit</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, ft32f0xx_gpio.o(.text.GPIO_WriteBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT32_GPIOB_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_MainFunc
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DevGpio_SetOutPut
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ft32f0xx_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[90]"></a>IWDG_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ft32f0xx_iwdg.o(.text.IWDG_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[8f]"></a>IWDG_ReloadCounter</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ft32f0xx_iwdg.o(.text.IWDG_ReloadCounter))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediumProTask
</UL>

<P><STRONG><a name="[8d]"></a>IWDG_SetPrescaler</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ft32f0xx_iwdg.o(.text.IWDG_SetPrescaler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IWDG_SetPrescaler
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[8e]"></a>IWDG_SetReload</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ft32f0xx_iwdg.o(.text.IWDG_SetReload))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IWDG_SetReload
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[8c]"></a>IWDG_WriteAccessCmd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ft32f0xx_iwdg.o(.text.IWDG_WriteAccessCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IWDG_WriteAccessCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
</UL>

<P><STRONG><a name="[24]"></a>InitTask1</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, app.o(.text.InitTask1))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = InitTask1 &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.text.APP_Start)
</UL>
<P><STRONG><a name="[92]"></a>LED_Init</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, app.o(.text.LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LED_Init &rArr; DevGpio_SetOutPut &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DevGpio_SetOutPut
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>LED_MainFunc</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, app.o(.text.LED_MainFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LED_MainFunc &rArr; DevGpio_SetOutPut &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBit
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DevGpio_SetOutPut
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowProTask
</UL>

<P><STRONG><a name="[89]"></a>Lipus_MainFunc</STRONG> (Thumb, 468 bytes, Stack size 48 bytes, app.o(.text.Lipus_MainFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Lipus_MainFunc &rArr; PIDController_Update &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmple
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dcmpge
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDController_Update
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devpwm_SetDuty
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DevGpio_SetOutPut
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighProTask
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ft32f0xx_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>NVIC_Init</STRONG> (Thumb, 148 bytes, Stack size 12 bytes, ft32f0xx_misc.o(.text.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim17BaseInit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim14BaseInit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT32_EXIT_Init
</UL>

<P><STRONG><a name="[b3]"></a>PIDController_Init</STRONG> (Thumb, 94 bytes, Stack size 68 bytes, dev_pid.o(.text.PIDController_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = PIDController_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>PIDController_Update</STRONG> (Thumb, 272 bytes, Stack size 88 bytes, dev_pid.o(.text.PIDController_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = PIDController_Update &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmple
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lipus_MainFunc
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, port.o(.text.PendSV_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PendSV_Handler &rArr; vTaskSwitchContext &rArr; vApplicationStackOverflowHook
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>Power_MainFunc</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, app.o(.text.Power_MainFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Power_MainFunc &rArr; DevGpio_SetOutPut &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devpwm_SetDuty
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DevGpio_SetOutPut
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HighProTask
</UL>

<P><STRONG><a name="[5b]"></a>RCC_AHBPeriphClockCmd</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_AHBPeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim3BaseInit
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim16BaseInit
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim15BaseInit
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT32_GPIOB_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT32_GPIOA_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT32_EXIT_Init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Config
</UL>

<P><STRONG><a name="[88]"></a>RCC_AHBPeriphResetCmd</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ft32f0xx_rcc.o(.text.RCC_AHBPeriphResetCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_AHBPeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
</UL>

<P><STRONG><a name="[a7]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ft32f0xx_rcc.o(.text.RCC_APB1PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim3BaseInit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim14BaseInit
</UL>

<P><STRONG><a name="[5c]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim17BaseInit
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim16BaseInit
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim15BaseInit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT32_EXIT_Init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Config
</UL>

<P><STRONG><a name="[6a]"></a>RCC_APB2PeriphResetCmd</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RCC_APB2PeriphResetCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, port.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>SYSCFG_EXTILineConfig</STRONG> (Thumb, 84 bytes, Stack size 44 bytes, ft32f0xx_syscfg.o(.text.SYSCFG_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SYSCFG_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT32_EXIT_Init
</UL>

<P><STRONG><a name="[99]"></a>StandyDete</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, app.o(.text.StandyDete))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowProTask
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, port.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SysTick_Handler &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vClearInterruptMaskFromISR
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ulSetInterruptMaskFromISR
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>SystemInit</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, system_ft32f0xx.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(.text)
</UL>
<P><STRONG><a name="[16]"></a>TIM14_IRQHandler</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, ft32f0xx_it.o(.text.TIM14_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = TIM14_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TIM17_IRQHandler</STRONG> (Thumb, 648 bytes, Stack size 16 bytes, ft32f0xx_it.o(.text.TIM17_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = TIM17_IRQHandler &rArr; TIM_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ft32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[a5]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ft32f0xx_tim.o(.text.TIM_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM17_IRQHandler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM14_IRQHandler
</UL>

<P><STRONG><a name="[9d]"></a>TIM_Cmd</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ft32f0xx_tim.o(.text.TIM_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim3BaseInit
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim17BaseInit
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim16BaseInit
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim15BaseInit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim14BaseInit
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_MainFunc
</UL>

<P><STRONG><a name="[ad]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, ft32f0xx_tim.o(.text.TIM_CtrlPWMOutputs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_CtrlPWMOutputs
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim3BaseInit
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim16BaseInit
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim15BaseInit
</UL>

<P><STRONG><a name="[a4]"></a>TIM_GetITStatus</STRONG> (Thumb, 94 bytes, Stack size 44 bytes, ft32f0xx_tim.o(.text.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM17_IRQHandler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM14_IRQHandler
</UL>

<P><STRONG><a name="[a9]"></a>TIM_ITConfig</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, ft32f0xx_tim.o(.text.TIM_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = TIM_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim17BaseInit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim14BaseInit
</UL>

<P><STRONG><a name="[ac]"></a>TIM_OC1Init</STRONG> (Thumb, 284 bytes, Stack size 48 bytes, ft32f0xx_tim.o(.text.TIM_OC1Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = TIM_OC1Init
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim3BaseInit
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim16BaseInit
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim15BaseInit
</UL>

<P><STRONG><a name="[a0]"></a>TIM_SetCompare1</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ft32f0xx_tim.o(.text.TIM_SetCompare1))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_SetCompare1
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PWM3_Duty
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PWM2_Duty
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_PWM1_Duty
</UL>

<P><STRONG><a name="[a8]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 224 bytes, Stack size 20 bytes, ft32f0xx_tim.o(.text.TIM_TimeBaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim3BaseInit
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim17BaseInit
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim16BaseInit
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim15BaseInit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim14BaseInit
</UL>

<P><STRONG><a name="[b1]"></a>UltraParam_Init</STRONG> (Thumb, 156 bytes, Stack size 64 bytes, dev_flash.o(.text.UltraParam_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = UltraParam_Init &rArr; AD9833_SetPara &rArr; AD9833_SendFrequency &rArr; AD9833_SendData &rArr; AD9833_SDATA_Set &rArr; DevGpio_SetOutPut &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SetPara
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_InitIo
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Devpwm_SetDuty
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9a]"></a>UltraParam_Set</STRONG> (Thumb, 284 bytes, Stack size 80 bytes, dev_flash.o(.text.UltraParam_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = UltraParam_Set &rArr; AD9833_SetPara &rArr; AD9833_SendFrequency &rArr; AD9833_SendData &rArr; AD9833_SDATA_Set &rArr; DevGpio_SetOutPut &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SetPara
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowProTask
</UL>

<P><STRONG><a name="[6e]"></a>look1_iflf_binlxpw</STRONG> (Thumb, 340 bytes, Stack size 128 bytes, dev_adc.o(.text.look1_iflf_binlxpw))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = look1_iflf_binlxpw &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpgt
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MainFunc
</UL>

<P><STRONG><a name="[21]"></a>main</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = main &rArr; UltraParam_Init &rArr; AD9833_SetPara &rArr; AD9833_SendFrequency &rArr; AD9833_SendData &rArr; AD9833_SDATA_Set &rArr; DevGpio_SetOutPut &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraParam_Init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIDController_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_Init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Start
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim3BaseInit
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim17BaseInit
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim16BaseInit
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim15BaseInit
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tim14BaseInit
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Config
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT32_GPIOB_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT32_GPIOA_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT32_EXIT_Init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMA_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[c6]"></a>pvPortMalloc</STRONG> (Thumb, 396 bytes, Stack size 48 bytes, heap_4.o(.text.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationMallocFailedHook
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[c4]"></a>pxPortInitialiseStack</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, port.o(.text.pxPortInitialiseStack))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pxPortInitialiseStack
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[a1]"></a>ulSetInterruptMaskFromISR</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, port.o(.text.ulSetInterruptMaskFromISR))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[b6]"></a>uxListRemove</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, list.o(.text.uxListRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[cb]"></a>vApplicationMallocFailedHook</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, taskmanager.o(.text.vApplicationMallocFailedHook))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[d0]"></a>vApplicationStackOverflowHook</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, taskmanager.o(.text.vApplicationStackOverflowHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vApplicationStackOverflowHook
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>

<P><STRONG><a name="[d2]"></a>vApplicationTickHook</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, taskmanager.o(.text.vApplicationTickHook))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[a3]"></a>vClearInterruptMaskFromISR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.text.vClearInterruptMaskFromISR))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[c5]"></a>vListInitialise</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, list.o(.text.vListInitialise))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
</UL>

<P><STRONG><a name="[c3]"></a>vListInitialiseItem</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, list.o(.text.vListInitialiseItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vListInitialiseItem
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[b7]"></a>vListInsert</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, list.o(.text.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[bb]"></a>vListInsertEnd</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, list.o(.text.vListInsertEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[b9]"></a>vPortEnterCritical</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, port.o(.text.vPortEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[bc]"></a>vPortExitCritical</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.text.vPortExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[c0]"></a>vPortFree</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, heap_4.o(.text.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>

<P><STRONG><a name="[cc]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, port.o(.text.vPortSetupTimerInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = vPortSetupTimerInterrupt &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[bd]"></a>vPortYield</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, port.o(.text.vPortYield))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[9b]"></a>vTaskDelay</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, tasks.o(.text.vTaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediumProTask
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowProTask
</UL>

<P><STRONG><a name="[91]"></a>vTaskDelete</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, tasks.o(.text.vTaskDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = vTaskDelete &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTask1
</UL>

<P><STRONG><a name="[b4]"></a>vTaskStartScheduler</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, tasks.o(.text.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = vTaskStartScheduler &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c7]"></a>vTaskSuspendAll</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tasks.o(.text.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[9c]"></a>vTaskSwitchContext</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, tasks.o(.text.vTaskSwitchContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = vTaskSwitchContext &rArr; vApplicationStackOverflowHook
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationStackOverflowHook
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[cf]"></a>xPortStartScheduler</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, port.o(.text.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = xPortStartScheduler &rArr; vTaskSwitchContext &rArr; vApplicationStackOverflowHook
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortStartFirstTask
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTaskExitError
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[71]"></a>xTaskCreate</STRONG> (Thumb, 170 bytes, Stack size 96 bytes, tasks.o(.text.xTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Start
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTask1
</UL>

<P><STRONG><a name="[a2]"></a>xTaskIncrementTick</STRONG> (Thumb, 384 bytes, Stack size 40 bytes, tasks.o(.text.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationTickHook
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[ca]"></a>xTaskResumeAll</STRONG> (Thumb, 304 bytes, Stack size 32 bytes, tasks.o(.text.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[48]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[e2]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[e3]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[e4]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[59]"></a>ADC_DMA_Config</STRONG> (Thumb, 280 bytes, Stack size 120 bytes, main.o(.text.ADC_DMA_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = ADC_DMA_Config &rArr; ADC_ChannelConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_DeInit
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_Cmd
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartOfConversion
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetCalibrationFactor
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMARequestModeConfig
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMACmd
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>FT32_EXIT_Init</STRONG> (Thumb, 116 bytes, Stack size 40 bytes, main.o(.text.FT32_EXIT_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = FT32_EXIT_Init &rArr; SYSCFG_EXTILineConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>FT32_GPIOA_Init</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, main.o(.text.FT32_GPIOA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = FT32_GPIOA_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>FT32_GPIOB_Init</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, main.o(.text.FT32_GPIOB_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FT32_GPIOB_Init &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>IWDG_Config</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, main.o(.text.IWDG_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IWDG_Config &rArr; IWDG_WriteAccessCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_WriteAccessCmd
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetReload
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_SetPrescaler
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a6]"></a>Tim14BaseInit</STRONG> (Thumb, 100 bytes, Stack size 40 bytes, main.o(.text.Tim14BaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Tim14BaseInit &rArr; TIM_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aa]"></a>Tim15BaseInit</STRONG> (Thumb, 172 bytes, Stack size 80 bytes, main.o(.text.Tim15BaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Tim15BaseInit &rArr; TIM_OC1Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ae]"></a>Tim16BaseInit</STRONG> (Thumb, 180 bytes, Stack size 80 bytes, main.o(.text.Tim16BaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Tim16BaseInit &rArr; TIM_OC1Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[af]"></a>Tim17BaseInit</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, main.o(.text.Tim17BaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Tim17BaseInit &rArr; TIM_ITConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b0]"></a>Tim3BaseInit</STRONG> (Thumb, 188 bytes, Stack size 88 bytes, main.o(.text.Tim3BaseInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Tim3BaseInit &rArr; TIM_OC1Init
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC1Init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHBPeriphClockCmd
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b5]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, tasks.o(.text.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[b8]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, tasks.o(.text.prvAddNewTaskToReadyList))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = prvAddNewTaskToReadyList &rArr; prvInitialiseTaskLists &rArr; vListInitialise
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[be]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, tasks.o(.text.prvCheckTasksWaitingTermination))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[bf]"></a>prvDeleteTCB</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, tasks.o(.text.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[29]"></a>prvIdleTask</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, tasks.o(.text.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = prvIdleTask &rArr; prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick &rArr; vListInsertEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortYield
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(.text.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[c1]"></a>prvInitialiseNewTask</STRONG> (Thumb, 284 bytes, Stack size 88 bytes, tasks.o(.text.prvInitialiseNewTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[ba]"></a>prvInitialiseTaskLists</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, tasks.o(.text.prvInitialiseTaskLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvInitialiseTaskLists &rArr; vListInitialise
</UL>
<BR>[Calls]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[ce]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, tasks.o(.text.prvResetNextTaskUnblockTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
</UL>

<P><STRONG><a name="[c8]"></a>prvHeapInit</STRONG> (Thumb, 176 bytes, Stack size 16 bytes, heap_4.o(.text.prvHeapInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[c9]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, heap_4.o(.text.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[28]"></a>prvTaskExitError</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, port.o(.text.prvTaskExitError))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = prvTaskExitError
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> port.o(.text.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[d1]"></a>vPortStartFirstTask</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, port.o(.text.vPortStartFirstTask))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[25]"></a>HighProTask</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, app.o(.text.HighProTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = HighProTask &rArr; Lipus_MainFunc &rArr; PIDController_Update &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_MainFunc
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lipus_MainFunc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.text.InitTask1)
</UL>
<P><STRONG><a name="[27]"></a>LowProTask</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, app.o(.text.LowProTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = LowProTask &rArr; UltraParam_Set &rArr; AD9833_SetPara &rArr; AD9833_SendFrequency &rArr; AD9833_SendData &rArr; AD9833_SDATA_Set &rArr; DevGpio_SetOutPut &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UltraParam_Set
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StandyDete
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED_MainFunc
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.text.InitTask1)
</UL>
<P><STRONG><a name="[26]"></a>MediumProTask</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app.o(.text.MediumProTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = MediumProTask &rArr; ADC_MainFunc &rArr; look1_iflf_binlxpw &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_ReloadCounter
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep_MainFunc
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MainFunc
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(.text.InitTask1)
</UL>
<P><STRONG><a name="[50]"></a>AD9833_Delay</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, dev_ad9877.o(.text.AD9833_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = AD9833_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SendData
</UL>

<P><STRONG><a name="[4a]"></a>AD9833_FSYNC_Set</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, dev_ad9877.o(.text.AD9833_FSYNC_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = AD9833_FSYNC_Set &rArr; DevGpio_SetOutPut &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DevGpio_SetOutPut
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_InitIo
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SendData
</UL>

<P><STRONG><a name="[4d]"></a>AD9833_SCLK_Set</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, dev_ad9877.o(.text.AD9833_SCLK_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = AD9833_SCLK_Set &rArr; DevGpio_SetOutPut &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DevGpio_SetOutPut
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_InitIo
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SendData
</UL>

<P><STRONG><a name="[4e]"></a>AD9833_SDATA_Set</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, dev_ad9877.o(.text.AD9833_SDATA_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = AD9833_SDATA_Set &rArr; DevGpio_SetOutPut &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DevGpio_SetOutPut
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_InitIo
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SendData
</UL>

<P><STRONG><a name="[4f]"></a>AD9833_SendData</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, dev_ad9877.o(.text.AD9833_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = AD9833_SendData &rArr; AD9833_SDATA_Set &rArr; DevGpio_SetOutPut &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SDATA_Set
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SCLK_Set
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_FSYNC_Set
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SetPara
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SendWave
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SendPhase
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SendFrequency
</UL>

<P><STRONG><a name="[51]"></a>AD9833_SendFrequency</STRONG> (Thumb, 208 bytes, Stack size 104 bytes, dev_ad9877.o(.text.AD9833_SendFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = AD9833_SendFrequency &rArr; AD9833_SendData &rArr; AD9833_SDATA_Set &rArr; DevGpio_SetOutPut &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SetPara
</UL>

<P><STRONG><a name="[52]"></a>AD9833_SendPhase</STRONG> (Thumb, 54 bytes, Stack size 48 bytes, dev_ad9877.o(.text.AD9833_SendPhase))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = AD9833_SendPhase &rArr; AD9833_SendData &rArr; AD9833_SDATA_Set &rArr; DevGpio_SetOutPut &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SetPara
</UL>

<P><STRONG><a name="[53]"></a>AD9833_SendWave</STRONG> (Thumb, 74 bytes, Stack size 72 bytes, dev_ad9877.o(.text.AD9833_SendWave))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = AD9833_SendWave &rArr; AD9833_SendData &rArr; AD9833_SDATA_Set &rArr; DevGpio_SetOutPut &rArr; GPIO_WriteBit
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AD9833_SetPara
</UL>

<P><STRONG><a name="[55]"></a>ADCSample_Filter</STRONG> (Thumb, 238 bytes, Stack size 72 bytes, dev_adc.o(.text.ADCSample_Filter))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ADCSample_Filter &rArr; __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmple
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fcmpge
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_MainFunc
</UL>

<P><STRONG><a name="[2a]"></a>Set_PWM1_Duty</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, dev_pwm.o(.text.Set_PWM1_Duty))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Set_PWM1_Duty &rArr; TIM_SetCompare1
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dev_pwm.o(.rodata.set_pwm_duty)
</UL>
<P><STRONG><a name="[2b]"></a>Set_PWM2_Duty</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, dev_pwm.o(.text.Set_PWM2_Duty))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Set_PWM2_Duty &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dev_pwm.o(.rodata.set_pwm_duty)
</UL>
<P><STRONG><a name="[2c]"></a>Set_PWM3_Duty</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, dev_pwm.o(.text.Set_PWM3_Duty))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = Set_PWM3_Duty &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare1
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dev_pwm.o(.rodata.set_pwm_duty)
</UL>
<P><STRONG><a name="[9e]"></a>SetSysClock</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_ft32f0xx.o(.text.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetSysClock &rArr; SetSysClockTo72
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[9f]"></a>SetSysClockTo72</STRONG> (Thumb, 228 bytes, Stack size 12 bytes, system_ft32f0xx.o(.text.SetSysClockTo72))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClockTo72
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
