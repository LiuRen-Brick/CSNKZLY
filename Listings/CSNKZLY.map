Component: ARM Compiler 6.12 Tool: armlink [5d624300]

==============================================================================

Section Cross References

    ft32f0xx_it.o(.ARM.exidx.text.NMI_Handler) refers to ft32f0xx_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    ft32f0xx_it.o(.ARM.exidx.text.HardFault_Handler) refers to ft32f0xx_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    ft32f0xx_it.o(.ARM.exidx.text.TIM14_IRQHandler) refers to ft32f0xx_it.o(.text.TIM14_IRQHandler) for [Anonymous Symbol]
    ft32f0xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to ft32f0xx_tim.o(.text.TIM_GetITStatus) for TIM_GetITStatus
    ft32f0xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to ft32f0xx_tim.o(.text.TIM_ClearITPendingBit) for TIM_ClearITPendingBit
    ft32f0xx_it.o(.ARM.exidx.text.TIM1_BRK_UP_TRG_COM_IRQHandler) refers to ft32f0xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) for [Anonymous Symbol]
    ft32f0xx_it.o(.text.EXTI4_15_IRQHandler) refers to ft32f0xx_exti.o(.text.EXTI_GetITStatus) for EXTI_GetITStatus
    ft32f0xx_it.o(.text.EXTI4_15_IRQHandler) refers to ft32f0xx_exti.o(.text.EXTI_ClearITPendingBit) for EXTI_ClearITPendingBit
    ft32f0xx_it.o(.text.EXTI4_15_IRQHandler) refers to ft32f0xx_it.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    ft32f0xx_it.o(.ARM.exidx.text.EXTI4_15_IRQHandler) refers to ft32f0xx_it.o(.text.EXTI4_15_IRQHandler) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.text.FT32_GPIO_Init) for FT32_GPIO_Init
    main.o(.text.main) refers to main.o(.text.FT32_EXIT_Init) for FT32_EXIT_Init
    main.o(.text.main) refers to main.o(.text.ADC_DMA_Config) for ADC_DMA_Config
    main.o(.text.main) refers to main.o(.text.Tim1BaseInit) for Tim1BaseInit
    main.o(.text.main) refers to main.o(.text.Tim3BaseInit) for Tim3BaseInit
    main.o(.text.main) refers to main.o(.text.Tim16BaseInit) for Tim16BaseInit
    main.o(.text.main) refers to ft32f0xx_rcc.o(.text.RCC_LSICmd) for RCC_LSICmd
    main.o(.text.main) refers to main.o(.text.IWDG_Config) for IWDG_Config
    main.o(.text.main) refers to systick.o(.text.SystickInit) for SystickInit
    main.o(.text.main) refers to dev_ad9877.o(.text.AD9833_InitIo) for AD9833_InitIo
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.text.main) refers to dev_adc.o(.text.get_adc_val) for get_adc_val
    main.o(.text.main) refers to dev_ad9877.o(.text.AD9833_SetPara) for AD9833_SetPara
    main.o(.text.main) refers to dev_pwm.o(.text.Devpwm_SetDuty) for Devpwm_SetDuty
    main.o(.text.main) refers to dev_gpio.o(.text.DevGpio_ReadInPut) for DevGpio_ReadInPut
    main.o(.text.main) refers to dev_gpio.o(.text.DevGpio_SetOutPut) for DevGpio_SetOutPut
    main.o(.text.main) refers to systick.o(.text.Delay) for Delay
    main.o(.text.main) refers to main.o(.text.test1) for test1
    main.o(.text.main) refers to main.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    main.o(.text.main) refers to ft32f0xx_it.o(.bss..L_MergedGlobals) for KEY1_Flg
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.FT32_GPIO_Init) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    main.o(.text.FT32_GPIO_Init) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    main.o(.ARM.exidx.text.FT32_GPIO_Init) refers to main.o(.text.FT32_GPIO_Init) for [Anonymous Symbol]
    main.o(.text.FT32_EXIT_Init) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    main.o(.text.FT32_EXIT_Init) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    main.o(.text.FT32_EXIT_Init) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    main.o(.text.FT32_EXIT_Init) refers to ft32f0xx_syscfg.o(.text.SYSCFG_EXTILineConfig) for SYSCFG_EXTILineConfig
    main.o(.text.FT32_EXIT_Init) refers to ft32f0xx_exti.o(.text.EXTI_Init) for EXTI_Init
    main.o(.text.FT32_EXIT_Init) refers to ft32f0xx_misc.o(.text.NVIC_Init) for NVIC_Init
    main.o(.ARM.exidx.text.FT32_EXIT_Init) refers to main.o(.text.FT32_EXIT_Init) for [Anonymous Symbol]
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_DeInit) for ADC_DeInit
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_StructInit) for ADC_StructInit
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_Init) for ADC_Init
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_ChannelConfig) for ADC_ChannelConfig
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_GetCalibrationFactor) for ADC_GetCalibrationFactor
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_DMARequestModeConfig) for ADC_DMARequestModeConfig
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_DMACmd) for ADC_DMACmd
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_Cmd) for ADC_Cmd
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_GetFlagStatus) for ADC_GetFlagStatus
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_dma.o(.text.DMA_DeInit) for DMA_DeInit
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_dma.o(.text.DMA_Init) for DMA_Init
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_dma.o(.text.DMA_Cmd) for DMA_Cmd
    main.o(.text.ADC_DMA_Config) refers to ft32f0xx_adc.o(.text.ADC_StartOfConversion) for ADC_StartOfConversion
    main.o(.text.ADC_DMA_Config) refers to main.o(.bss.DMA_DualConvertedValue) for DMA_DualConvertedValue
    main.o(.ARM.exidx.text.ADC_DMA_Config) refers to main.o(.text.ADC_DMA_Config) for [Anonymous Symbol]
    main.o(.text.Tim1BaseInit) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    main.o(.text.Tim1BaseInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    main.o(.text.Tim1BaseInit) refers to ft32f0xx_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    main.o(.text.Tim1BaseInit) refers to ft32f0xx_tim.o(.text.TIM_ITConfig) for TIM_ITConfig
    main.o(.text.Tim1BaseInit) refers to ft32f0xx_tim.o(.text.TIM_Cmd) for TIM_Cmd
    main.o(.text.Tim1BaseInit) refers to ft32f0xx_misc.o(.text.NVIC_Init) for NVIC_Init
    main.o(.ARM.exidx.text.Tim1BaseInit) refers to main.o(.text.Tim1BaseInit) for [Anonymous Symbol]
    main.o(.text.Tim3BaseInit) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    main.o(.text.Tim3BaseInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    main.o(.text.Tim3BaseInit) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    main.o(.text.Tim3BaseInit) refers to ft32f0xx_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    main.o(.text.Tim3BaseInit) refers to ft32f0xx_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    main.o(.text.Tim3BaseInit) refers to ft32f0xx_tim.o(.text.TIM_OC1Init) for TIM_OC1Init
    main.o(.text.Tim3BaseInit) refers to ft32f0xx_tim.o(.text.TIM_OC4Init) for TIM_OC4Init
    main.o(.text.Tim3BaseInit) refers to ft32f0xx_tim.o(.text.TIM_Cmd) for TIM_Cmd
    main.o(.text.Tim3BaseInit) refers to ft32f0xx_tim.o(.text.TIM_CtrlPWMOutputs) for TIM_CtrlPWMOutputs
    main.o(.ARM.exidx.text.Tim3BaseInit) refers to main.o(.text.Tim3BaseInit) for [Anonymous Symbol]
    main.o(.text.Tim16BaseInit) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    main.o(.text.Tim16BaseInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    main.o(.text.Tim16BaseInit) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for GPIO_Init
    main.o(.text.Tim16BaseInit) refers to ft32f0xx_tim.o(.text.TIM_TimeBaseInit) for TIM_TimeBaseInit
    main.o(.text.Tim16BaseInit) refers to ft32f0xx_tim.o(.text.TIM_OC1Init) for TIM_OC1Init
    main.o(.ARM.exidx.text.Tim16BaseInit) refers to main.o(.text.Tim16BaseInit) for [Anonymous Symbol]
    main.o(.text.IWDG_Config) refers to ft32f0xx_iwdg.o(.text.IWDG_WriteAccessCmd) for IWDG_WriteAccessCmd
    main.o(.text.IWDG_Config) refers to ft32f0xx_iwdg.o(.text.IWDG_SetPrescaler) for IWDG_SetPrescaler
    main.o(.text.IWDG_Config) refers to ft32f0xx_iwdg.o(.text.IWDG_SetReload) for IWDG_SetReload
    main.o(.text.IWDG_Config) refers to ft32f0xx_iwdg.o(.text.IWDG_ReloadCounter) for IWDG_ReloadCounter
    main.o(.text.IWDG_Config) refers to ft32f0xx_iwdg.o(.text.IWDG_Enable) for IWDG_Enable
    main.o(.text.IWDG_Config) refers to main.o(.data.lsi_freq) for lsi_freq
    main.o(.ARM.exidx.text.IWDG_Config) refers to main.o(.text.IWDG_Config) for [Anonymous Symbol]
    main.o(.text.test1) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.test1) refers to main.o(.text.test1) for [Anonymous Symbol]
    systick.o(.text.SystickInit) refers to system_ft32f0xx.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    systick.o(.text.SystickInit) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    systick.o(.text.SystickInit) refers to system_ft32f0xx.o(.data.SystemCoreClock) for SystemCoreClock
    systick.o(.ARM.exidx.text.SystickInit) refers to systick.o(.text.SystickInit) for [Anonymous Symbol]
    systick.o(.text.Delay) refers to systick.o(.bss.TimingDelay) for [Anonymous Symbol]
    systick.o(.ARM.exidx.text.Delay) refers to systick.o(.text.Delay) for [Anonymous Symbol]
    systick.o(.text.TimingDelay_Decrement) refers to systick.o(.bss.TimingDelay) for [Anonymous Symbol]
    systick.o(.ARM.exidx.text.TimingDelay_Decrement) refers to systick.o(.text.TimingDelay_Decrement) for [Anonymous Symbol]
    dev_adc.o(.text.look1_iflf_binlxpw) refers to fcmp.o(i._fls) for __aeabi_fcmplt
    dev_adc.o(.text.look1_iflf_binlxpw) refers to fcmp.o(i._fleq) for __aeabi_fcmple
    dev_adc.o(.text.look1_iflf_binlxpw) refers to fcmp.o(i._fgr) for __aeabi_fcmpgt
    dev_adc.o(.text.look1_iflf_binlxpw) refers to faddsub.o(x$fpl$fsub) for __aeabi_fsub
    dev_adc.o(.text.look1_iflf_binlxpw) refers to fdiv.o(.text) for __aeabi_fdiv
    dev_adc.o(.text.look1_iflf_binlxpw) refers to fmul.o(x$fpl$fmul) for __aeabi_fmul
    dev_adc.o(.text.look1_iflf_binlxpw) refers to faddsub.o(x$fpl$fadd) for __aeabi_fadd
    dev_adc.o(.ARM.exidx.text.look1_iflf_binlxpw) refers to dev_adc.o(.text.look1_iflf_binlxpw) for [Anonymous Symbol]
    dev_adc.o(.text.get_adc_val) refers to ft32f0xx_dma.o(.text.DMA_GetFlagStatus) for DMA_GetFlagStatus
    dev_adc.o(.text.get_adc_val) refers to ft32f0xx_dma.o(.text.DMA_ClearFlag) for DMA_ClearFlag
    dev_adc.o(.ARM.exidx.text.get_adc_val) refers to dev_adc.o(.text.get_adc_val) for [Anonymous Symbol]
    dev_ad9877.o(.text.AD9833_SetPara) refers to ddiv.o(.text) for __aeabi_ddiv
    dev_ad9877.o(.text.AD9833_SetPara) refers to dmul.o(.text) for __aeabi_dmul
    dev_ad9877.o(.text.AD9833_SetPara) refers to dfixi.o(.text) for __aeabi_d2iz
    dev_ad9877.o(.text.AD9833_SetPara) refers to dev_ad9877.o(.text.AD9833_SendData) for AD9833_SendData
    dev_ad9877.o(.ARM.exidx.text.AD9833_SetPara) refers to dev_ad9877.o(.text.AD9833_SetPara) for [Anonymous Symbol]
    dev_ad9877.o(.text.AD9833_SendData) refers to dev_gpio.o(.text.DevGpio_SetOutPut) for DevGpio_SetOutPut
    dev_ad9877.o(.ARM.exidx.text.AD9833_SendData) refers to dev_ad9877.o(.text.AD9833_SendData) for [Anonymous Symbol]
    dev_ad9877.o(.text.AD9833_InitIo) refers to dev_gpio.o(.text.DevGpio_SetOutPut) for DevGpio_SetOutPut
    dev_ad9877.o(.ARM.exidx.text.AD9833_InitIo) refers to dev_ad9877.o(.text.AD9833_InitIo) for [Anonymous Symbol]
    dev_gpio.o(.text.DevGpio_SetOutPut) refers to ft32f0xx_gpio.o(.text.GPIO_WriteBit) for GPIO_WriteBit
    dev_gpio.o(.text.DevGpio_SetOutPut) refers to dev_gpio.o(.rodata.dev_gpio_handle) for [Anonymous Symbol]
    dev_gpio.o(.ARM.exidx.text.DevGpio_SetOutPut) refers to dev_gpio.o(.text.DevGpio_SetOutPut) for [Anonymous Symbol]
    dev_gpio.o(.text.DevGpio_ReadInPut) refers to ft32f0xx_gpio.o(.text.GPIO_ReadInputDataBit) for GPIO_ReadInputDataBit
    dev_gpio.o(.text.DevGpio_ReadInPut) refers to dev_gpio.o(.rodata.dev_gpio_handle) for [Anonymous Symbol]
    dev_gpio.o(.ARM.exidx.text.DevGpio_ReadInPut) refers to dev_gpio.o(.text.DevGpio_ReadInPut) for [Anonymous Symbol]
    dev_pwm.o(.text.Devpwm_SetDuty) refers to ft32f0xx_tim.o(.text.TIM_SetCompare1) for TIM_SetCompare1
    dev_pwm.o(.ARM.exidx.text.Devpwm_SetDuty) refers to dev_pwm.o(.text.Devpwm_SetDuty) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortYield) for vPortYield
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to queue.o(.text.vQueueUnregisterQueue) for vQueueUnregisterQueue
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.text.vQueueUnregisterQueue) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueUnregisterQueue) refers to queue.o(.text.vQueueUnregisterQueue) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueAddToRegistry) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.vQueueAddToRegistry) refers to queue.o(.text.vQueueAddToRegistry) for [Anonymous Symbol]
    queue.o(.text.pcQueueGetName) refers to queue.o(.bss.xQueueRegistry) for xQueueRegistry
    queue.o(.ARM.exidx.text.pcQueueGetName) refers to queue.o(.text.pcQueueGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.xTaskCreate) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.text.xTaskCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.xTaskCreate) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCreate) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss..L_MergedGlobals.1) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskDelay) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss..L_MergedGlobals.1) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss..L_MergedGlobals.1) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvIdleTask) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss..L_MergedGlobals.1) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to taskmanager.o(.text.vApplicationTickHook) for vApplicationTickHook
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss..L_MergedGlobals.1) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss..L_MergedGlobals.1) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to taskmanager.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss..L_MergedGlobals.1) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss..L_MergedGlobals.1) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss..L_MergedGlobals.1) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss..L_MergedGlobals.1) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss..L_MergedGlobals.1) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss..L_MergedGlobals.1) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.ulTaskNotifyTake) refers to tasks.o(.text.ulTaskNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskNotifyWait) refers to tasks.o(.text.xTaskNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortYield) for vPortYield
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss..L_MergedGlobals.1) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss..L_MergedGlobals.1) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss..L_MergedGlobals.1) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR) refers to tasks.o(.text.vTaskNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskNotifyStateClear) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.xTaskNotifyStateClear) refers to tasks.o(.text.xTaskNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.ulTaskNotifyValueClear) refers to tasks.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.ulTaskNotifyValueClear) refers to tasks.o(.text.ulTaskNotifyValueClear) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortStartFirstTask) for vPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    port.o(.text.vPortSetupTimerInterrupt) refers to system_ft32f0xx.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.text.vPortStartFirstTask) refers to tasks.o(.bss..L_MergedGlobals) for pxCurrentTCB
    port.o(.ARM.exidx.text.vPortStartFirstTask) refers to port.o(.text.vPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortYield) refers to port.o(.text.vPortYield) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.ulSetInterruptMaskFromISR) refers to port.o(.text.ulSetInterruptMaskFromISR) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vClearInterruptMaskFromISR) refers to port.o(.text.vClearInterruptMaskFromISR) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss..L_MergedGlobals) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to port.o(.text.ulSetInterruptMaskFromISR) for ulSetInterruptMaskFromISR
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.text.SysTick_Handler) refers to port.o(.text.vClearInterruptMaskFromISR) for vClearInterruptMaskFromISR
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.pvPortMalloc) refers to taskmanager.o(.text.vApplicationMallocFailedHook) for vApplicationMallocFailedHook
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.ucHeap) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss..L_MergedGlobals) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    highprotask.o(.text.CreateHighProTask) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    highprotask.o(.text.CreateHighProTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    highprotask.o(.text.CreateHighProTask) refers to highprotask.o(.bss.xHighProTaskQueue) for xHighProTaskQueue
    highprotask.o(.text.CreateHighProTask) refers to highprotask.o(.text.HighProTask) for HighProTask
    highprotask.o(.ARM.exidx.text.CreateHighProTask) refers to highprotask.o(.text.CreateHighProTask) for [Anonymous Symbol]
    highprotask.o(.ARM.exidx.text.HighProTask) refers to highprotask.o(.text.HighProTask) for [Anonymous Symbol]
    idletask.o(.ARM.exidx.text.vApplicationIdleHook) refers to idletask.o(.text.vApplicationIdleHook) for [Anonymous Symbol]
    idletask.o(.ARM.exidx.text.Sleep) refers to idletask.o(.text.Sleep) for [Anonymous Symbol]
    inittask.o(.text.CreateInitTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    inittask.o(.text.CreateInitTask) refers to inittask.o(.bss.pInitTaskHandle) for [Anonymous Symbol]
    inittask.o(.text.CreateInitTask) refers to inittask.o(.text.InitTask) for InitTask
    inittask.o(.ARM.exidx.text.CreateInitTask) refers to inittask.o(.text.CreateInitTask) for [Anonymous Symbol]
    inittask.o(.ARM.exidx.text.InitTask) refers to inittask.o(.text.InitTask) for [Anonymous Symbol]
    lowprotask.o(.ARM.exidx.text.CreateLowProTask) refers to lowprotask.o(.text.CreateLowProTask) for [Anonymous Symbol]
    taskmanager.o(.text.SendMessage) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    taskmanager.o(.ARM.exidx.text.SendMessage) refers to taskmanager.o(.text.SendMessage) for [Anonymous Symbol]
    taskmanager.o(.text.SendShortMessageFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    taskmanager.o(.ARM.exidx.text.SendShortMessageFromISR) refers to taskmanager.o(.text.SendShortMessageFromISR) for [Anonymous Symbol]
    taskmanager.o(.text.SendMessageFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    taskmanager.o(.ARM.exidx.text.SendMessageFromISR) refers to taskmanager.o(.text.SendMessageFromISR) for [Anonymous Symbol]
    taskmanager.o(.text.vApplicationTickHook) refers to taskmanager.o(.text.SendShortMessageFromISR) for SendShortMessageFromISR
    taskmanager.o(.text.vApplicationTickHook) refers to aeabi_sdiv.o(.text) for __aeabi_uidivmod
    taskmanager.o(.text.vApplicationTickHook) refers to taskmanager.o(.bss.ulSystemTimeTickCount) for [Anonymous Symbol]
    taskmanager.o(.text.vApplicationTickHook) refers to highprotask.o(.bss.xHighProTaskQueue) for xHighProTaskQueue
    taskmanager.o(.text.vApplicationTickHook) refers to lowprotask.o(.bss.xLowProTaskQueue) for xLowProTaskQueue
    taskmanager.o(.ARM.exidx.text.vApplicationTickHook) refers to taskmanager.o(.text.vApplicationTickHook) for [Anonymous Symbol]
    taskmanager.o(.ARM.exidx.text.vApplicationMallocFailedHook) refers to taskmanager.o(.text.vApplicationMallocFailedHook) for [Anonymous Symbol]
    taskmanager.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to taskmanager.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    ft32f0xx_adc.o(.text.ADC_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_DeInit) refers to ft32f0xx_adc.o(.text.ADC_DeInit) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_Init) refers to ft32f0xx_adc.o(.text.ADC_Init) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_StructInit) refers to ft32f0xx_adc.o(.text.ADC_StructInit) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_Cmd) refers to ft32f0xx_adc.o(.text.ADC_Cmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_ClockModeConfig) refers to ft32f0xx_adc.o(.text.ADC_ClockModeConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_JitterCmd) refers to ft32f0xx_adc.o(.text.ADC_JitterCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_AutoPowerOffCmd) refers to ft32f0xx_adc.o(.text.ADC_AutoPowerOffCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_WaitModeCmd) refers to ft32f0xx_adc.o(.text.ADC_WaitModeCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogCmd) refers to ft32f0xx_adc.o(.text.ADC_AnalogWatchdogCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogThresholdsConfig) refers to ft32f0xx_adc.o(.text.ADC_AnalogWatchdogThresholdsConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelConfig) refers to ft32f0xx_adc.o(.text.ADC_AnalogWatchdogSingleChannelConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelCmd) refers to ft32f0xx_adc.o(.text.ADC_AnalogWatchdogSingleChannelCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_TempSensorCmd) refers to ft32f0xx_adc.o(.text.ADC_TempSensorCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_VrefintCmd) refers to ft32f0xx_adc.o(.text.ADC_VrefintCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_VbatCmd) refers to ft32f0xx_adc.o(.text.ADC_VbatCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_ChannelConfig) refers to ft32f0xx_adc.o(.text.ADC_ChannelConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_ContinuousModeCmd) refers to ft32f0xx_adc.o(.text.ADC_ContinuousModeCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_DiscModeCmd) refers to ft32f0xx_adc.o(.text.ADC_DiscModeCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_OverrunModeCmd) refers to ft32f0xx_adc.o(.text.ADC_OverrunModeCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetCalibrationFactor) refers to ft32f0xx_adc.o(.text.ADC_GetCalibrationFactor) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_StopOfConversion) refers to ft32f0xx_adc.o(.text.ADC_StopOfConversion) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_StartOfConversion) refers to ft32f0xx_adc.o(.text.ADC_StartOfConversion) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetConversionValue) refers to ft32f0xx_adc.o(.text.ADC_GetConversionValue) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_DMACmd) refers to ft32f0xx_adc.o(.text.ADC_DMACmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_DMARequestModeConfig) refers to ft32f0xx_adc.o(.text.ADC_DMARequestModeConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_ITConfig) refers to ft32f0xx_adc.o(.text.ADC_ITConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetFlagStatus) refers to ft32f0xx_adc.o(.text.ADC_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_ClearFlag) refers to ft32f0xx_adc.o(.text.ADC_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetITStatus) refers to ft32f0xx_adc.o(.text.ADC_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_ClearITPendingBit) refers to ft32f0xx_adc.o(.text.ADC_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_VrefselConfig) refers to ft32f0xx_adc.o(.text.ADC_VrefselConfig) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_VrefDecibCmd) refers to ft32f0xx_adc.o(.text.ADC_VrefDecibCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_IoshSmpCmd) refers to ft32f0xx_adc.o(.text.ADC_IoshSmpCmd) for [Anonymous Symbol]
    ft32f0xx_adc.o(.ARM.exidx.text.ADC_IoshAmpCmd) refers to ft32f0xx_adc.o(.text.ADC_IoshAmpCmd) for [Anonymous Symbol]
    ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_GetREVID) refers to ft32f0xx_debug.o(.text.DBGMCU_GetREVID) for [Anonymous Symbol]
    ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_GetDEVID) refers to ft32f0xx_debug.o(.text.DBGMCU_GetDEVID) for [Anonymous Symbol]
    ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_Config) refers to ft32f0xx_debug.o(.text.DBGMCU_Config) for [Anonymous Symbol]
    ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_APB1PeriphConfig) refers to ft32f0xx_debug.o(.text.DBGMCU_APB1PeriphConfig) for [Anonymous Symbol]
    ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_APB2PeriphConfig) refers to ft32f0xx_debug.o(.text.DBGMCU_APB2PeriphConfig) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_DeInit) refers to ft32f0xx_dma.o(.text.DMA_DeInit) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_Init) refers to ft32f0xx_dma.o(.text.DMA_Init) for [Anonymous Symbol]
    ft32f0xx_dma.o(.text.DMA_StructInit) refers to rt_memclr.o(.text) for __aeabi_memclr4
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_StructInit) refers to ft32f0xx_dma.o(.text.DMA_StructInit) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_Cmd) refers to ft32f0xx_dma.o(.text.DMA_Cmd) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_SetCurrDataCounter) refers to ft32f0xx_dma.o(.text.DMA_SetCurrDataCounter) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_GetCurrDataCounter) refers to ft32f0xx_dma.o(.text.DMA_GetCurrDataCounter) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_ITConfig) refers to ft32f0xx_dma.o(.text.DMA_ITConfig) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_GetFlagStatus) refers to ft32f0xx_dma.o(.text.DMA_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_ClearFlag) refers to ft32f0xx_dma.o(.text.DMA_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_GetITStatus) refers to ft32f0xx_dma.o(.text.DMA_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_dma.o(.ARM.exidx.text.DMA_ClearITPendingBit) refers to ft32f0xx_dma.o(.text.DMA_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_DeInit) refers to ft32f0xx_exti.o(.text.EXTI_DeInit) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_Init) refers to ft32f0xx_exti.o(.text.EXTI_Init) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_StructInit) refers to ft32f0xx_exti.o(.text.EXTI_StructInit) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_GenerateSWInterrupt) refers to ft32f0xx_exti.o(.text.EXTI_GenerateSWInterrupt) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_GetFlagStatus) refers to ft32f0xx_exti.o(.text.EXTI_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_ClearFlag) refers to ft32f0xx_exti.o(.text.EXTI_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_GetITStatus) refers to ft32f0xx_exti.o(.text.EXTI_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_exti.o(.ARM.exidx.text.EXTI_ClearITPendingBit) refers to ft32f0xx_exti.o(.text.EXTI_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_SetLatency) refers to ft32f0xx_flash.o(.text.FLASH_SetLatency) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_PrefetchBufferCmd) refers to ft32f0xx_flash.o(.text.FLASH_PrefetchBufferCmd) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_GetPrefetchBufferStatus) refers to ft32f0xx_flash.o(.text.FLASH_GetPrefetchBufferStatus) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_Unlock) refers to ft32f0xx_flash.o(.text.FLASH_Unlock) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_Lock) refers to ft32f0xx_flash.o(.text.FLASH_Lock) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_ErasePage) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ErasePage) refers to ft32f0xx_flash.o(.text.FLASH_ErasePage) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) refers to ft32f0xx_flash.o(.text.FLASH_GetStatus) for FLASH_GetStatus
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_EraseAllPages) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_EraseAllPages) refers to ft32f0xx_flash.o(.text.FLASH_EraseAllPages) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_ProgramWord) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ProgramWord) refers to ft32f0xx_flash.o(.text.FLASH_ProgramWord) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Unlock) refers to ft32f0xx_flash.o(.text.FLASH_OB_Unlock) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Lock) refers to ft32f0xx_flash.o(.text.FLASH_OB_Lock) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Launch) refers to ft32f0xx_flash.o(.text.FLASH_OB_Launch) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_Erase) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Erase) refers to ft32f0xx_flash.o(.text.FLASH_OB_Erase) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_GetRDP) refers to ft32f0xx_flash.o(.text.FLASH_OB_GetRDP) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_EnableWRP) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_EnableWRP) refers to ft32f0xx_flash.o(.text.FLASH_OB_EnableWRP) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_RDPConfig) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_RDPConfig) refers to ft32f0xx_flash.o(.text.FLASH_OB_RDPConfig) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_UserConfig) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_UserConfig) refers to ft32f0xx_flash.o(.text.FLASH_OB_UserConfig) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_BOOTConfig) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_BOOTConfig) refers to ft32f0xx_flash.o(.text.FLASH_OB_BOOTConfig) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_VDDAConfig) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_VDDAConfig) refers to ft32f0xx_flash.o(.text.FLASH_OB_VDDAConfig) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_SRAMParityConfig) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_SRAMParityConfig) refers to ft32f0xx_flash.o(.text.FLASH_OB_SRAMParityConfig) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_WriteUser) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_WriteUser) refers to ft32f0xx_flash.o(.text.FLASH_OB_WriteUser) for [Anonymous Symbol]
    ft32f0xx_flash.o(.text.FLASH_OB_ProgramData) refers to ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_ProgramData) refers to ft32f0xx_flash.o(.text.FLASH_OB_ProgramData) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_GetUser) refers to ft32f0xx_flash.o(.text.FLASH_OB_GetUser) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_GetWRP) refers to ft32f0xx_flash.o(.text.FLASH_OB_GetWRP) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ITConfig) refers to ft32f0xx_flash.o(.text.FLASH_ITConfig) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus) refers to ft32f0xx_flash.o(.text.FLASH_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ClearFlag) refers to ft32f0xx_flash.o(.text.FLASH_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_flash.o(.ARM.exidx.text.FLASH_GetStatus) refers to ft32f0xx_flash.o(.text.FLASH_GetStatus) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.text.GPIO_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphResetCmd) for RCC_AHBPeriphResetCmd
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_DeInit) refers to ft32f0xx_gpio.o(.text.GPIO_DeInit) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_Init) refers to ft32f0xx_gpio.o(.text.GPIO_Init) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_StructInit) refers to ft32f0xx_gpio.o(.text.GPIO_StructInit) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig) refers to ft32f0xx_gpio.o(.text.GPIO_PinLockConfig) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit) refers to ft32f0xx_gpio.o(.text.GPIO_ReadInputDataBit) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadInputData) refers to ft32f0xx_gpio.o(.text.GPIO_ReadInputData) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit) refers to ft32f0xx_gpio.o(.text.GPIO_ReadOutputDataBit) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData) refers to ft32f0xx_gpio.o(.text.GPIO_ReadOutputData) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_SetBits) refers to ft32f0xx_gpio.o(.text.GPIO_SetBits) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ResetBits) refers to ft32f0xx_gpio.o(.text.GPIO_ResetBits) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_WriteBit) refers to ft32f0xx_gpio.o(.text.GPIO_WriteBit) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_Write) refers to ft32f0xx_gpio.o(.text.GPIO_Write) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig) refers to ft32f0xx_gpio.o(.text.GPIO_PinAFConfig) for [Anonymous Symbol]
    ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_LedmConfig) refers to ft32f0xx_gpio.o(.text.GPIO_LedmConfig) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_WriteAccessCmd) refers to ft32f0xx_iwdg.o(.text.IWDG_WriteAccessCmd) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_SetPrescaler) refers to ft32f0xx_iwdg.o(.text.IWDG_SetPrescaler) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_SetReload) refers to ft32f0xx_iwdg.o(.text.IWDG_SetReload) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_ReloadCounter) refers to ft32f0xx_iwdg.o(.text.IWDG_ReloadCounter) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_SetWindowValue) refers to ft32f0xx_iwdg.o(.text.IWDG_SetWindowValue) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_Enable) refers to ft32f0xx_iwdg.o(.text.IWDG_Enable) for [Anonymous Symbol]
    ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_GetFlagStatus) refers to ft32f0xx_iwdg.o(.text.IWDG_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_misc.o(.ARM.exidx.text.NVIC_Init) refers to ft32f0xx_misc.o(.text.NVIC_Init) for [Anonymous Symbol]
    ft32f0xx_misc.o(.ARM.exidx.text.NVIC_SystemLPConfig) refers to ft32f0xx_misc.o(.text.NVIC_SystemLPConfig) for [Anonymous Symbol]
    ft32f0xx_misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig) refers to ft32f0xx_misc.o(.text.SysTick_CLKSourceConfig) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.text.PWR_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_DeInit) refers to ft32f0xx_pwr.o(.text.PWR_DeInit) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_BackupAccessCmd) refers to ft32f0xx_pwr.o(.text.PWR_BackupAccessCmd) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_PVDLevelConfig) refers to ft32f0xx_pwr.o(.text.PWR_PVDLevelConfig) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_PVDCmd) refers to ft32f0xx_pwr.o(.text.PWR_PVDCmd) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_WakeUpPinCmd) refers to ft32f0xx_pwr.o(.text.PWR_WakeUpPinCmd) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_EnterSleepMode) refers to ft32f0xx_pwr.o(.text.PWR_EnterSleepMode) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_EnterSTOPMode) refers to ft32f0xx_pwr.o(.text.PWR_EnterSTOPMode) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_EnterSTANDBYMode) refers to ft32f0xx_pwr.o(.text.PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_GetFlagStatus) refers to ft32f0xx_pwr.o(.text.PWR_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_pwr.o(.ARM.exidx.text.PWR_ClearFlag) refers to ft32f0xx_pwr.o(.text.PWR_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_DeInit) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSEConfig) refers to ft32f0xx_rcc.o(.text.RCC_HSEConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_WaitForHSEStartUp) refers to ft32f0xx_rcc.o(.text.RCC_WaitForHSEStartUp) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus) refers to ft32f0xx_rcc.o(.text.RCC_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue) refers to ft32f0xx_rcc.o(.text.RCC_AdjustHSICalibrationValue) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSICmd) refers to ft32f0xx_rcc.o(.text.RCC_HSICmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AdjustHSI14CalibrationValue) refers to ft32f0xx_rcc.o(.text.RCC_AdjustHSI14CalibrationValue) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSI14Cmd) refers to ft32f0xx_rcc.o(.text.RCC_HSI14Cmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSI14ADCRequestCmd) refers to ft32f0xx_rcc.o(.text.RCC_HSI14ADCRequestCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_LSEConfig) refers to ft32f0xx_rcc.o(.text.RCC_LSEConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_LSEDriveConfig) refers to ft32f0xx_rcc.o(.text.RCC_LSEDriveConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_LSICmd) refers to ft32f0xx_rcc.o(.text.RCC_LSICmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PLLConfig) refers to ft32f0xx_rcc.o(.text.RCC_PLLConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PLLCmd) refers to ft32f0xx_rcc.o(.text.RCC_PLLCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSI48Cmd) refers to ft32f0xx_rcc.o(.text.RCC_HSI48Cmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PREDIV1Config) refers to ft32f0xx_rcc.o(.text.RCC_PREDIV1Config) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd) refers to ft32f0xx_rcc.o(.text.RCC_ClockSecuritySystemCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_MCOConfig) refers to ft32f0xx_rcc.o(.text.RCC_MCOConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_SYSCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource) refers to ft32f0xx_rcc.o(.text.RCC_GetSYSCLKSource) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_HCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_PCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_ADCCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_I2CCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_I2CCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_USARTCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_USARTCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_USBCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_USBCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.text.RCC_GetClocksFreq) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    ft32f0xx_rcc.o(.text.RCC_GetClocksFreq) refers to ft32f0xx_rcc.o(.rodata.APBAHBPrescTable) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq) refers to ft32f0xx_rcc.o(.text.RCC_GetClocksFreq) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_RTCCLKConfig) refers to ft32f0xx_rcc.o(.text.RCC_RTCCLKConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_RTCCLKCmd) refers to ft32f0xx_rcc.o(.text.RCC_RTCCLKCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_BackupResetCmd) refers to ft32f0xx_rcc.o(.text.RCC_BackupResetCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphClockCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AHBPeriphResetCmd) refers to ft32f0xx_rcc.o(.text.RCC_AHBPeriphResetCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ITConfig) refers to ft32f0xx_rcc.o(.text.RCC_ITConfig) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ClearFlag) refers to ft32f0xx_rcc.o(.text.RCC_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetITStatus) refers to ft32f0xx_rcc.o(.text.RCC_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit) refers to ft32f0xx_rcc.o(.text.RCC_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_DeInit) refers to ft32f0xx_rtc.o(.text.RTC_EnterInitMode) for RTC_EnterInitMode
    ft32f0xx_rtc.o(.text.RTC_DeInit) refers to ft32f0xx_rtc.o(.text.RTC_WaitForSynchro) for RTC_WaitForSynchro
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_DeInit) refers to ft32f0xx_rtc.o(.text.RTC_DeInit) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_EnterInitMode) refers to ft32f0xx_rtc.o(.text.RTC_EnterInitMode) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_WaitForSynchro) refers to ft32f0xx_rtc.o(.text.RTC_WaitForSynchro) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_Init) refers to ft32f0xx_rtc.o(.text.RTC_EnterInitMode) for RTC_EnterInitMode
    ft32f0xx_rtc.o(.text.RTC_Init) refers to ft32f0xx_rtc.o(.text.RTC_ExitInitMode) for RTC_ExitInitMode
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_Init) refers to ft32f0xx_rtc.o(.text.RTC_Init) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ExitInitMode) refers to ft32f0xx_rtc.o(.text.RTC_ExitInitMode) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_StructInit) refers to ft32f0xx_rtc.o(.text.RTC_StructInit) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_WriteProtectionCmd) refers to ft32f0xx_rtc.o(.text.RTC_WriteProtectionCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_RefClockCmd) refers to ft32f0xx_rtc.o(.text.RTC_EnterInitMode) for RTC_EnterInitMode
    ft32f0xx_rtc.o(.text.RTC_RefClockCmd) refers to ft32f0xx_rtc.o(.text.RTC_ExitInitMode) for RTC_ExitInitMode
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_RefClockCmd) refers to ft32f0xx_rtc.o(.text.RTC_RefClockCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_BypassShadowCmd) refers to ft32f0xx_rtc.o(.text.RTC_BypassShadowCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_SetTime) refers to ft32f0xx_rtc.o(.text.RTC_EnterInitMode) for RTC_EnterInitMode
    ft32f0xx_rtc.o(.text.RTC_SetTime) refers to ft32f0xx_rtc.o(.text.RTC_ExitInitMode) for RTC_ExitInitMode
    ft32f0xx_rtc.o(.text.RTC_SetTime) refers to ft32f0xx_rtc.o(.text.RTC_WaitForSynchro) for RTC_WaitForSynchro
    ft32f0xx_rtc.o(.text.RTC_SetTime) refers to ft32f0xx_rtc.o(.text.RTC_ByteToBcd2) for RTC_ByteToBcd2
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SetTime) refers to ft32f0xx_rtc.o(.text.RTC_SetTime) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_ByteToBcd2) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ByteToBcd2) refers to ft32f0xx_rtc.o(.text.RTC_ByteToBcd2) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TimeStructInit) refers to ft32f0xx_rtc.o(.text.RTC_TimeStructInit) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetTime) refers to ft32f0xx_rtc.o(.text.RTC_GetTime) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetSubSecond) refers to ft32f0xx_rtc.o(.text.RTC_GetSubSecond) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_SetDate) refers to ft32f0xx_rtc.o(.text.RTC_EnterInitMode) for RTC_EnterInitMode
    ft32f0xx_rtc.o(.text.RTC_SetDate) refers to ft32f0xx_rtc.o(.text.RTC_ExitInitMode) for RTC_ExitInitMode
    ft32f0xx_rtc.o(.text.RTC_SetDate) refers to ft32f0xx_rtc.o(.text.RTC_WaitForSynchro) for RTC_WaitForSynchro
    ft32f0xx_rtc.o(.text.RTC_SetDate) refers to ft32f0xx_rtc.o(.text.RTC_ByteToBcd2) for RTC_ByteToBcd2
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SetDate) refers to ft32f0xx_rtc.o(.text.RTC_SetDate) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_DateStructInit) refers to ft32f0xx_rtc.o(.text.RTC_DateStructInit) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetDate) refers to ft32f0xx_rtc.o(.text.RTC_GetDate) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_SetAlarm) refers to ft32f0xx_rtc.o(.text.RTC_ByteToBcd2) for RTC_ByteToBcd2
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SetAlarm) refers to ft32f0xx_rtc.o(.text.RTC_SetAlarm) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_AlarmStructInit) refers to ft32f0xx_rtc.o(.text.RTC_AlarmStructInit) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetAlarm) refers to ft32f0xx_rtc.o(.text.RTC_GetAlarm) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_AlarmCmd) refers to ft32f0xx_rtc.o(.text.RTC_AlarmCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_AlarmSubSecondConfig) refers to ft32f0xx_rtc.o(.text.RTC_AlarmSubSecondConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetAlarmSubSecond) refers to ft32f0xx_rtc.o(.text.RTC_GetAlarmSubSecond) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_DayLightSavingConfig) refers to ft32f0xx_rtc.o(.text.RTC_DayLightSavingConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetStoreOperation) refers to ft32f0xx_rtc.o(.text.RTC_GetStoreOperation) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_OutputConfig) refers to ft32f0xx_rtc.o(.text.RTC_OutputConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_CalibOutputCmd) refers to ft32f0xx_rtc.o(.text.RTC_CalibOutputCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_CalibOutputConfig) refers to ft32f0xx_rtc.o(.text.RTC_CalibOutputConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SmoothCalibConfig) refers to ft32f0xx_rtc.o(.text.RTC_SmoothCalibConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TimeStampCmd) refers to ft32f0xx_rtc.o(.text.RTC_TimeStampCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetTimeStamp) refers to ft32f0xx_rtc.o(.text.RTC_GetTimeStamp) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetTimeStampSubSecond) refers to ft32f0xx_rtc.o(.text.RTC_GetTimeStampSubSecond) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperTriggerConfig) refers to ft32f0xx_rtc.o(.text.RTC_TamperTriggerConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperCmd) refers to ft32f0xx_rtc.o(.text.RTC_TamperCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperFilterConfig) refers to ft32f0xx_rtc.o(.text.RTC_TamperFilterConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperSamplingFreqConfig) refers to ft32f0xx_rtc.o(.text.RTC_TamperSamplingFreqConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperPinsPrechargeDuration) refers to ft32f0xx_rtc.o(.text.RTC_TamperPinsPrechargeDuration) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TimeStampOnTamperDetectionCmd) refers to ft32f0xx_rtc.o(.text.RTC_TimeStampOnTamperDetectionCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperPullUpCmd) refers to ft32f0xx_rtc.o(.text.RTC_TamperPullUpCmd) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_OutputTypeConfig) refers to ft32f0xx_rtc.o(.text.RTC_OutputTypeConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.text.RTC_SynchroShiftConfig) refers to ft32f0xx_rtc.o(.text.RTC_WaitForSynchro) for RTC_WaitForSynchro
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SynchroShiftConfig) refers to ft32f0xx_rtc.o(.text.RTC_SynchroShiftConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ITConfig) refers to ft32f0xx_rtc.o(.text.RTC_ITConfig) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetFlagStatus) refers to ft32f0xx_rtc.o(.text.RTC_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ClearFlag) refers to ft32f0xx_rtc.o(.text.RTC_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetITStatus) refers to ft32f0xx_rtc.o(.text.RTC_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ClearITPendingBit) refers to ft32f0xx_rtc.o(.text.RTC_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_DeInit) refers to ft32f0xx_syscfg.o(.text.SYSCFG_DeInit) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_MemoryRemapConfig) refers to ft32f0xx_syscfg.o(.text.SYSCFG_MemoryRemapConfig) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_DMAChannelRemapConfig) refers to ft32f0xx_syscfg.o(.text.SYSCFG_DMAChannelRemapConfig) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_I2CFastModePlusConfig) refers to ft32f0xx_syscfg.o(.text.SYSCFG_I2CFastModePlusConfig) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_IRDAEnvSelection) refers to ft32f0xx_syscfg.o(.text.SYSCFG_IRDAEnvSelection) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_EXTILineConfig) refers to ft32f0xx_syscfg.o(.text.SYSCFG_EXTILineConfig) for [Anonymous Symbol]
    ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_BreakConfig) refers to ft32f0xx_syscfg.o(.text.SYSCFG_BreakConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    ft32f0xx_tim.o(.text.TIM_DeInit) refers to ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_DeInit) refers to ft32f0xx_tim.o(.text.TIM_DeInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_TimeBaseInit) refers to ft32f0xx_tim.o(.text.TIM_TimeBaseInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit) refers to ft32f0xx_tim.o(.text.TIM_TimeBaseStructInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_PrescalerConfig) refers to ft32f0xx_tim.o(.text.TIM_PrescalerConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_CounterModeConfig) refers to ft32f0xx_tim.o(.text.TIM_CounterModeConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCounter) refers to ft32f0xx_tim.o(.text.TIM_SetCounter) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetAutoreload) refers to ft32f0xx_tim.o(.text.TIM_SetAutoreload) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCounter) refers to ft32f0xx_tim.o(.text.TIM_GetCounter) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetPrescaler) refers to ft32f0xx_tim.o(.text.TIM_GetPrescaler) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig) refers to ft32f0xx_tim.o(.text.TIM_UpdateDisableConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig) refers to ft32f0xx_tim.o(.text.TIM_UpdateRequestConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig) refers to ft32f0xx_tim.o(.text.TIM_ARRPreloadConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode) refers to ft32f0xx_tim.o(.text.TIM_SelectOnePulseMode) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetClockDivision) refers to ft32f0xx_tim.o(.text.TIM_SetClockDivision) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_Cmd) refers to ft32f0xx_tim.o(.text.TIM_Cmd) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_BDTRConfig) refers to ft32f0xx_tim.o(.text.TIM_BDTRConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_BDTRStructInit) refers to rt_memclr.o(.text) for __aeabi_memclr
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_BDTRStructInit) refers to ft32f0xx_tim.o(.text.TIM_BDTRStructInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs) refers to ft32f0xx_tim.o(.text.TIM_CtrlPWMOutputs) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1Init) refers to ft32f0xx_tim.o(.text.TIM_OC1Init) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2Init) refers to ft32f0xx_tim.o(.text.TIM_OC2Init) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3Init) refers to ft32f0xx_tim.o(.text.TIM_OC3Init) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4Init) refers to ft32f0xx_tim.o(.text.TIM_OC4Init) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OCStructInit) refers to ft32f0xx_tim.o(.text.TIM_OCStructInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOCxM) refers to ft32f0xx_tim.o(.text.TIM_SelectOCxM) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare1) refers to ft32f0xx_tim.o(.text.TIM_SetCompare1) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare2) refers to ft32f0xx_tim.o(.text.TIM_SetCompare2) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare3) refers to ft32f0xx_tim.o(.text.TIM_SetCompare3) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare4) refers to ft32f0xx_tim.o(.text.TIM_SetCompare4) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config) refers to ft32f0xx_tim.o(.text.TIM_ForcedOC1Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config) refers to ft32f0xx_tim.o(.text.TIM_ForcedOC2Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config) refers to ft32f0xx_tim.o(.text.TIM_ForcedOC3Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config) refers to ft32f0xx_tim.o(.text.TIM_ForcedOC4Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_CCPreloadControl) refers to ft32f0xx_tim.o(.text.TIM_CCPreloadControl) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig) refers to ft32f0xx_tim.o(.text.TIM_OC1PreloadConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig) refers to ft32f0xx_tim.o(.text.TIM_OC2PreloadConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig) refers to ft32f0xx_tim.o(.text.TIM_OC3PreloadConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig) refers to ft32f0xx_tim.o(.text.TIM_OC4PreloadConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1FastConfig) refers to ft32f0xx_tim.o(.text.TIM_OC1FastConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2FastConfig) refers to ft32f0xx_tim.o(.text.TIM_OC2FastConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3FastConfig) refers to ft32f0xx_tim.o(.text.TIM_OC3FastConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4FastConfig) refers to ft32f0xx_tim.o(.text.TIM_OC4FastConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref) refers to ft32f0xx_tim.o(.text.TIM_ClearOC1Ref) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref) refers to ft32f0xx_tim.o(.text.TIM_ClearOC2Ref) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref) refers to ft32f0xx_tim.o(.text.TIM_ClearOC3Ref) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref) refers to ft32f0xx_tim.o(.text.TIM_ClearOC4Ref) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC1PolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC1NPolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC2PolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC2NPolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC3PolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC3NPolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig) refers to ft32f0xx_tim.o(.text.TIM_OC4PolarityConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOCREFClear) refers to ft32f0xx_tim.o(.text.TIM_SelectOCREFClear) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_CCxCmd) refers to ft32f0xx_tim.o(.text.TIM_CCxCmd) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_CCxNCmd) refers to ft32f0xx_tim.o(.text.TIM_CCxNCmd) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectCOM) refers to ft32f0xx_tim.o(.text.TIM_SelectCOM) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TI1_Config) for TI1_Config
    ft32f0xx_tim.o(.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TI2_Config) for TI2_Config
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ICInit) refers to ft32f0xx_tim.o(.text.TIM_ICInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TI1_Config) refers to ft32f0xx_tim.o(.text.TI1_Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler) refers to ft32f0xx_tim.o(.text.TIM_SetIC1Prescaler) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TI2_Config) refers to ft32f0xx_tim.o(.text.TI2_Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler) refers to ft32f0xx_tim.o(.text.TIM_SetIC2Prescaler) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler) refers to ft32f0xx_tim.o(.text.TIM_SetIC3Prescaler) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler) refers to ft32f0xx_tim.o(.text.TIM_SetIC4Prescaler) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ICStructInit) refers to ft32f0xx_tim.o(.text.TIM_ICStructInit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_PWMIConfig) refers to ft32f0xx_tim.o(.text.TI2_Config) for TI2_Config
    ft32f0xx_tim.o(.text.TIM_PWMIConfig) refers to ft32f0xx_tim.o(.text.TI1_Config) for TI1_Config
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_PWMIConfig) refers to ft32f0xx_tim.o(.text.TIM_PWMIConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture1) refers to ft32f0xx_tim.o(.text.TIM_GetCapture1) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture2) refers to ft32f0xx_tim.o(.text.TIM_GetCapture2) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture3) refers to ft32f0xx_tim.o(.text.TIM_GetCapture3) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture4) refers to ft32f0xx_tim.o(.text.TIM_GetCapture4) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ITConfig) refers to ft32f0xx_tim.o(.text.TIM_ITConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GenerateEvent) refers to ft32f0xx_tim.o(.text.TIM_GenerateEvent) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetFlagStatus) refers to ft32f0xx_tim.o(.text.TIM_GetFlagStatus) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearFlag) refers to ft32f0xx_tim.o(.text.TIM_ClearFlag) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetITStatus) refers to ft32f0xx_tim.o(.text.TIM_GetITStatus) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit) refers to ft32f0xx_tim.o(.text.TIM_ClearITPendingBit) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_DMAConfig) refers to ft32f0xx_tim.o(.text.TIM_DMAConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_DMACmd) refers to ft32f0xx_tim.o(.text.TIM_DMACmd) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectCCDMA) refers to ft32f0xx_tim.o(.text.TIM_SelectCCDMA) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_InternalClockConfig) refers to ft32f0xx_tim.o(.text.TIM_InternalClockConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig) refers to ft32f0xx_tim.o(.text.TIM_ITRxExternalClockConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger) refers to ft32f0xx_tim.o(.text.TIM_SelectInputTrigger) for [Anonymous Symbol]
    ft32f0xx_tim.o(.text.TIM_TIxExternalClockConfig) refers to ft32f0xx_tim.o(.text.TI2_Config) for TI2_Config
    ft32f0xx_tim.o(.text.TIM_TIxExternalClockConfig) refers to ft32f0xx_tim.o(.text.TI1_Config) for TI1_Config
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig) refers to ft32f0xx_tim.o(.text.TIM_TIxExternalClockConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config) refers to ft32f0xx_tim.o(.text.TIM_ETRClockMode1Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ETRConfig) refers to ft32f0xx_tim.o(.text.TIM_ETRConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config) refers to ft32f0xx_tim.o(.text.TIM_ETRClockMode2Config) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger) refers to ft32f0xx_tim.o(.text.TIM_SelectOutputTrigger) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode) refers to ft32f0xx_tim.o(.text.TIM_SelectSlaveMode) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode) refers to ft32f0xx_tim.o(.text.TIM_SelectMasterSlaveMode) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig) refers to ft32f0xx_tim.o(.text.TIM_EncoderInterfaceConfig) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectHallSensor) refers to ft32f0xx_tim.o(.text.TIM_SelectHallSensor) for [Anonymous Symbol]
    ft32f0xx_tim.o(.ARM.exidx.text.TIM_RemapConfig) refers to ft32f0xx_tim.o(.text.TIM_RemapConfig) for [Anonymous Symbol]
    startup_ft32f030x8.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_ft32f030x8.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_ft32f030x8.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_ft32f030x8.o(RESET) refers to startup_ft32f030x8.o(STACK) for __initial_sp
    startup_ft32f030x8.o(RESET) refers to startup_ft32f030x8.o(.text) for Reset_Handler
    startup_ft32f030x8.o(RESET) refers to ft32f0xx_it.o(.text.NMI_Handler) for NMI_Handler
    startup_ft32f030x8.o(RESET) refers to ft32f0xx_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_ft32f030x8.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_ft32f030x8.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_ft32f030x8.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_ft32f030x8.o(RESET) refers to ft32f0xx_it.o(.text.EXTI4_15_IRQHandler) for EXTI4_15_IRQHandler
    startup_ft32f030x8.o(RESET) refers to ft32f0xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler) for TIM1_BRK_UP_TRG_COM_IRQHandler
    startup_ft32f030x8.o(RESET) refers to ft32f0xx_it.o(.text.TIM14_IRQHandler) for TIM14_IRQHandler
    startup_ft32f030x8.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_ft32f030x8.o(.text) refers to startup_ft32f030x8.o(STACK) for __initial_sp
    startup_ft32f030x8.o(.text) refers to system_ft32f0xx.o(.text.SystemInit) for SystemInit
    startup_ft32f030x8.o(.text) refers to __main.o(!!!main) for __main
    startup_ft32f030x8.o(.text) refers to startup_ft32f030x8.o(HEAP) for Heap_Mem
    system_ft32f0xx.o(.ARM.exidx.text.SystemInit) refers to system_ft32f0xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_ft32f0xx.o(.text.SystemCoreClockUpdate) refers to aeabi_sdiv.o(.text) for __aeabi_uidiv
    system_ft32f0xx.o(.text.SystemCoreClockUpdate) refers to system_ft32f0xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_ft32f0xx.o(.text.SystemCoreClockUpdate) refers to system_ft32f0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_ft32f0xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_ft32f0xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    ddiv.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ddiv.o(.text) refers to ddiv.o(.constdata) for .constdata
    ddiv.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfixi.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fadd) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fsub) for _fsub1
    faddsub.o(x$fpl$frsb) refers to faddsub.o(x$fpl$fadd) for _fadd1
    faddsub.o(x$fpl$fsub) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    faddsub.o(x$fpl$fsub) refers to faddsub.o(x$fpl$fadd) for _fadd1
    fcmp.o(i._feq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._feq) refers to feqf.o(x$fpl$feqf) for _fcmpeq
    fcmp.o(i._fgeq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fgeq) refers to fgef.o(x$fpl$fgeqf) for _fcmpge
    fcmp.o(i._fgr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fgr) refers to fgef.o(x$fpl$fgeqf) for _fcmpge
    fcmp.o(i._fleq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fleq) refers to flef.o(x$fpl$fleqf) for _fcmple
    fcmp.o(i._fls) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fls) refers to flef.o(x$fpl$fleqf) for _fcmple
    fcmp.o(i._fneq) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmp.o(i._fneq) refers to feqf.o(x$fpl$feqf) for _fcmpeq
    fdiv.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fdiv.o(.text) refers to fdiv.o(.constdata) for .constdata
    fdiv.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fmul.o(x$fpl$fmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    feqf.o(x$fpl$feqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    feqf.o(x$fpl$feqf) refers to fcmpin.o(.text) for __fpl_fcmp_InfNaN
    fgef.o(x$fpl$fgeqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fgef.o(x$fpl$fgeqf) refers to fcmpin.o(.text) for __fpl_fcmp_InfNaN
    flef.o(x$fpl$fleqf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    flef.o(x$fpl$fleqf) refers to fcmpin.o(.text) for __fpl_fcmp_InfNaN
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    fcmpin.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fcmpin.o(.text) refers to cmpret.o(.text) for __fpl_cmpreturn
    fcmpin.o(.text) refers to fnan2.o(.text) for __fpl_fcheck_NaN2
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_ft32f030x8.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    cmpret.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnan2.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnan2.o(.text) refers to retnan.o(.text) for __fpl_return_NaN
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    retnan.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    retnan.o(.text) refers to cmpret.o(.text) for __fpl_cmpreturn
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing ft32f0xx_it.o(.text), (0 bytes).
    Removing ft32f0xx_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing ft32f0xx_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing ft32f0xx_it.o(.ARM.exidx.text.TIM14_IRQHandler), (8 bytes).
    Removing ft32f0xx_it.o(.ARM.exidx.text.TIM1_BRK_UP_TRG_COM_IRQHandler), (8 bytes).
    Removing ft32f0xx_it.o(.ARM.exidx.text.EXTI4_15_IRQHandler), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.FT32_GPIO_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.FT32_EXIT_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.ADC_DMA_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.Tim1BaseInit), (8 bytes).
    Removing main.o(.ARM.exidx.text.Tim3BaseInit), (8 bytes).
    Removing main.o(.ARM.exidx.text.Tim16BaseInit), (8 bytes).
    Removing main.o(.ARM.exidx.text.IWDG_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.test1), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing systick.o(.text), (0 bytes).
    Removing systick.o(.ARM.exidx.text.SystickInit), (8 bytes).
    Removing systick.o(.ARM.exidx.text.Delay), (8 bytes).
    Removing systick.o(.text.TimingDelay_Decrement), (20 bytes).
    Removing systick.o(.ARM.exidx.text.TimingDelay_Decrement), (8 bytes).
    Removing dev_adc.o(.text), (0 bytes).
    Removing dev_adc.o(.text.look1_iflf_binlxpw), (204 bytes).
    Removing dev_adc.o(.ARM.exidx.text.look1_iflf_binlxpw), (8 bytes).
    Removing dev_adc.o(.ARM.exidx.text.get_adc_val), (8 bytes).
    Removing dev_adc.o(.rodata.INP_HWTemp1_R), (640 bytes).
    Removing dev_adc.o(.rodata.OUT_HWTemp1_T), (640 bytes).
    Removing dev_ad9877.o(.text), (0 bytes).
    Removing dev_ad9877.o(.ARM.exidx.text.AD9833_SetPara), (8 bytes).
    Removing dev_ad9877.o(.ARM.exidx.text.AD9833_SendData), (8 bytes).
    Removing dev_ad9877.o(.ARM.exidx.text.AD9833_InitIo), (8 bytes).
    Removing dev_gpio.o(.text), (0 bytes).
    Removing dev_gpio.o(.ARM.exidx.text.DevGpio_SetOutPut), (8 bytes).
    Removing dev_gpio.o(.ARM.exidx.text.DevGpio_ReadInPut), (8 bytes).
    Removing dev_pwm.o(.text), (0 bytes).
    Removing dev_pwm.o(.ARM.exidx.text.Devpwm_SetDuty), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.text.xQueueGenericReset), (92 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.text.xQueueGenericCreate), (56 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.text.xQueueCreateMutex), (42 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueGenericSend), (240 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (42 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.text.xQueueSemaphoreTake), (292 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (20 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.text.prvUnlockQueue), (110 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (86 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueueReceive), (230 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.text.prvCopyDataFromQueue), (34 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.text.prvIsQueueEmpty), (22 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (222 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (100 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (48 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (18 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (22 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.vQueueUnregisterQueue), (36 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueUnregisterQueue), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (12 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.text.vQueueAddToRegistry), (36 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueAddToRegistry), (8 bytes).
    Removing queue.o(.text.pcQueueGetName), (36 bytes).
    Removing queue.o(.ARM.exidx.text.pcQueueGetName), (8 bytes).
    Removing queue.o(.bss.xQueueRegistry), (64 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (116 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (68 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (168 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCount), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (16 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (136 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (90 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnEventList), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (36 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (76 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.text.vTaskInternalSetTimeOutState), (16 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.text.xTaskCheckForTimeOut), (72 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.text.vTaskMissedYield), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (100 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.text.xTaskPriorityInherit), (124 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.text.vTaskPriorityDisinheritAfterTimeout), (104 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.text.pvTaskIncrementMutexHeldCount), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskNotifyTake), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyWait), (116 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (148 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (192 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskNotifyGiveFromISR), (120 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyStateClear), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskNotifyValueClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskNotifyValueClear), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortYield), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.ulSetInterruptMaskFromISR), (8 bytes).
    Removing port.o(.ARM.exidx.text.vClearInterruptMaskFromISR), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (104 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing highprotask.o(.text), (0 bytes).
    Removing highprotask.o(.text.CreateHighProTask), (60 bytes).
    Removing highprotask.o(.ARM.exidx.text.CreateHighProTask), (8 bytes).
    Removing highprotask.o(.text.HighProTask), (2 bytes).
    Removing highprotask.o(.ARM.exidx.text.HighProTask), (8 bytes).
    Removing idletask.o(.text), (0 bytes).
    Removing idletask.o(.text.vApplicationIdleHook), (2 bytes).
    Removing idletask.o(.ARM.exidx.text.vApplicationIdleHook), (8 bytes).
    Removing idletask.o(.text.Sleep), (2 bytes).
    Removing idletask.o(.ARM.exidx.text.Sleep), (8 bytes).
    Removing inittask.o(.text), (0 bytes).
    Removing inittask.o(.text.CreateInitTask), (48 bytes).
    Removing inittask.o(.ARM.exidx.text.CreateInitTask), (8 bytes).
    Removing inittask.o(.text.InitTask), (2 bytes).
    Removing inittask.o(.ARM.exidx.text.InitTask), (8 bytes).
    Removing inittask.o(.bss.pInitTaskHandle), (4 bytes).
    Removing lowprotask.o(.text), (0 bytes).
    Removing lowprotask.o(.text.CreateLowProTask), (2 bytes).
    Removing lowprotask.o(.ARM.exidx.text.CreateLowProTask), (8 bytes).
    Removing taskmanager.o(.text), (0 bytes).
    Removing taskmanager.o(.text.SendMessage), (20 bytes).
    Removing taskmanager.o(.ARM.exidx.text.SendMessage), (8 bytes).
    Removing taskmanager.o(.ARM.exidx.text.SendShortMessageFromISR), (8 bytes).
    Removing taskmanager.o(.text.SendMessageFromISR), (40 bytes).
    Removing taskmanager.o(.ARM.exidx.text.SendMessageFromISR), (8 bytes).
    Removing taskmanager.o(.ARM.exidx.text.vApplicationTickHook), (8 bytes).
    Removing taskmanager.o(.ARM.exidx.text.vApplicationMallocFailedHook), (8 bytes).
    Removing taskmanager.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing ft32f0xx_adc.o(.text), (0 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_DeInit), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_StructInit), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_Cmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_ClockModeConfig), (4 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_ClockModeConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_JitterCmd), (18 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_JitterCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_AutoPowerOffCmd), (20 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_AutoPowerOffCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_WaitModeCmd), (20 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_WaitModeCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_AnalogWatchdogCmd), (20 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_AnalogWatchdogThresholdsConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogThresholdsConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_AnalogWatchdogSingleChannelConfig), (14 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_AnalogWatchdogSingleChannelCmd), (20 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_AnalogWatchdogSingleChannelCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_TempSensorCmd), (28 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_TempSensorCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_VrefintCmd), (28 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_VrefintCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_VbatCmd), (28 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_VbatCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_ChannelConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_ContinuousModeCmd), (20 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_ContinuousModeCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_DiscModeCmd), (20 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_DiscModeCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_OverrunModeCmd), (20 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_OverrunModeCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetCalibrationFactor), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_StopOfConversion), (10 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_StopOfConversion), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_StartOfConversion), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_GetConversionValue), (6 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetConversionValue), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_DMACmd), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_DMARequestModeConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_ITConfig), (18 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_ITConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_ClearFlag), (4 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_ClearFlag), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_GetITStatus), (32 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_GetITStatus), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_ClearITPendingBit), (4 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_VrefselConfig), (20 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_VrefselConfig), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_VrefDecibCmd), (24 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_VrefDecibCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_IoshSmpCmd), (24 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_IoshSmpCmd), (8 bytes).
    Removing ft32f0xx_adc.o(.text.ADC_IoshAmpCmd), (24 bytes).
    Removing ft32f0xx_adc.o(.ARM.exidx.text.ADC_IoshAmpCmd), (8 bytes).
    Removing ft32f0xx_debug.o(.text), (0 bytes).
    Removing ft32f0xx_debug.o(.text.DBGMCU_GetREVID), (12 bytes).
    Removing ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_GetREVID), (8 bytes).
    Removing ft32f0xx_debug.o(.text.DBGMCU_GetDEVID), (20 bytes).
    Removing ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_GetDEVID), (8 bytes).
    Removing ft32f0xx_debug.o(.text.DBGMCU_Config), (24 bytes).
    Removing ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_Config), (8 bytes).
    Removing ft32f0xx_debug.o(.text.DBGMCU_APB1PeriphConfig), (24 bytes).
    Removing ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_APB1PeriphConfig), (8 bytes).
    Removing ft32f0xx_debug.o(.text.DBGMCU_APB2PeriphConfig), (24 bytes).
    Removing ft32f0xx_debug.o(.ARM.exidx.text.DBGMCU_APB2PeriphConfig), (8 bytes).
    Removing ft32f0xx_dma.o(.text), (0 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_DeInit), (8 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_Init), (8 bytes).
    Removing ft32f0xx_dma.o(.text.DMA_StructInit), (10 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_StructInit), (8 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_Cmd), (8 bytes).
    Removing ft32f0xx_dma.o(.text.DMA_SetCurrDataCounter), (4 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_SetCurrDataCounter), (8 bytes).
    Removing ft32f0xx_dma.o(.text.DMA_GetCurrDataCounter), (6 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_GetCurrDataCounter), (8 bytes).
    Removing ft32f0xx_dma.o(.text.DMA_ITConfig), (18 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_ITConfig), (8 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_ClearFlag), (8 bytes).
    Removing ft32f0xx_dma.o(.text.DMA_GetITStatus), (28 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_GetITStatus), (8 bytes).
    Removing ft32f0xx_dma.o(.text.DMA_ClearITPendingBit), (16 bytes).
    Removing ft32f0xx_dma.o(.ARM.exidx.text.DMA_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_exti.o(.text), (0 bytes).
    Removing ft32f0xx_exti.o(.text.EXTI_DeInit), (32 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_DeInit), (8 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_Init), (8 bytes).
    Removing ft32f0xx_exti.o(.text.EXTI_StructInit), (14 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_StructInit), (8 bytes).
    Removing ft32f0xx_exti.o(.text.EXTI_GenerateSWInterrupt), (16 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_GenerateSWInterrupt), (8 bytes).
    Removing ft32f0xx_exti.o(.text.EXTI_GetFlagStatus), (20 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_exti.o(.text.EXTI_ClearFlag), (12 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_ClearFlag), (8 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_GetITStatus), (8 bytes).
    Removing ft32f0xx_exti.o(.ARM.exidx.text.EXTI_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_flash.o(.text), (0 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_SetLatency), (20 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_SetLatency), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_PrefetchBufferCmd), (24 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_PrefetchBufferCmd), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_GetPrefetchBufferStatus), (16 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_GetPrefetchBufferStatus), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_Unlock), (32 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_Unlock), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_Lock), (16 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_Lock), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_ErasePage), (80 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ErasePage), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_WaitForLastOperation), (32 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_EraseAllPages), (72 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_EraseAllPages), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_ProgramWord), (80 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ProgramWord), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_Unlock), (32 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Unlock), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_Lock), (20 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Lock), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_Launch), (20 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Launch), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_Erase), (128 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_Erase), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_GetRDP), (20 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_GetRDP), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_EnableWRP), (160 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_EnableWRP), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_RDPConfig), (128 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_RDPConfig), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_UserConfig), (144 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_UserConfig), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_BOOTConfig), (128 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_BOOTConfig), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_VDDAConfig), (128 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_VDDAConfig), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_SRAMParityConfig), (132 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_SRAMParityConfig), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_WriteUser), (120 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_WriteUser), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_ProgramData), (64 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_ProgramData), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_GetUser), (16 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_GetUser), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_OB_GetWRP), (12 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_OB_GetWRP), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_ITConfig), (24 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ITConfig), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_GetFlagStatus), (20 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_ClearFlag), (12 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_ClearFlag), (8 bytes).
    Removing ft32f0xx_flash.o(.text.FLASH_GetStatus), (40 bytes).
    Removing ft32f0xx_flash.o(.ARM.exidx.text.FLASH_GetStatus), (8 bytes).
    Removing ft32f0xx_gpio.o(.text), (0 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_DeInit), (74 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_DeInit), (8 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_StructInit), (16 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_StructInit), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_PinLockConfig), (36 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig), (8 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_ReadInputData), (4 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadInputData), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_ReadOutputDataBit), (12 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_ReadOutputData), (4 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_SetBits), (4 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_SetBits), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_ResetBits), (4 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_ResetBits), (8 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_WriteBit), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_Write), (4 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_Write), (8 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig), (8 bytes).
    Removing ft32f0xx_gpio.o(.text.GPIO_LedmConfig), (8 bytes).
    Removing ft32f0xx_gpio.o(.ARM.exidx.text.GPIO_LedmConfig), (8 bytes).
    Removing ft32f0xx_iwdg.o(.text), (0 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_WriteAccessCmd), (8 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_SetPrescaler), (8 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_SetReload), (8 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_ReloadCounter), (8 bytes).
    Removing ft32f0xx_iwdg.o(.text.IWDG_SetWindowValue), (12 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_SetWindowValue), (8 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_Enable), (8 bytes).
    Removing ft32f0xx_iwdg.o(.text.IWDG_GetFlagStatus), (20 bytes).
    Removing ft32f0xx_iwdg.o(.ARM.exidx.text.IWDG_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_misc.o(.text), (0 bytes).
    Removing ft32f0xx_misc.o(.ARM.exidx.text.NVIC_Init), (8 bytes).
    Removing ft32f0xx_misc.o(.text.NVIC_SystemLPConfig), (24 bytes).
    Removing ft32f0xx_misc.o(.ARM.exidx.text.NVIC_SystemLPConfig), (8 bytes).
    Removing ft32f0xx_misc.o(.text.SysTick_CLKSourceConfig), (24 bytes).
    Removing ft32f0xx_misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig), (8 bytes).
    Removing ft32f0xx_pwr.o(.text), (0 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_DeInit), (22 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_DeInit), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_BackupAccessCmd), (28 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_BackupAccessCmd), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_PVDLevelConfig), (20 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_PVDLevelConfig), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_PVDCmd), (24 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_PVDCmd), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_WakeUpPinCmd), (24 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_WakeUpPinCmd), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_EnterSleepMode), (32 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_EnterSleepMode), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_EnterSTOPMode), (68 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_EnterSTOPMode), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_EnterSTANDBYMode), (32 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_EnterSTANDBYMode), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_GetFlagStatus), (20 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_pwr.o(.text.PWR_ClearFlag), (16 bytes).
    Removing ft32f0xx_pwr.o(.ARM.exidx.text.PWR_ClearFlag), (8 bytes).
    Removing ft32f0xx_rcc.o(.text), (0 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_DeInit), (88 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_DeInit), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_HSEConfig), (16 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSEConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_WaitForHSEStartUp), (44 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_WaitForHSEStartUp), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_GetFlagStatus), (52 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_AdjustHSICalibrationValue), (20 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_HSICmd), (24 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSICmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_AdjustHSI14CalibrationValue), (20 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AdjustHSI14CalibrationValue), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_HSI14Cmd), (24 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSI14Cmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_HSI14ADCRequestCmd), (24 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSI14ADCRequestCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_LSEConfig), (32 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_LSEConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_LSEDriveConfig), (24 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_LSEDriveConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_LSICmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_PLLConfig), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PLLConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_PLLCmd), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PLLCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_HSI48Cmd), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HSI48Cmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_PREDIV1Config), (20 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PREDIV1Config), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_ClockSecuritySystemCmd), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_MCOConfig), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_MCOConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_SYSCLKConfig), (20 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_GetSYSCLKSource), (16 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_HCLKConfig), (20 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_HCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_PCLKConfig), (20 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_PCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_ADCCLKConfig), (44 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_I2CCLKConfig), (24 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_I2CCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_USARTCLKConfig), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_USARTCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_USBCLKConfig), (24 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_USBCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_GetClocksFreq), (220 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_RTCCLKConfig), (16 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_RTCCLKConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_RTCCLKCmd), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_RTCCLKCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_BackupResetCmd), (28 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_BackupResetCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_AHBPeriphResetCmd), (24 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_AHBPeriphResetCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_APB1PeriphResetCmd), (24 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_ITConfig), (24 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ITConfig), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_ClearFlag), (20 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ClearFlag), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_GetITStatus), (20 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_GetITStatus), (8 bytes).
    Removing ft32f0xx_rcc.o(.text.RCC_ClearITPendingBit), (12 bytes).
    Removing ft32f0xx_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_rcc.o(.rodata.APBAHBPrescTable), (16 bytes).
    Removing ft32f0xx_rtc.o(.text), (0 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_DeInit), (80 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_DeInit), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_EnterInitMode), (60 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_EnterInitMode), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_WaitForSynchro), (76 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_WaitForSynchro), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_Init), (72 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_Init), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_ExitInitMode), (24 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ExitInitMode), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_StructInit), (14 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_StructInit), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_WriteProtectionCmd), (24 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_WriteProtectionCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_RefClockCmd), (60 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_RefClockCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_BypassShadowCmd), (40 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_BypassShadowCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_SetTime), (156 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SetTime), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_ByteToBcd2), (40 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ByteToBcd2), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TimeStructInit), (12 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TimeStructInit), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetTime), (84 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetTime), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetSubSecond), (12 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetSubSecond), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_SetDate), (128 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SetDate), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_DateStructInit), (14 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_DateStructInit), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetDate), (84 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetDate), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_SetAlarm), (132 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SetAlarm), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_AlarmStructInit), (14 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_AlarmStructInit), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetAlarm), (144 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetAlarm), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_AlarmCmd), (80 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_AlarmCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_AlarmSubSecondConfig), (28 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_AlarmSubSecondConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetAlarmSubSecond), (20 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetAlarmSubSecond), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_DayLightSavingConfig), (40 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_DayLightSavingConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetStoreOperation), (16 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetStoreOperation), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_OutputConfig), (40 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_OutputConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_CalibOutputCmd), (40 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_CalibOutputCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_CalibOutputConfig), (36 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_CalibOutputConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_SmoothCalibConfig), (68 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SmoothCalibConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TimeStampCmd), (48 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TimeStampCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetTimeStamp), (144 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetTimeStamp), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetTimeStampSubSecond), (12 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetTimeStampSubSecond), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TamperTriggerConfig), (28 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperTriggerConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TamperCmd), (24 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TamperFilterConfig), (24 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperFilterConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TamperSamplingFreqConfig), (24 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperSamplingFreqConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TamperPinsPrechargeDuration), (24 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperPinsPrechargeDuration), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TimeStampOnTamperDetectionCmd), (24 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TimeStampOnTamperDetectionCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_TamperPullUpCmd), (28 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_TamperPullUpCmd), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_OutputTypeConfig), (24 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_OutputTypeConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_SynchroShiftConfig), (84 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_SynchroShiftConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_ITConfig), (64 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ITConfig), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetFlagStatus), (28 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_ClearFlag), (32 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ClearFlag), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_GetITStatus), (52 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_GetITStatus), (8 bytes).
    Removing ft32f0xx_rtc.o(.text.RTC_ClearITPendingBit), (32 bytes).
    Removing ft32f0xx_rtc.o(.ARM.exidx.text.RTC_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text), (0 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_DeInit), (32 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_DeInit), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_MemoryRemapConfig), (20 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_MemoryRemapConfig), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_DMAChannelRemapConfig), (24 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_DMAChannelRemapConfig), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_I2CFastModePlusConfig), (24 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_I2CFastModePlusConfig), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_IRDAEnvSelection), (24 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_IRDAEnvSelection), (8 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_EXTILineConfig), (8 bytes).
    Removing ft32f0xx_syscfg.o(.text.SYSCFG_BreakConfig), (16 bytes).
    Removing ft32f0xx_syscfg.o(.ARM.exidx.text.SYSCFG_BreakConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text), (0 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_DeInit), (140 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_DeInit), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_TimeBaseInit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_TimeBaseStructInit), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_TimeBaseStructInit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_PrescalerConfig), (6 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_PrescalerConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_CounterModeConfig), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_CounterModeConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetCounter), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCounter), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetAutoreload), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetAutoreload), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetCounter), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCounter), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetPrescaler), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetPrescaler), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_UpdateDisableConfig), (18 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_UpdateDisableConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_UpdateRequestConfig), (18 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_UpdateRequestConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ARRPreloadConfig), (36 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ARRPreloadConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectOnePulseMode), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOnePulseMode), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetClockDivision), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetClockDivision), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_Cmd), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_BDTRConfig), (32 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_BDTRConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_BDTRStructInit), (10 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_BDTRStructInit), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_CtrlPWMOutputs), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1Init), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC2Init), (132 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2Init), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC3Init), (116 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3Init), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4Init), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OCStructInit), (14 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OCStructInit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectOCxM), (66 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOCxM), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare1), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetCompare2), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare2), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetCompare3), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare3), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetCompare4), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetCompare4), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ForcedOC1Config), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC1Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ForcedOC2Config), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC2Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ForcedOC3Config), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC3Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ForcedOC4Config), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ForcedOC4Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_CCPreloadControl), (18 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_CCPreloadControl), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC1PreloadConfig), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1PreloadConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC2PreloadConfig), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2PreloadConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC3PreloadConfig), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3PreloadConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC4PreloadConfig), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4PreloadConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC1FastConfig), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1FastConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC2FastConfig), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2FastConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC3FastConfig), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3FastConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC4FastConfig), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4FastConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ClearOC1Ref), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC1Ref), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ClearOC2Ref), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC2Ref), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ClearOC3Ref), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC3Ref), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ClearOC4Ref), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearOC4Ref), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC1PolarityConfig), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1PolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC1NPolarityConfig), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC1NPolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC2PolarityConfig), (14 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2PolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC2NPolarityConfig), (14 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC2NPolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC3PolarityConfig), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3PolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC3NPolarityConfig), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC3NPolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_OC4PolarityConfig), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_OC4PolarityConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectOCREFClear), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOCREFClear), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_CCxCmd), (22 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_CCxCmd), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_CCxNCmd), (22 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_CCxNCmd), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectCOM), (18 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectCOM), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ICInit), (220 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ICInit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TI1_Config), (38 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TI1_Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetIC1Prescaler), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC1Prescaler), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TI2_Config), (48 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TI2_Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetIC2Prescaler), (24 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC2Prescaler), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetIC3Prescaler), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC3Prescaler), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SetIC4Prescaler), (24 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SetIC4Prescaler), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ICStructInit), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ICStructInit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_PWMIConfig), (144 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_PWMIConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetCapture1), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture1), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetCapture2), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture2), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetCapture3), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture3), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetCapture4), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetCapture4), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ITConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GenerateEvent), (4 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GenerateEvent), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_GetFlagStatus), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetFlagStatus), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ClearFlag), (6 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearFlag), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_GetITStatus), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ClearITPendingBit), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_DMAConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_DMAConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_DMACmd), (18 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_DMACmd), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectCCDMA), (18 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectCCDMA), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_InternalClockConfig), (10 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_InternalClockConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ITRxExternalClockConfig), (20 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ITRxExternalClockConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectInputTrigger), (12 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectInputTrigger), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_TIxExternalClockConfig), (48 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_TIxExternalClockConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ETRClockMode1Config), (24 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ETRClockMode1Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ETRConfig), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ETRConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_ETRClockMode2Config), (26 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_ETRClockMode2Config), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectOutputTrigger), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectOutputTrigger), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectSlaveMode), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectSlaveMode), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectMasterSlaveMode), (16 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectMasterSlaveMode), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_EncoderInterfaceConfig), (48 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_EncoderInterfaceConfig), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_SelectHallSensor), (18 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_SelectHallSensor), (8 bytes).
    Removing ft32f0xx_tim.o(.text.TIM_RemapConfig), (6 bytes).
    Removing ft32f0xx_tim.o(.ARM.exidx.text.TIM_RemapConfig), (8 bytes).
    Removing system_ft32f0xx.o(.text), (0 bytes).
    Removing system_ft32f0xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_ft32f0xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).

826 unused section(s) (total 18172 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/cfplib/cmp.c                    0x00000000   Number         0  fcmp.o ABSOLUTE
    ../fplib/cfplib/cmpret.c                 0x00000000   Number         0  cmpret.o ABSOLUTE
    ../fplib/cfplib/ddiv.c                   0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/cfplib/dmul.c                   0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/cfplib/fcmpin.c                 0x00000000   Number         0  fcmpin.o ABSOLUTE
    ../fplib/cfplib/fdiv.c                   0x00000000   Number         0  fdiv.o ABSOLUTE
    ../fplib/cfplib/ffix.c                   0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/cfplib/nan2.c                   0x00000000   Number         0  fnan2.o ABSOLUTE
    ../fplib/cfplib/retnan.c                 0x00000000   Number         0  retnan.o ABSOLUTE
    ../fplib/faddsub6m.s                     0x00000000   Number         0  faddsub.o ABSOLUTE
    ../fplib/feqf6m.s                        0x00000000   Number         0  feqf.o ABSOLUTE
    ../fplib/fgeqf6m.s                       0x00000000   Number         0  fgef.o ABSOLUTE
    ../fplib/fleqf6m.s                       0x00000000   Number         0  flef.o ABSOLUTE
    ../fplib/fmul6m.s                        0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    HighProTask.c                            0x00000000   Number         0  highprotask.o ABSOLUTE
    IdleTask.c                               0x00000000   Number         0  idletask.o ABSOLUTE
    InitTask.c                               0x00000000   Number         0  inittask.o ABSOLUTE
    LowProTask.c                             0x00000000   Number         0  lowprotask.o ABSOLUTE
    RTE\Device\FT32F030G8BUx\startup_ft32f030x8.s 0x00000000   Number         0  startup_ft32f030x8.o ABSOLUTE
    TaskManager.c                            0x00000000   Number         0  taskmanager.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    dev_ad9877.c                             0x00000000   Number         0  dev_ad9877.o ABSOLUTE
    dev_adc.c                                0x00000000   Number         0  dev_adc.o ABSOLUTE
    dev_gpio.c                               0x00000000   Number         0  dev_gpio.o ABSOLUTE
    dev_pwm.c                                0x00000000   Number         0  dev_pwm.o ABSOLUTE
    ft32f0xx_adc.c                           0x00000000   Number         0  ft32f0xx_adc.o ABSOLUTE
    ft32f0xx_debug.c                         0x00000000   Number         0  ft32f0xx_debug.o ABSOLUTE
    ft32f0xx_dma.c                           0x00000000   Number         0  ft32f0xx_dma.o ABSOLUTE
    ft32f0xx_exti.c                          0x00000000   Number         0  ft32f0xx_exti.o ABSOLUTE
    ft32f0xx_flash.c                         0x00000000   Number         0  ft32f0xx_flash.o ABSOLUTE
    ft32f0xx_gpio.c                          0x00000000   Number         0  ft32f0xx_gpio.o ABSOLUTE
    ft32f0xx_it.c                            0x00000000   Number         0  ft32f0xx_it.o ABSOLUTE
    ft32f0xx_iwdg.c                          0x00000000   Number         0  ft32f0xx_iwdg.o ABSOLUTE
    ft32f0xx_misc.c                          0x00000000   Number         0  ft32f0xx_misc.o ABSOLUTE
    ft32f0xx_pwr.c                           0x00000000   Number         0  ft32f0xx_pwr.o ABSOLUTE
    ft32f0xx_rcc.c                           0x00000000   Number         0  ft32f0xx_rcc.o ABSOLUTE
    ft32f0xx_rtc.c                           0x00000000   Number         0  ft32f0xx_rtc.o ABSOLUTE
    ft32f0xx_syscfg.c                        0x00000000   Number         0  ft32f0xx_syscfg.o ABSOLUTE
    ft32f0xx_tim.c                           0x00000000   Number         0  ft32f0xx_tim.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    system_ft32f0xx.c                        0x00000000   Number         0  system_ft32f0xx.o ABSOLUTE
    systick.c                                0x00000000   Number         0  systick.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x08000000   Section      192  startup_ft32f030x8.o(RESET)
    !!!main                                  0x080000c0   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000c8   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000104   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x08000120   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0800013c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800013e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x0800013e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000140   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000142   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000142   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000144   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000144   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000144   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0800014a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0800014a   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0800014e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0800014e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000156   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000158   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000158   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0800015c   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x08000164   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x0800019c   Section      116  startup_ft32f030x8.o(.text)
    .text                                    0x08000210   Section        0  rt_memcpy.o(.text)
    .text                                    0x08000292   Section        0  aeabi_memset4.o(.text)
    .text                                    0x080002a4   Section        0  rt_memclr.o(.text)
    .text                                    0x080002e4   Section      346  aeabi_sdiv.o(.text)
    .text                                    0x0800043e   Section        0  heapauxi.o(.text)
    .text                                    0x08000444   Section        0  ddiv.o(.text)
    .text                                    0x0800088c   Section        0  dfixi.o(.text)
    .text                                    0x080008f8   Section        0  dmul.o(.text)
    .text                                    0x08000b40   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x08000b7e   Section        0  exit.o(.text)
    .text                                    0x08000b90   Section        8  libspace.o(.text)
    .text                                    0x08000b98   Section        0  sys_exit.o(.text)
    .text                                    0x08000ba4   Section        2  use_no_semi.o(.text)
    .text                                    0x08000ba6   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x08000ba8   Section        0  dev_ad9877.o(.text.AD9833_InitIo)
    AD9833_SendData                          0x08000bc5   Thumb Code    84  dev_ad9877.o(.text.AD9833_SendData)
    [Anonymous Symbol]                       0x08000bc4   Section        0  dev_ad9877.o(.text.AD9833_SendData)
    __arm_cp.1_0                             0x08000c14   Number         4  dev_ad9877.o(.text.AD9833_SendData)
    [Anonymous Symbol]                       0x08000c18   Section        0  dev_ad9877.o(.text.AD9833_SetPara)
    __arm_cp.0_0                             0x08000c9c   Number         4  dev_ad9877.o(.text.AD9833_SetPara)
    __arm_cp.0_1                             0x08000ca0   Number         4  dev_ad9877.o(.text.AD9833_SetPara)
    __arm_cp.0_2                             0x08000ca4   Number         4  dev_ad9877.o(.text.AD9833_SetPara)
    __arm_cp.0_3                             0x08000ca8   Number         4  dev_ad9877.o(.text.AD9833_SetPara)
    __arm_cp.0_4                             0x08000cac   Number         4  dev_ad9877.o(.text.AD9833_SetPara)
    [Anonymous Symbol]                       0x08000cb0   Section        0  ft32f0xx_adc.o(.text.ADC_ChannelConfig)
    [Anonymous Symbol]                       0x08000cba   Section        0  ft32f0xx_adc.o(.text.ADC_Cmd)
    [Anonymous Symbol]                       0x08000ccc   Section        0  ft32f0xx_adc.o(.text.ADC_DMACmd)
    [Anonymous Symbol]                       0x08000cde   Section        0  ft32f0xx_adc.o(.text.ADC_DMARequestModeConfig)
    [Anonymous Symbol]                       0x08000cf0   Section        0  main.o(.text.ADC_DMA_Config)
    __arm_cp.3_2                             0x08000dd8   Number         4  main.o(.text.ADC_DMA_Config)
    [Anonymous Symbol]                       0x08000ddc   Section        0  ft32f0xx_adc.o(.text.ADC_DeInit)
    __arm_cp.0_0                             0x08000dfc   Number         4  ft32f0xx_adc.o(.text.ADC_DeInit)
    [Anonymous Symbol]                       0x08000e00   Section        0  ft32f0xx_adc.o(.text.ADC_GetCalibrationFactor)
    __arm_cp.19_0                            0x08000e28   Number         4  ft32f0xx_adc.o(.text.ADC_GetCalibrationFactor)
    [Anonymous Symbol]                       0x08000e2c   Section        0  ft32f0xx_adc.o(.text.ADC_GetFlagStatus)
    [Anonymous Symbol]                       0x08000e48   Section        0  ft32f0xx_adc.o(.text.ADC_Init)
    __arm_cp.1_0                             0x08000e6c   Number         4  ft32f0xx_adc.o(.text.ADC_Init)
    [Anonymous Symbol]                       0x08000e70   Section        0  ft32f0xx_adc.o(.text.ADC_StartOfConversion)
    [Anonymous Symbol]                       0x08000e7a   Section        0  ft32f0xx_adc.o(.text.ADC_StructInit)
    [Anonymous Symbol]                       0x08000e8c   Section        0  ft32f0xx_dma.o(.text.DMA_ClearFlag)
    [Anonymous Symbol]                       0x08000e98   Section        0  ft32f0xx_dma.o(.text.DMA_Cmd)
    [Anonymous Symbol]                       0x08000eac   Section        0  ft32f0xx_dma.o(.text.DMA_DeInit)
    __arm_cp.0_0                             0x08000f00   Number         4  ft32f0xx_dma.o(.text.DMA_DeInit)
    __arm_cp.0_1                             0x08000f04   Number         4  ft32f0xx_dma.o(.text.DMA_DeInit)
    __arm_cp.0_2                             0x08000f08   Number         4  ft32f0xx_dma.o(.text.DMA_DeInit)
    __arm_cp.0_3                             0x08000f0c   Number         4  ft32f0xx_dma.o(.text.DMA_DeInit)
    __arm_cp.0_4                             0x08000f10   Number         4  ft32f0xx_dma.o(.text.DMA_DeInit)
    __arm_cp.0_5                             0x08000f14   Number         4  ft32f0xx_dma.o(.text.DMA_DeInit)
    __arm_cp.0_6                             0x08000f18   Number         4  ft32f0xx_dma.o(.text.DMA_DeInit)
    [Anonymous Symbol]                       0x08000f1c   Section        0  ft32f0xx_dma.o(.text.DMA_GetFlagStatus)
    __arm_cp.7_0                             0x08000f34   Number         4  ft32f0xx_dma.o(.text.DMA_GetFlagStatus)
    [Anonymous Symbol]                       0x08000f38   Section        0  ft32f0xx_dma.o(.text.DMA_Init)
    __arm_cp.1_0                             0x08000f70   Number         4  ft32f0xx_dma.o(.text.DMA_Init)
    [Anonymous Symbol]                       0x08000f74   Section        0  systick.o(.text.Delay)
    __arm_cp.1_0                             0x08000f88   Number         4  systick.o(.text.Delay)
    [Anonymous Symbol]                       0x08000f8c   Section        0  dev_gpio.o(.text.DevGpio_ReadInPut)
    [Anonymous Symbol]                       0x08000fa0   Section        0  dev_gpio.o(.text.DevGpio_SetOutPut)
    __arm_cp.0_0                             0x08000fb4   Number         4  dev_gpio.o(.text.DevGpio_SetOutPut)
    [Anonymous Symbol]                       0x08000fb8   Section        0  dev_pwm.o(.text.Devpwm_SetDuty)
    __arm_cp.0_0                             0x08000fc4   Number         4  dev_pwm.o(.text.Devpwm_SetDuty)
    [Anonymous Symbol]                       0x08000fc8   Section        0  ft32f0xx_it.o(.text.EXTI4_15_IRQHandler)
    __arm_cp.4_0                             0x08001020   Number         4  ft32f0xx_it.o(.text.EXTI4_15_IRQHandler)
    [Anonymous Symbol]                       0x08001024   Section        0  ft32f0xx_exti.o(.text.EXTI_ClearITPendingBit)
    [Anonymous Symbol]                       0x0800102c   Section        0  ft32f0xx_exti.o(.text.EXTI_GetITStatus)
    __arm_cp.6_0                             0x0800103c   Number         4  ft32f0xx_exti.o(.text.EXTI_GetITStatus)
    [Anonymous Symbol]                       0x08001040   Section        0  ft32f0xx_exti.o(.text.EXTI_Init)
    __arm_cp.1_0                             0x0800109c   Number         4  ft32f0xx_exti.o(.text.EXTI_Init)
    [Anonymous Symbol]                       0x080010a0   Section        0  main.o(.text.FT32_EXIT_Init)
    [Anonymous Symbol]                       0x080010fc   Section        0  main.o(.text.FT32_GPIO_Init)
    __arm_cp.1_0                             0x08001140   Number         4  main.o(.text.FT32_GPIO_Init)
    __arm_cp.1_1                             0x08001144   Number         4  main.o(.text.FT32_GPIO_Init)
    __arm_cp.1_2                             0x08001148   Number         4  main.o(.text.FT32_GPIO_Init)
    __arm_cp.1_3                             0x0800114c   Number         4  main.o(.text.FT32_GPIO_Init)
    [Anonymous Symbol]                       0x08001150   Section        0  ft32f0xx_gpio.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x080011ca   Section        0  ft32f0xx_gpio.o(.text.GPIO_PinAFConfig)
    [Anonymous Symbol]                       0x080011ea   Section        0  ft32f0xx_gpio.o(.text.GPIO_ReadInputDataBit)
    [Anonymous Symbol]                       0x080011f6   Section        0  ft32f0xx_gpio.o(.text.GPIO_WriteBit)
    [Anonymous Symbol]                       0x08001202   Section        0  ft32f0xx_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x08001204   Section        0  main.o(.text.IWDG_Config)
    __arm_cp.7_0                             0x08001228   Number         4  main.o(.text.IWDG_Config)
    __arm_cp.7_1                             0x0800122c   Number         4  main.o(.text.IWDG_Config)
    [Anonymous Symbol]                       0x08001230   Section        0  ft32f0xx_iwdg.o(.text.IWDG_Enable)
    __arm_cp.5_1                             0x08001238   Number         4  ft32f0xx_iwdg.o(.text.IWDG_Enable)
    [Anonymous Symbol]                       0x0800123c   Section        0  ft32f0xx_iwdg.o(.text.IWDG_ReloadCounter)
    __arm_cp.3_1                             0x08001244   Number         4  ft32f0xx_iwdg.o(.text.IWDG_ReloadCounter)
    [Anonymous Symbol]                       0x08001248   Section        0  ft32f0xx_iwdg.o(.text.IWDG_SetPrescaler)
    __arm_cp.1_0                             0x08001250   Number         4  ft32f0xx_iwdg.o(.text.IWDG_SetPrescaler)
    [Anonymous Symbol]                       0x08001254   Section        0  ft32f0xx_iwdg.o(.text.IWDG_SetReload)
    __arm_cp.2_0                             0x0800125c   Number         4  ft32f0xx_iwdg.o(.text.IWDG_SetReload)
    [Anonymous Symbol]                       0x08001260   Section        0  ft32f0xx_iwdg.o(.text.IWDG_WriteAccessCmd)
    __arm_cp.0_0                             0x08001268   Number         4  ft32f0xx_iwdg.o(.text.IWDG_WriteAccessCmd)
    [Anonymous Symbol]                       0x0800126c   Section        0  ft32f0xx_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x08001270   Section        0  ft32f0xx_misc.o(.text.NVIC_Init)
    __arm_cp.0_0                             0x080012b8   Number         4  ft32f0xx_misc.o(.text.NVIC_Init)
    __arm_cp.0_1                             0x080012bc   Number         4  ft32f0xx_misc.o(.text.NVIC_Init)
    __arm_cp.0_2                             0x080012c0   Number         4  ft32f0xx_misc.o(.text.NVIC_Init)
    [Anonymous Symbol]                       0x080012d0   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x08001310   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x08001314   Section        0  ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd)
    __arm_cp.30_0                            0x08001328   Number         4  ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd)
    [Anonymous Symbol]                       0x0800132c   Section        0  ft32f0xx_rcc.o(.text.RCC_APB1PeriphClockCmd)
    __arm_cp.32_0                            0x08001340   Number         4  ft32f0xx_rcc.o(.text.RCC_APB1PeriphClockCmd)
    [Anonymous Symbol]                       0x08001344   Section        0  ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd)
    __arm_cp.31_0                            0x08001358   Number         4  ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd)
    [Anonymous Symbol]                       0x0800135c   Section        0  ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd)
    __arm_cp.34_0                            0x08001370   Number         4  ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd)
    [Anonymous Symbol]                       0x08001374   Section        0  ft32f0xx_rcc.o(.text.RCC_LSICmd)
    __arm_cp.11_0                            0x08001388   Number         4  ft32f0xx_rcc.o(.text.RCC_LSICmd)
    [Anonymous Symbol]                       0x0800138c   Section        0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x08001390   Section        0  ft32f0xx_syscfg.o(.text.SYSCFG_EXTILineConfig)
    __arm_cp.5_0                             0x080013b0   Number         4  ft32f0xx_syscfg.o(.text.SYSCFG_EXTILineConfig)
    [Anonymous Symbol]                       0x080013b4   Section        0  taskmanager.o(.text.SendShortMessageFromISR)
    [Anonymous Symbol]                       0x080013d4   Section        0  port.o(.text.SysTick_Handler)
    __arm_cp.13_0                            0x080013f4   Number         4  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x080013f8   Section        0  system_ft32f0xx.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_0                             0x08001444   Number         4  system_ft32f0xx.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_1                             0x08001448   Number         4  system_ft32f0xx.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_2                             0x0800144c   Number         4  system_ft32f0xx.o(.text.SystemCoreClockUpdate)
    __arm_cp.1_4                             0x08001450   Number         4  system_ft32f0xx.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x08001454   Section        0  system_ft32f0xx.o(.text.SystemInit)
    __arm_cp.0_0                             0x08001524   Number         4  system_ft32f0xx.o(.text.SystemInit)
    __arm_cp.0_1                             0x08001528   Number         4  system_ft32f0xx.o(.text.SystemInit)
    __arm_cp.0_2                             0x0800152c   Number         4  system_ft32f0xx.o(.text.SystemInit)
    __arm_cp.0_3                             0x08001530   Number         4  system_ft32f0xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08001534   Section        0  systick.o(.text.SystickInit)
    __arm_cp.0_0                             0x0800156c   Number         4  systick.o(.text.SystickInit)
    __arm_cp.0_1                             0x08001570   Number         4  systick.o(.text.SystickInit)
    __arm_cp.0_2                             0x08001574   Number         4  systick.o(.text.SystickInit)
    __arm_cp.0_3                             0x08001578   Number         4  systick.o(.text.SystickInit)
    [Anonymous Symbol]                       0x0800157c   Section        0  ft32f0xx_it.o(.text.TIM14_IRQHandler)
    [Anonymous Symbol]                       0x08001580   Section        0  ft32f0xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    [Anonymous Symbol]                       0x0800159c   Section        0  ft32f0xx_tim.o(.text.TIM_ClearITPendingBit)
    [Anonymous Symbol]                       0x080015a2   Section        0  ft32f0xx_tim.o(.text.TIM_Cmd)
    [Anonymous Symbol]                       0x080015b4   Section        0  ft32f0xx_tim.o(.text.TIM_CtrlPWMOutputs)
    __arm_cp.17_0                            0x080015cc   Number         4  ft32f0xx_tim.o(.text.TIM_CtrlPWMOutputs)
    [Anonymous Symbol]                       0x080015d0   Section        0  ft32f0xx_tim.o(.text.TIM_GetITStatus)
    [Anonymous Symbol]                       0x080015f0   Section        0  ft32f0xx_tim.o(.text.TIM_ITConfig)
    [Anonymous Symbol]                       0x08001604   Section        0  ft32f0xx_tim.o(.text.TIM_OC1Init)
    __arm_cp.18_1                            0x08001664   Number         4  ft32f0xx_tim.o(.text.TIM_OC1Init)
    [Anonymous Symbol]                       0x08001668   Section        0  ft32f0xx_tim.o(.text.TIM_OC4Init)
    __arm_cp.21_0                            0x080016b8   Number         4  ft32f0xx_tim.o(.text.TIM_OC4Init)
    __arm_cp.21_2                            0x080016bc   Number         4  ft32f0xx_tim.o(.text.TIM_OC4Init)
    [Anonymous Symbol]                       0x080016c0   Section        0  ft32f0xx_tim.o(.text.TIM_SetCompare1)
    [Anonymous Symbol]                       0x080016c4   Section        0  ft32f0xx_tim.o(.text.TIM_TimeBaseInit)
    __arm_cp.1_2                             0x08001724   Number         4  ft32f0xx_tim.o(.text.TIM_TimeBaseInit)
    __arm_cp.1_3                             0x08001728   Number         4  ft32f0xx_tim.o(.text.TIM_TimeBaseInit)
    [Anonymous Symbol]                       0x0800172c   Section        0  main.o(.text.Tim16BaseInit)
    __arm_cp.6_1                             0x08001788   Number         4  main.o(.text.Tim16BaseInit)
    [Anonymous Symbol]                       0x0800178c   Section        0  main.o(.text.Tim1BaseInit)
    __arm_cp.4_0                             0x080017d8   Number         4  main.o(.text.Tim1BaseInit)
    __arm_cp.4_1                             0x080017dc   Number         4  main.o(.text.Tim1BaseInit)
    [Anonymous Symbol]                       0x080017e0   Section        0  main.o(.text.Tim3BaseInit)
    __arm_cp.5_0                             0x08001870   Number         4  main.o(.text.Tim3BaseInit)
    __arm_cp.5_1                             0x08001874   Number         4  main.o(.text.Tim3BaseInit)
    __arm_cp.5_2                             0x08001878   Number         4  main.o(.text.Tim3BaseInit)
    __arm_cp.5_3                             0x0800187c   Number         4  main.o(.text.Tim3BaseInit)
    [Anonymous Symbol]                       0x08001880   Section        0  dev_adc.o(.text.get_adc_val)
    [Anonymous Symbol]                       0x08001894   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x08001970   Number         4  main.o(.text.main)
    __arm_cp.0_2                             0x0800197c   Number         4  main.o(.text.main)
    __arm_cp.0_3                             0x08001980   Number         4  main.o(.text.main)
    __arm_cp.0_4                             0x08001984   Number         4  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x08001989   Thumb Code    64  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x08001988   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvCopyDataToQueue                       0x080019c5   Thumb Code   120  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x080019c4   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x08001a3d   Thumb Code    18  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x08001a3c   Section        0  tasks.o(.text.prvDeleteTCB)
    prvIdleTask                              0x08001a51   Thumb Code    68  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x08001a50   Section        0  tasks.o(.text.prvIdleTask)
    __arm_cp.13_1                            0x08001a8c   Number         4  tasks.o(.text.prvIdleTask)
    prvInsertBlockIntoFreeList               0x08001a91   Thumb Code    68  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x08001a90   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvResetNextTaskUnblockTime              0x08001ad1   Thumb Code    32  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x08001ad0   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    __arm_cp.3_0                             0x08001aec   Number         4  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvTaskExitError                         0x08001af1   Thumb Code    18  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x08001af0   Section        0  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x08001b04   Section        0  heap_4.o(.text.pvPortMalloc)
    __arm_cp.0_1                             0x08001c00   Number         4  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x08001c04   Section        0  port.o(.text.pxPortInitialiseStack)
    __arm_cp.0_0                             0x08001c20   Number         4  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x08001c24   Section        0  main.o(.text.test1)
    [Anonymous Symbol]                       0x08001c2c   Section        0  port.o(.text.ulSetInterruptMaskFromISR)
    [Anonymous Symbol]                       0x08001c34   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x08001c56   Section        0  taskmanager.o(.text.vApplicationMallocFailedHook)
    [Anonymous Symbol]                       0x08001c5a   Section        0  taskmanager.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x08001c60   Section        0  taskmanager.o(.text.vApplicationTickHook)
    __arm_cp.3_0                             0x08001c94   Number         4  taskmanager.o(.text.vApplicationTickHook)
    __arm_cp.3_1                             0x08001c98   Number         4  taskmanager.o(.text.vApplicationTickHook)
    __arm_cp.3_2                             0x08001c9c   Number         4  taskmanager.o(.text.vApplicationTickHook)
    [Anonymous Symbol]                       0x08001ca0   Section        0  port.o(.text.vClearInterruptMaskFromISR)
    [Anonymous Symbol]                       0x08001ca6   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x08001cba   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x08001cc0   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x08001cee   Section        0  list.o(.text.vListInsertEnd)
    [Anonymous Symbol]                       0x08001d08   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x08001d1c   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x08001d2c   Section        0  heap_4.o(.text.vPortFree)
    __arm_cp.2_0                             0x08001d7c   Number         4  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x08001d80   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    __arm_cp.4_0                             0x08001da0   Number         4  port.o(.text.vPortSetupTimerInterrupt)
    __arm_cp.4_1                             0x08001da4   Number         4  port.o(.text.vPortSetupTimerInterrupt)
    vPortStartFirstTask                      0x08001db1   Thumb Code    52  port.o(.text.vPortStartFirstTask)
    [Anonymous Symbol]                       0x08001db0   Section        0  port.o(.text.vPortStartFirstTask)
    pxCurrentTCBConst2                       0x08001de0   Number         0  port.o(.text.vPortStartFirstTask)
    [Anonymous Symbol]                       0x08001de4   Section        0  port.o(.text.vPortYield)
    __arm_cp.7_0                             0x08001df8   Number         4  port.o(.text.vPortYield)
    [Anonymous Symbol]                       0x08001dfc   Section        0  tasks.o(.text.vTaskDelay)
    __arm_cp.4_0                             0x08001e20   Number         4  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x08001e24   Section        0  tasks.o(.text.vTaskStartScheduler)
    __arm_cp.12_0                            0x08001e58   Number         4  tasks.o(.text.vTaskStartScheduler)
    __arm_cp.12_1                            0x08001e5c   Number         4  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x08001e68   Section        0  tasks.o(.text.vTaskSuspendAll)
    __arm_cp.5_0                             0x08001e74   Number         4  tasks.o(.text.vTaskSuspendAll)
    [Anonymous Symbol]                       0x08001e78   Section        0  tasks.o(.text.vTaskSwitchContext)
    __arm_cp.23_1                            0x08001ef0   Number         4  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08001ef4   Section        0  port.o(.text.xPortStartScheduler)
    __arm_cp.3_0                             0x08001f24   Number         4  port.o(.text.xPortStartScheduler)
    __arm_cp.3_1                             0x08001f28   Number         4  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x08001f2c   Section        0  queue.o(.text.xQueueGenericSendFromISR)
    [Anonymous Symbol]                       0x08001f98   Section        0  tasks.o(.text.xTaskCreate)
    __arm_cp.0_2                             0x08002104   Number         4  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x08002108   Section        0  tasks.o(.text.xTaskIncrementTick)
    __arm_cp.15_0                            0x080021d4   Number         4  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x080021d8   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    __arm_cp.37_0                            0x08002224   Number         4  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x08002228   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    __arm_cp.26_1                            0x0800227c   Number         4  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x08002280   Section        0  tasks.o(.text.xTaskResumeAll)
    __arm_cp.7_0                             0x08002320   Number         4  tasks.o(.text.xTaskResumeAll)
    __arm_cp.7_1                             0x08002324   Number         4  tasks.o(.text.xTaskResumeAll)
    ddiv_reciptbl                            0x08002328   Data         128  ddiv.o(.constdata)
    .constdata                               0x08002328   Section      128  ddiv.o(.constdata)
    x$fpl$usenofp                            0x08002328   Section        0  usenofp.o(x$fpl$usenofp)
    dev_gpio_handle                          0x080023b8   Data          88  dev_gpio.o(.rodata.dev_gpio_handle)
    [Anonymous Symbol]                       0x080023b8   Section        0  dev_gpio.o(.rodata.dev_gpio_handle)
    uxCriticalNesting                        0x20000008   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000008   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000010   Section       96  libspace.o(.bss)
    [Anonymous Symbol]                       0x20000070   Section        0  ft32f0xx_it.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x2000007c   Section        0  main.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000080   Section        0  tasks.o(.bss..L_MergedGlobals)
    uxTaskNumber                             0x20000084   Data           4  tasks.o(.bss..L_MergedGlobals)
    uxDeletedTasksWaitingCleanUp             0x20000088   Data           4  tasks.o(.bss..L_MergedGlobals)
    uxCurrentNumberOfTasks                   0x2000008c   Data           4  tasks.o(.bss..L_MergedGlobals)
    xSchedulerRunning                        0x20000090   Data           4  tasks.o(.bss..L_MergedGlobals)
    pxDelayedTaskList                        0x20000094   Data           4  tasks.o(.bss..L_MergedGlobals)
    pxOverflowDelayedTaskList                0x20000098   Data           4  tasks.o(.bss..L_MergedGlobals)
    uxTopReadyPriority                       0x2000009c   Data           4  tasks.o(.bss..L_MergedGlobals)
    xIdleTaskHandle                          0x200000a0   Data           4  tasks.o(.bss..L_MergedGlobals)
    xNextTaskUnblockTime                     0x200000a4   Data           4  tasks.o(.bss..L_MergedGlobals)
    xTickCount                               0x200000a8   Data           4  tasks.o(.bss..L_MergedGlobals)
    uxSchedulerSuspended                     0x200000ac   Data           4  tasks.o(.bss..L_MergedGlobals)
    xYieldPending                            0x200000b0   Data           4  tasks.o(.bss..L_MergedGlobals)
    xPendedTicks                             0x200000b4   Data           4  tasks.o(.bss..L_MergedGlobals)
    xNumOfOverflows                          0x200000b8   Data           4  tasks.o(.bss..L_MergedGlobals)
    xTasksWaitingTermination                 0x200000bc   Data          20  tasks.o(.bss..L_MergedGlobals)
    xPendingReadyList                        0x200000d0   Data          20  tasks.o(.bss..L_MergedGlobals)
    xDelayedTaskList1                        0x200000e4   Data          20  tasks.o(.bss..L_MergedGlobals)
    xBlockAllocatedBit                       0x200000f8   Data           1  heap_4.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x200000f8   Section        0  heap_4.o(.bss..L_MergedGlobals)
    pxEnd                                    0x200000fc   Data           4  heap_4.o(.bss..L_MergedGlobals)
    xFreeBytesRemaining                      0x20000100   Data           4  heap_4.o(.bss..L_MergedGlobals)
    xMinimumEverFreeBytesRemaining           0x20000104   Data           4  heap_4.o(.bss..L_MergedGlobals)
    xNumberOfSuccessfulAllocations           0x20000108   Data           4  heap_4.o(.bss..L_MergedGlobals)
    xNumberOfSuccessfulFrees                 0x2000010c   Data           4  heap_4.o(.bss..L_MergedGlobals)
    xStart                                   0x20000110   Data           8  heap_4.o(.bss..L_MergedGlobals)
    xDelayedTaskList2                        0x20000118   Data          20  tasks.o(.bss..L_MergedGlobals.1)
    [Anonymous Symbol]                       0x20000118   Section        0  tasks.o(.bss..L_MergedGlobals.1)
    pxReadyTasksLists                        0x2000012c   Data         100  tasks.o(.bss..L_MergedGlobals.1)
    TimingDelay                              0x20000198   Data           4  systick.o(.bss.TimingDelay)
    [Anonymous Symbol]                       0x20000198   Section        0  systick.o(.bss.TimingDelay)
    ucHeap                                   0x2000019c   Data        3072  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x2000019c   Section        0  heap_4.o(.bss.ucHeap)
    ulSystemTimeTickCount                    0x20000d9c   Data           4  taskmanager.o(.bss.ulSystemTimeTickCount)
    [Anonymous Symbol]                       0x20000d9c   Section        0  taskmanager.o(.bss.ulSystemTimeTickCount)
    Heap_Mem                                 0x20000da8   Data         512  startup_ft32f030x8.o(HEAP)
    HEAP                                     0x20000da8   Section      512  startup_ft32f030x8.o(HEAP)
    Stack_Mem                                0x20000fa8   Data        1024  startup_ft32f030x8.o(STACK)
    STACK                                    0x20000fa8   Section     1024  startup_ft32f030x8.o(STACK)
    __initial_sp                             0x200013a8   Data           0  startup_ft32f030x8.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000c0   Number         0  startup_ft32f030x8.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_ft32f030x8.o(RESET)
    __Vectors_End                            0x080000c0   Data           0  startup_ft32f030x8.o(RESET)
    __main                                   0x080000c1   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000c9   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000c9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080000d9   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000105   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x08000121   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0800013d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x0800013f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x08000141   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000143   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000145   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000145   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000145   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0800014b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0800014b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x0800014f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0800014f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000157   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000159   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000159   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0800015d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy4                          0x08000165   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x08000165   Thumb Code     0  rt_memcpy.o(.emb_text)
    Reset_Handler                            0x0800019d   Thumb Code    38  startup_ft32f030x8.o(.text)
    ADC1_IRQHandler                          0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    DMA1_Channel1_IRQHandler                 0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    DMA1_Channel2_3_IRQHandler               0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    DMA1_Channel4_5_IRQHandler               0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    EXTI0_1_IRQHandler                       0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    EXTI2_3_IRQHandler                       0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    FLASH_IRQHandler                         0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    I2C1_IRQHandler                          0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    I2C2_IRQHandler                          0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    PVD_VDDIO_IRQHandler                     0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    RCC_IRQHandler                           0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    RTC_IRQHandler                           0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    SPI1_IRQHandler                          0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    SPI2_IRQHandler                          0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    TIM15_IRQHandler                         0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    TIM16_IRQHandler                         0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    TIM17_IRQHandler                         0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    TIM1_CC_IRQHandler                       0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    TIM3_IRQHandler                          0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    TIM6_IRQHandler                          0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    USART1_IRQHandler                        0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    USART2_IRQHandler                        0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    USB_IRQHandler                           0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    WWDG_IRQHandler                          0x080001cd   Thumb Code     0  startup_ft32f030x8.o(.text)
    __user_initial_stackheap                 0x080001d1   Thumb Code     0  startup_ft32f030x8.o(.text)
    __aeabi_memcpy                           0x08000211   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x08000211   Thumb Code     0  rt_memcpy.o(.text)
    __aeabi_memset4                          0x08000293   Thumb Code    18  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x08000293   Thumb Code     0  aeabi_memset4.o(.text)
    _memset_w                                0x080002a5   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x080002bf   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x080002dd   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x080002dd   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x080002e1   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x080002e1   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x080002e1   Thumb Code     4  rt_memclr.o(.text)
    __aeabi_uidiv                            0x080002e5   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_uidivmod                         0x080002e5   Thumb Code    20  aeabi_sdiv.o(.text)
    __aeabi_idiv                             0x080002f9   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_idivmod                          0x080002f9   Thumb Code   326  aeabi_sdiv.o(.text)
    __use_two_region_memory                  0x0800043f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x08000441   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x08000443   Thumb Code     2  heapauxi.o(.text)
    __aeabi_ddiv                             0x08000445   Thumb Code     0  ddiv.o(.text)
    _ddiv                                    0x08000445   Thumb Code  1072  ddiv.o(.text)
    _drdiv                                   0x08000875   Thumb Code    20  ddiv.o(.text)
    __aeabi_d2iz                             0x0800088d   Thumb Code     0  dfixi.o(.text)
    _dfix                                    0x0800088d   Thumb Code    98  dfixi.o(.text)
    __aeabi_dmul                             0x080008f9   Thumb Code     0  dmul.o(.text)
    _dmul                                    0x080008f9   Thumb Code   558  dmul.o(.text)
    __user_setup_stackheap                   0x08000b41   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x08000b7f   Thumb Code    16  exit.o(.text)
    __user_libspace                          0x08000b91   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000b91   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x08000b91   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08000b99   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08000ba5   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000ba5   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000ba7   Thumb Code     0  indicate_semi.o(.text)
    AD9833_InitIo                            0x08000ba9   Thumb Code    32  dev_ad9877.o(.text.AD9833_InitIo)
    AD9833_SetPara                           0x08000c19   Thumb Code   152  dev_ad9877.o(.text.AD9833_SetPara)
    ADC_ChannelConfig                        0x08000cb1   Thumb Code    10  ft32f0xx_adc.o(.text.ADC_ChannelConfig)
    ADC_Cmd                                  0x08000cbb   Thumb Code    18  ft32f0xx_adc.o(.text.ADC_Cmd)
    ADC_DMACmd                               0x08000ccd   Thumb Code    18  ft32f0xx_adc.o(.text.ADC_DMACmd)
    ADC_DMARequestModeConfig                 0x08000cdf   Thumb Code    16  ft32f0xx_adc.o(.text.ADC_DMARequestModeConfig)
    ADC_DMA_Config                           0x08000cf1   Thumb Code   244  main.o(.text.ADC_DMA_Config)
    ADC_DeInit                               0x08000ddd   Thumb Code    36  ft32f0xx_adc.o(.text.ADC_DeInit)
    ADC_GetCalibrationFactor                 0x08000e01   Thumb Code    44  ft32f0xx_adc.o(.text.ADC_GetCalibrationFactor)
    ADC_GetFlagStatus                        0x08000e2d   Thumb Code    26  ft32f0xx_adc.o(.text.ADC_GetFlagStatus)
    ADC_Init                                 0x08000e49   Thumb Code    40  ft32f0xx_adc.o(.text.ADC_Init)
    ADC_StartOfConversion                    0x08000e71   Thumb Code    10  ft32f0xx_adc.o(.text.ADC_StartOfConversion)
    ADC_StructInit                           0x08000e7b   Thumb Code    16  ft32f0xx_adc.o(.text.ADC_StructInit)
    DMA_ClearFlag                            0x08000e8d   Thumb Code    16  ft32f0xx_dma.o(.text.DMA_ClearFlag)
    DMA_Cmd                                  0x08000e99   Thumb Code    24  ft32f0xx_dma.o(.text.DMA_Cmd)
    DMA_DeInit                               0x08000ead   Thumb Code   112  ft32f0xx_dma.o(.text.DMA_DeInit)
    DMA_GetFlagStatus                        0x08000f1d   Thumb Code    28  ft32f0xx_dma.o(.text.DMA_GetFlagStatus)
    DMA_Init                                 0x08000f39   Thumb Code    60  ft32f0xx_dma.o(.text.DMA_Init)
    Delay                                    0x08000f75   Thumb Code    24  systick.o(.text.Delay)
    DevGpio_ReadInPut                        0x08000f8d   Thumb Code    24  dev_gpio.o(.text.DevGpio_ReadInPut)
    DevGpio_SetOutPut                        0x08000fa1   Thumb Code    24  dev_gpio.o(.text.DevGpio_SetOutPut)
    Devpwm_SetDuty                           0x08000fb9   Thumb Code    16  dev_pwm.o(.text.Devpwm_SetDuty)
    EXTI4_15_IRQHandler                      0x08000fc9   Thumb Code    92  ft32f0xx_it.o(.text.EXTI4_15_IRQHandler)
    EXTI_ClearITPendingBit                   0x08001025   Thumb Code    12  ft32f0xx_exti.o(.text.EXTI_ClearITPendingBit)
    EXTI_GetITStatus                         0x0800102d   Thumb Code    20  ft32f0xx_exti.o(.text.EXTI_GetITStatus)
    EXTI_Init                                0x08001041   Thumb Code    96  ft32f0xx_exti.o(.text.EXTI_Init)
    FT32_EXIT_Init                           0x080010a1   Thumb Code    90  main.o(.text.FT32_EXIT_Init)
    FT32_GPIO_Init                           0x080010fd   Thumb Code    84  main.o(.text.FT32_GPIO_Init)
    GPIO_Init                                0x08001151   Thumb Code   122  ft32f0xx_gpio.o(.text.GPIO_Init)
    GPIO_PinAFConfig                         0x080011cb   Thumb Code    32  ft32f0xx_gpio.o(.text.GPIO_PinAFConfig)
    GPIO_ReadInputDataBit                    0x080011eb   Thumb Code    12  ft32f0xx_gpio.o(.text.GPIO_ReadInputDataBit)
    GPIO_WriteBit                            0x080011f7   Thumb Code    12  ft32f0xx_gpio.o(.text.GPIO_WriteBit)
    HardFault_Handler                        0x08001203   Thumb Code     2  ft32f0xx_it.o(.text.HardFault_Handler)
    IWDG_Config                              0x08001205   Thumb Code    44  main.o(.text.IWDG_Config)
    IWDG_Enable                              0x08001231   Thumb Code    16  ft32f0xx_iwdg.o(.text.IWDG_Enable)
    IWDG_ReloadCounter                       0x0800123d   Thumb Code    16  ft32f0xx_iwdg.o(.text.IWDG_ReloadCounter)
    IWDG_SetPrescaler                        0x08001249   Thumb Code    12  ft32f0xx_iwdg.o(.text.IWDG_SetPrescaler)
    IWDG_SetReload                           0x08001255   Thumb Code    12  ft32f0xx_iwdg.o(.text.IWDG_SetReload)
    IWDG_WriteAccessCmd                      0x08001261   Thumb Code    12  ft32f0xx_iwdg.o(.text.IWDG_WriteAccessCmd)
    NMI_Handler                              0x0800126d   Thumb Code     2  ft32f0xx_it.o(.text.NMI_Handler)
    NVIC_Init                                0x08001271   Thumb Code    84  ft32f0xx_misc.o(.text.NVIC_Init)
    PendSV_Handler                           0x080012d1   Thumb Code    68  port.o(.text.PendSV_Handler)
    RCC_AHBPeriphClockCmd                    0x08001315   Thumb Code    24  ft32f0xx_rcc.o(.text.RCC_AHBPeriphClockCmd)
    RCC_APB1PeriphClockCmd                   0x0800132d   Thumb Code    24  ft32f0xx_rcc.o(.text.RCC_APB1PeriphClockCmd)
    RCC_APB2PeriphClockCmd                   0x08001345   Thumb Code    24  ft32f0xx_rcc.o(.text.RCC_APB2PeriphClockCmd)
    RCC_APB2PeriphResetCmd                   0x0800135d   Thumb Code    24  ft32f0xx_rcc.o(.text.RCC_APB2PeriphResetCmd)
    RCC_LSICmd                               0x08001375   Thumb Code    24  ft32f0xx_rcc.o(.text.RCC_LSICmd)
    SVC_Handler                              0x0800138d   Thumb Code     2  port.o(.text.SVC_Handler)
    SYSCFG_EXTILineConfig                    0x08001391   Thumb Code    36  ft32f0xx_syscfg.o(.text.SYSCFG_EXTILineConfig)
    SendShortMessageFromISR                  0x080013b5   Thumb Code    36  taskmanager.o(.text.SendShortMessageFromISR)
    SysTick_Handler                          0x080013d5   Thumb Code    36  port.o(.text.SysTick_Handler)
    SystemCoreClockUpdate                    0x080013f9   Thumb Code    96  system_ft32f0xx.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x08001455   Thumb Code   224  system_ft32f0xx.o(.text.SystemInit)
    SystickInit                              0x08001535   Thumb Code    72  systick.o(.text.SystickInit)
    TIM14_IRQHandler                         0x0800157d   Thumb Code     2  ft32f0xx_it.o(.text.TIM14_IRQHandler)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x08001581   Thumb Code    32  ft32f0xx_it.o(.text.TIM1_BRK_UP_TRG_COM_IRQHandler)
    TIM_ClearITPendingBit                    0x0800159d   Thumb Code     6  ft32f0xx_tim.o(.text.TIM_ClearITPendingBit)
    TIM_Cmd                                  0x080015a3   Thumb Code    18  ft32f0xx_tim.o(.text.TIM_Cmd)
    TIM_CtrlPWMOutputs                       0x080015b5   Thumb Code    28  ft32f0xx_tim.o(.text.TIM_CtrlPWMOutputs)
    TIM_GetITStatus                          0x080015d1   Thumb Code    32  ft32f0xx_tim.o(.text.TIM_GetITStatus)
    TIM_ITConfig                             0x080015f1   Thumb Code    18  ft32f0xx_tim.o(.text.TIM_ITConfig)
    TIM_OC1Init                              0x08001605   Thumb Code   104  ft32f0xx_tim.o(.text.TIM_OC1Init)
    TIM_OC4Init                              0x08001669   Thumb Code    92  ft32f0xx_tim.o(.text.TIM_OC4Init)
    TIM_SetCompare1                          0x080016c1   Thumb Code     4  ft32f0xx_tim.o(.text.TIM_SetCompare1)
    TIM_TimeBaseInit                         0x080016c5   Thumb Code   112  ft32f0xx_tim.o(.text.TIM_TimeBaseInit)
    Tim16BaseInit                            0x0800172d   Thumb Code   104  main.o(.text.Tim16BaseInit)
    Tim1BaseInit                             0x0800178d   Thumb Code    84  main.o(.text.Tim1BaseInit)
    Tim3BaseInit                             0x080017e1   Thumb Code   160  main.o(.text.Tim3BaseInit)
    get_adc_val                              0x08001881   Thumb Code    20  dev_adc.o(.text.get_adc_val)
    main                                     0x08001895   Thumb Code   244  main.o(.text.main)
    pvPortMalloc                             0x08001b05   Thumb Code   260  heap_4.o(.text.pvPortMalloc)
    pxPortInitialiseStack                    0x08001c05   Thumb Code    32  port.o(.text.pxPortInitialiseStack)
    test1                                    0x08001c25   Thumb Code     8  main.o(.text.test1)
    ulSetInterruptMaskFromISR                0x08001c2d   Thumb Code     8  port.o(.text.ulSetInterruptMaskFromISR)
    uxListRemove                             0x08001c35   Thumb Code    34  list.o(.text.uxListRemove)
    vApplicationMallocFailedHook             0x08001c57   Thumb Code     4  taskmanager.o(.text.vApplicationMallocFailedHook)
    vApplicationStackOverflowHook            0x08001c5b   Thumb Code     4  taskmanager.o(.text.vApplicationStackOverflowHook)
    vApplicationTickHook                     0x08001c61   Thumb Code    64  taskmanager.o(.text.vApplicationTickHook)
    vClearInterruptMaskFromISR               0x08001ca1   Thumb Code     6  port.o(.text.vClearInterruptMaskFromISR)
    vListInitialise                          0x08001ca7   Thumb Code    20  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x08001cbb   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x08001cc1   Thumb Code    46  list.o(.text.vListInsert)
    vListInsertEnd                           0x08001cef   Thumb Code    24  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x08001d09   Thumb Code    24  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x08001d1d   Thumb Code    20  port.o(.text.vPortExitCritical)
    vPortFree                                0x08001d2d   Thumb Code    84  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x08001d81   Thumb Code    40  port.o(.text.vPortSetupTimerInterrupt)
    vPortYield                               0x08001de5   Thumb Code    24  port.o(.text.vPortYield)
    vTaskDelay                               0x08001dfd   Thumb Code    40  tasks.o(.text.vTaskDelay)
    vTaskStartScheduler                      0x08001e25   Thumb Code    68  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x08001e69   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x08001e79   Thumb Code   132  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x08001ef5   Thumb Code    56  port.o(.text.xPortStartScheduler)
    xQueueGenericSendFromISR                 0x08001f2d   Thumb Code   108  queue.o(.text.xQueueGenericSendFromISR)
    xTaskCreate                              0x08001f99   Thumb Code   376  tasks.o(.text.xTaskCreate)
    xTaskIncrementTick                       0x08002109   Thumb Code   212  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x080021d9   Thumb Code    84  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x08002229   Thumb Code    92  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x08002281   Thumb Code   168  tasks.o(.text.xTaskResumeAll)
    __I$use$fp                               0x08002328   Number         0  usenofp.o(x$fpl$usenofp)
    AHBPrescTable                            0x080023a8   Data          16  system_ft32f0xx.o(.rodata.AHBPrescTable)
    Region$$Table$$Base                      0x08002410   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08002430   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_ft32f0xx.o(.data.SystemCoreClock)
    lsi_freq                                 0x20000004   Data           4  main.o(.data.lsi_freq)
    __libspace_start                         0x20000010   Data          96  libspace.o(.bss)
    KEY1_Flg                                 0x20000070   Data           1  ft32f0xx_it.o(.bss..L_MergedGlobals)
    __temporary_stack_top$libspace           0x20000070   Data           0  libspace.o(.bss)
    KEY2_Flg                                 0x20000071   Data           1  ft32f0xx_it.o(.bss..L_MergedGlobals)
    KEY1_Count                               0x20000074   Data           4  ft32f0xx_it.o(.bss..L_MergedGlobals)
    KEY2_Count                               0x20000078   Data           4  ft32f0xx_it.o(.bss..L_MergedGlobals)
    step                                     0x2000007c   Data           1  main.o(.bss..L_MergedGlobals)
    ch                                       0x2000007d   Data           1  main.o(.bss..L_MergedGlobals)
    Bat_Stdby                                0x2000007e   Data           1  main.o(.bss..L_MergedGlobals)
    Bat_Charge                               0x2000007f   Data           1  main.o(.bss..L_MergedGlobals)
    pxCurrentTCB                             0x20000080   Data           4  tasks.o(.bss..L_MergedGlobals)
    DMA_DualConvertedValue                   0x20000190   Data           8  main.o(.bss.DMA_DualConvertedValue)
    xHighProTaskQueue                        0x20000da0   Data           4  highprotask.o(.bss.xHighProTaskQueue)
    xLowProTaskQueue                         0x20000da4   Data           4  lowprotask.o(.bss.xLowProTaskQueue)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000c1

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00002440, Max: 0x00010000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00002430, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000c0   Data   RO         1180    RESET               startup_ft32f030x8.o
    0x080000c0   0x080000c0   0x00000008   Code   RO         1218  * !!!main             c_p.l(__main.o)
    0x080000c8   0x080000c8   0x0000003c   Code   RO         1438    !!!scatter          c_p.l(__scatter.o)
    0x08000104   0x08000104   0x0000001a   Code   RO         1440    !!handler_copy      c_p.l(__scatter_copy.o)
    0x0800011e   0x0800011e   0x00000002   PAD
    0x08000120   0x08000120   0x0000001c   Code   RO         1442    !!handler_zi        c_p.l(__scatter_zi.o)
    0x0800013c   0x0800013c   0x00000002   Code   RO         1295    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1313    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1315    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1318    .ARM.Collect$$libinit$$0000000A  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1320    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1322    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1325    .ARM.Collect$$libinit$$00000011  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1327    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1329    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1331    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1333    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1335    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1337    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1339    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1341    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1343    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1345    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1349    .ARM.Collect$$libinit$$0000002C  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1351    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1353    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1355    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x0800013e   0x0800013e   0x00000002   Code   RO         1356    .ARM.Collect$$libinit$$00000033  c_p.l(libinit2.o)
    0x08000140   0x08000140   0x00000002   Code   RO         1393    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x08000142   0x08000142   0x00000000   Code   RO         1421    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x08000142   0x08000142   0x00000000   Code   RO         1423    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x08000142   0x08000142   0x00000000   Code   RO         1426    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x08000142   0x08000142   0x00000000   Code   RO         1429    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x08000142   0x08000142   0x00000000   Code   RO         1431    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x08000142   0x08000142   0x00000000   Code   RO         1434    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x08000142   0x08000142   0x00000002   Code   RO         1435    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x08000144   0x08000144   0x00000000   Code   RO         1250    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x08000144   0x08000144   0x00000000   Code   RO         1263    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x08000144   0x08000144   0x00000006   Code   RO         1275    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x0800014a   0x0800014a   0x00000000   Code   RO         1265    .ARM.Collect$$rtentry$$00000009  c_p.l(__rtentry2.o)
    0x0800014a   0x0800014a   0x00000004   Code   RO         1266    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x0800014e   0x0800014e   0x00000000   Code   RO         1268    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x0800014e   0x0800014e   0x00000008   Code   RO         1269    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x08000156   0x08000156   0x00000002   Code   RO         1304    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x08000158   0x08000158   0x00000000   Code   RO         1364    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x08000158   0x08000158   0x00000004   Code   RO         1365    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x0800015c   0x0800015c   0x00000006   Code   RO         1366    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x08000162   0x08000162   0x00000002   PAD
    0x08000164   0x08000164   0x00000038   Code   RO         1204    .emb_text           c_p.l(rt_memcpy.o)
    0x0800019c   0x0800019c   0x00000074   Code   RO         1181    .text               startup_ft32f030x8.o
    0x08000210   0x08000210   0x00000082   Code   RO         1205    .text               c_p.l(rt_memcpy.o)
    0x08000292   0x08000292   0x00000012   Code   RO         1208    .text               c_p.l(aeabi_memset4.o)
    0x080002a4   0x080002a4   0x00000040   Code   RO         1210    .text               c_p.l(rt_memclr.o)
    0x080002e4   0x080002e4   0x0000015a   Code   RO         1212    .text               c_p.l(aeabi_sdiv.o)
    0x0800043e   0x0800043e   0x00000006   Code   RO         1216    .text               c_p.l(heapauxi.o)
    0x08000444   0x08000444   0x00000448   Code   RO         1220    .text               fz_ps.l(ddiv.o)
    0x0800088c   0x0800088c   0x0000006c   Code   RO         1223    .text               fz_ps.l(dfixi.o)
    0x080008f8   0x080008f8   0x00000248   Code   RO         1225    .text               fz_ps.l(dmul.o)
    0x08000b40   0x08000b40   0x0000003e   Code   RO         1281    .text               c_p.l(sys_stackheap_outer.o)
    0x08000b7e   0x08000b7e   0x00000010   Code   RO         1284    .text               c_p.l(exit.o)
    0x08000b8e   0x08000b8e   0x00000002   PAD
    0x08000b90   0x08000b90   0x00000008   Code   RO         1300    .text               c_p.l(libspace.o)
    0x08000b98   0x08000b98   0x0000000c   Code   RO         1359    .text               c_p.l(sys_exit.o)
    0x08000ba4   0x08000ba4   0x00000002   Code   RO         1382    .text               c_p.l(use_no_semi.o)
    0x08000ba6   0x08000ba6   0x00000000   Code   RO         1384    .text               c_p.l(indicate_semi.o)
    0x08000ba6   0x08000ba6   0x00000002   PAD
    0x08000ba8   0x08000ba8   0x0000001c   Code   RO           87    .text.AD9833_InitIo  dev_ad9877.o
    0x08000bc4   0x08000bc4   0x00000054   Code   RO           85    .text.AD9833_SendData  dev_ad9877.o
    0x08000c18   0x08000c18   0x00000098   Code   RO           83    .text.AD9833_SetPara  dev_ad9877.o
    0x08000cb0   0x08000cb0   0x0000000a   Code   RO          483    .text.ADC_ChannelConfig  ft32f0xx_adc.o
    0x08000cba   0x08000cba   0x00000012   Code   RO          459    .text.ADC_Cmd       ft32f0xx_adc.o
    0x08000ccc   0x08000ccc   0x00000012   Code   RO          499    .text.ADC_DMACmd    ft32f0xx_adc.o
    0x08000cde   0x08000cde   0x00000010   Code   RO          501    .text.ADC_DMARequestModeConfig  ft32f0xx_adc.o
    0x08000cee   0x08000cee   0x00000002   PAD
    0x08000cf0   0x08000cf0   0x000000ec   Code   RO           27    .text.ADC_DMA_Config  main.o
    0x08000ddc   0x08000ddc   0x00000024   Code   RO          453    .text.ADC_DeInit    ft32f0xx_adc.o
    0x08000e00   0x08000e00   0x0000002c   Code   RO          491    .text.ADC_GetCalibrationFactor  ft32f0xx_adc.o
    0x08000e2c   0x08000e2c   0x0000001a   Code   RO          505    .text.ADC_GetFlagStatus  ft32f0xx_adc.o
    0x08000e46   0x08000e46   0x00000002   PAD
    0x08000e48   0x08000e48   0x00000028   Code   RO          455    .text.ADC_Init      ft32f0xx_adc.o
    0x08000e70   0x08000e70   0x0000000a   Code   RO          495    .text.ADC_StartOfConversion  ft32f0xx_adc.o
    0x08000e7a   0x08000e7a   0x00000010   Code   RO          457    .text.ADC_StructInit  ft32f0xx_adc.o
    0x08000e8a   0x08000e8a   0x00000002   PAD
    0x08000e8c   0x08000e8c   0x0000000c   Code   RO          565    .text.DMA_ClearFlag  ft32f0xx_dma.o
    0x08000e98   0x08000e98   0x00000014   Code   RO          555    .text.DMA_Cmd       ft32f0xx_dma.o
    0x08000eac   0x08000eac   0x00000070   Code   RO          549    .text.DMA_DeInit    ft32f0xx_dma.o
    0x08000f1c   0x08000f1c   0x0000001c   Code   RO          563    .text.DMA_GetFlagStatus  ft32f0xx_dma.o
    0x08000f38   0x08000f38   0x0000003c   Code   RO          551    .text.DMA_Init      ft32f0xx_dma.o
    0x08000f74   0x08000f74   0x00000018   Code   RO           54    .text.Delay         systick.o
    0x08000f8c   0x08000f8c   0x00000014   Code   RO          100    .text.DevGpio_ReadInPut  dev_gpio.o
    0x08000fa0   0x08000fa0   0x00000018   Code   RO           98    .text.DevGpio_SetOutPut  dev_gpio.o
    0x08000fb8   0x08000fb8   0x00000010   Code   RO          112    .text.Devpwm_SetDuty  dev_pwm.o
    0x08000fc8   0x08000fc8   0x0000005c   Code   RO           10    .text.EXTI4_15_IRQHandler  ft32f0xx_it.o
    0x08001024   0x08001024   0x00000008   Code   RO          594    .text.EXTI_ClearITPendingBit  ft32f0xx_exti.o
    0x0800102c   0x0800102c   0x00000014   Code   RO          592    .text.EXTI_GetITStatus  ft32f0xx_exti.o
    0x08001040   0x08001040   0x00000060   Code   RO          582    .text.EXTI_Init     ft32f0xx_exti.o
    0x080010a0   0x080010a0   0x0000005a   Code   RO           25    .text.FT32_EXIT_Init  main.o
    0x080010fa   0x080010fa   0x00000002   PAD
    0x080010fc   0x080010fc   0x00000054   Code   RO           23    .text.FT32_GPIO_Init  main.o
    0x08001150   0x08001150   0x0000007a   Code   RO          672    .text.GPIO_Init     ft32f0xx_gpio.o
    0x080011ca   0x080011ca   0x00000020   Code   RO          694    .text.GPIO_PinAFConfig  ft32f0xx_gpio.o
    0x080011ea   0x080011ea   0x0000000c   Code   RO          678    .text.GPIO_ReadInputDataBit  ft32f0xx_gpio.o
    0x080011f6   0x080011f6   0x0000000c   Code   RO          690    .text.GPIO_WriteBit  ft32f0xx_gpio.o
    0x08001202   0x08001202   0x00000002   Code   RO            4    .text.HardFault_Handler  ft32f0xx_it.o
    0x08001204   0x08001204   0x0000002c   Code   RO           35    .text.IWDG_Config   main.o
    0x08001230   0x08001230   0x0000000c   Code   RO          717    .text.IWDG_Enable   ft32f0xx_iwdg.o
    0x0800123c   0x0800123c   0x0000000c   Code   RO          713    .text.IWDG_ReloadCounter  ft32f0xx_iwdg.o
    0x08001248   0x08001248   0x0000000c   Code   RO          709    .text.IWDG_SetPrescaler  ft32f0xx_iwdg.o
    0x08001254   0x08001254   0x0000000c   Code   RO          711    .text.IWDG_SetReload  ft32f0xx_iwdg.o
    0x08001260   0x08001260   0x0000000c   Code   RO          707    .text.IWDG_WriteAccessCmd  ft32f0xx_iwdg.o
    0x0800126c   0x0800126c   0x00000002   Code   RO            2    .text.NMI_Handler   ft32f0xx_it.o
    0x0800126e   0x0800126e   0x00000002   PAD
    0x08001270   0x08001270   0x00000054   Code   RO          730    .text.NVIC_Init     ft32f0xx_misc.o
    0x080012c4   0x080012c4   0x0000000c   PAD
    0x080012d0   0x080012d0   0x00000044   Code   RO          343    .text.PendSV_Handler  port.o
    0x08001314   0x08001314   0x00000018   Code   RO          834    .text.RCC_AHBPeriphClockCmd  ft32f0xx_rcc.o
    0x0800132c   0x0800132c   0x00000018   Code   RO          838    .text.RCC_APB1PeriphClockCmd  ft32f0xx_rcc.o
    0x08001344   0x08001344   0x00000018   Code   RO          836    .text.RCC_APB2PeriphClockCmd  ft32f0xx_rcc.o
    0x0800135c   0x0800135c   0x00000018   Code   RO          842    .text.RCC_APB2PeriphResetCmd  ft32f0xx_rcc.o
    0x08001374   0x08001374   0x00000018   Code   RO          796    .text.RCC_LSICmd    ft32f0xx_rcc.o
    0x0800138c   0x0800138c   0x00000002   Code   RO          323    .text.SVC_Handler   port.o
    0x0800138e   0x0800138e   0x00000002   PAD
    0x08001390   0x08001390   0x00000024   Code   RO          975    .text.SYSCFG_EXTILineConfig  ft32f0xx_syscfg.o
    0x080013b4   0x080013b4   0x00000020   Code   RO          433    .text.SendShortMessageFromISR  taskmanager.o
    0x080013d4   0x080013d4   0x00000024   Code   RO          345    .text.SysTick_Handler  port.o
    0x080013f8   0x080013f8   0x0000005c   Code   RO         1190    .text.SystemCoreClockUpdate  system_ft32f0xx.o
    0x08001454   0x08001454   0x000000e0   Code   RO         1188    .text.SystemInit    system_ft32f0xx.o
    0x08001534   0x08001534   0x00000048   Code   RO           52    .text.SystickInit   systick.o
    0x0800157c   0x0800157c   0x00000002   Code   RO            6    .text.TIM14_IRQHandler  ft32f0xx_it.o
    0x0800157e   0x0800157e   0x00000002   PAD
    0x08001580   0x08001580   0x0000001c   Code   RO            8    .text.TIM1_BRK_UP_TRG_COM_IRQHandler  ft32f0xx_it.o
    0x0800159c   0x0800159c   0x00000006   Code   RO         1136    .text.TIM_ClearITPendingBit  ft32f0xx_tim.o
    0x080015a2   0x080015a2   0x00000012   Code   RO         1016    .text.TIM_Cmd       ft32f0xx_tim.o
    0x080015b4   0x080015b4   0x0000001c   Code   RO         1022    .text.TIM_CtrlPWMOutputs  ft32f0xx_tim.o
    0x080015d0   0x080015d0   0x00000020   Code   RO         1134    .text.TIM_GetITStatus  ft32f0xx_tim.o
    0x080015f0   0x080015f0   0x00000012   Code   RO         1126    .text.TIM_ITConfig  ft32f0xx_tim.o
    0x08001602   0x08001602   0x00000002   PAD
    0x08001604   0x08001604   0x00000064   Code   RO         1024    .text.TIM_OC1Init   ft32f0xx_tim.o
    0x08001668   0x08001668   0x00000058   Code   RO         1030    .text.TIM_OC4Init   ft32f0xx_tim.o
    0x080016c0   0x080016c0   0x00000004   Code   RO         1036    .text.TIM_SetCompare1  ft32f0xx_tim.o
    0x080016c4   0x080016c4   0x00000068   Code   RO          990    .text.TIM_TimeBaseInit  ft32f0xx_tim.o
    0x0800172c   0x0800172c   0x00000060   Code   RO           33    .text.Tim16BaseInit  main.o
    0x0800178c   0x0800178c   0x00000054   Code   RO           29    .text.Tim1BaseInit  main.o
    0x080017e0   0x080017e0   0x000000a0   Code   RO           31    .text.Tim3BaseInit  main.o
    0x08001880   0x08001880   0x00000014   Code   RO           70    .text.get_adc_val   dev_adc.o
    0x08001894   0x08001894   0x000000f4   Code   RO           21    .text.main          main.o
    0x08001988   0x08001988   0x0000003c   Code   RO          223    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x080019c4   0x080019c4   0x00000078   Code   RO          157    .text.prvCopyDataToQueue  queue.o
    0x08001a3c   0x08001a3c   0x00000012   Code   RO          215    .text.prvDeleteTCB  tasks.o
    0x08001a4e   0x08001a4e   0x00000002   PAD
    0x08001a50   0x08001a50   0x00000040   Code   RO          237    .text.prvIdleTask   tasks.o
    0x08001a90   0x08001a90   0x00000040   Code   RO          359    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x08001ad0   0x08001ad0   0x00000020   Code   RO          217    .text.prvResetNextTaskUnblockTime  tasks.o
    0x08001af0   0x08001af0   0x00000012   Code   RO          321    .text.prvTaskExitError  port.o
    0x08001b02   0x08001b02   0x00000002   PAD
    0x08001b04   0x08001b04   0x00000100   Code   RO          357    .text.pvPortMalloc  heap_4.o
    0x08001c04   0x08001c04   0x00000020   Code   RO          319    .text.pxPortInitialiseStack  port.o
    0x08001c24   0x08001c24   0x00000008   Code   RO           37    .text.test1         main.o
    0x08001c2c   0x08001c2c   0x00000008   Code   RO          339    .text.ulSetInterruptMaskFromISR  port.o
    0x08001c34   0x08001c34   0x00000022   Code   RO          130    .text.uxListRemove  list.o
    0x08001c56   0x08001c56   0x00000004   Code   RO          439    .text.vApplicationMallocFailedHook  taskmanager.o
    0x08001c5a   0x08001c5a   0x00000004   Code   RO          441    .text.vApplicationStackOverflowHook  taskmanager.o
    0x08001c5e   0x08001c5e   0x00000002   PAD
    0x08001c60   0x08001c60   0x00000040   Code   RO          437    .text.vApplicationTickHook  taskmanager.o
    0x08001ca0   0x08001ca0   0x00000006   Code   RO          341    .text.vClearInterruptMaskFromISR  port.o
    0x08001ca6   0x08001ca6   0x00000014   Code   RO          122    .text.vListInitialise  list.o
    0x08001cba   0x08001cba   0x00000006   Code   RO          124    .text.vListInitialiseItem  list.o
    0x08001cc0   0x08001cc0   0x0000002e   Code   RO          128    .text.vListInsert   list.o
    0x08001cee   0x08001cee   0x00000018   Code   RO          126    .text.vListInsertEnd  list.o
    0x08001d06   0x08001d06   0x00000002   PAD
    0x08001d08   0x08001d08   0x00000014   Code   RO          335    .text.vPortEnterCritical  port.o
    0x08001d1c   0x08001d1c   0x00000010   Code   RO          337    .text.vPortExitCritical  port.o
    0x08001d2c   0x08001d2c   0x00000054   Code   RO          361    .text.vPortFree     heap_4.o
    0x08001d80   0x08001d80   0x00000028   Code   RO          327    .text.vPortSetupTimerInterrupt  port.o
    0x08001da8   0x08001da8   0x00000008   PAD
    0x08001db0   0x08001db0   0x00000034   Code   RO          329    .text.vPortStartFirstTask  port.o
    0x08001de4   0x08001de4   0x00000018   Code   RO          333    .text.vPortYield    port.o
    0x08001dfc   0x08001dfc   0x00000028   Code   RO          219    .text.vTaskDelay    tasks.o
    0x08001e24   0x08001e24   0x00000044   Code   RO          235    .text.vTaskStartScheduler  tasks.o
    0x08001e68   0x08001e68   0x00000010   Code   RO          221    .text.vTaskSuspendAll  tasks.o
    0x08001e78   0x08001e78   0x0000007c   Code   RO          257    .text.vTaskSwitchContext  tasks.o
    0x08001ef4   0x08001ef4   0x00000038   Code   RO          325    .text.xPortStartScheduler  port.o
    0x08001f2c   0x08001f2c   0x0000006c   Code   RO          161    .text.xQueueGenericSendFromISR  queue.o
    0x08001f98   0x08001f98   0x00000170   Code   RO          211    .text.xTaskCreate   tasks.o
    0x08002108   0x08002108   0x000000d0   Code   RO          241    .text.xTaskIncrementTick  tasks.o
    0x080021d8   0x080021d8   0x00000050   Code   RO          285    .text.xTaskPriorityDisinherit  tasks.o
    0x08002228   0x08002228   0x00000058   Code   RO          263    .text.xTaskRemoveFromEventList  tasks.o
    0x08002280   0x08002280   0x000000a8   Code   RO          225    .text.xTaskResumeAll  tasks.o
    0x08002328   0x08002328   0x00000000   Code   RO         1261    x$fpl$usenofp       fz_ps.l(usenofp.o)
    0x08002328   0x08002328   0x00000080   Data   RO         1221    .constdata          fz_ps.l(ddiv.o)
    0x080023a8   0x080023a8   0x00000010   Data   RO         1193    .rodata.AHBPrescTable  system_ft32f0xx.o
    0x080023b8   0x080023b8   0x00000058   Data   RO          102    .rodata.dev_gpio_handle  dev_gpio.o
    0x08002410   0x08002410   0x00000020   Data   RO         1437    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08002430, Size: 0x000013a8, Max: 0x00002000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08002430   0x00000004   Data   RW         1192    .data.SystemCoreClock  system_ft32f0xx.o
    0x20000004   0x08002434   0x00000004   Data   RW           40    .data.lsi_freq      main.o
    0x20000008   0x08002438   0x00000004   Data   RW          347    .data.uxCriticalNesting  port.o
    0x2000000c   0x0800243c   0x00000004   PAD
    0x20000010        -       0x00000060   Zero   RW         1301    .bss                c_p.l(libspace.o)
    0x20000070        -       0x0000000c   Zero   RW           12    .bss..L_MergedGlobals  ft32f0xx_it.o
    0x2000007c        -       0x00000004   Zero   RW           42    .bss..L_MergedGlobals  main.o
    0x20000080        -       0x00000078   Zero   RW          307    .bss..L_MergedGlobals  tasks.o
    0x200000f8        -       0x00000020   Zero   RW          372    .bss..L_MergedGlobals  heap_4.o
    0x20000118        -       0x00000078   Zero   RW          308    .bss..L_MergedGlobals.1  tasks.o
    0x20000190        -       0x00000008   Zero   RW           39    .bss.DMA_DualConvertedValue  main.o
    0x20000198        -       0x00000004   Zero   RW           58    .bss.TimingDelay    systick.o
    0x2000019c        -       0x00000c00   Zero   RW          371    .bss.ucHeap         heap_4.o
    0x20000d9c        -       0x00000004   Zero   RW          443    .bss.ulSystemTimeTickCount  taskmanager.o
    0x20000da0        -       0x00000004   Zero   RW          386    .bss.xHighProTaskQueue  highprotask.o
    0x20000da4        -       0x00000004   Zero   RW          423    .bss.xLowProTaskQueue  lowprotask.o
    0x20000da8        -       0x00000200   Zero   RW         1179    HEAP                startup_ft32f030x8.o
    0x20000fa8        -       0x00000400   Zero   RW         1178    STACK               startup_ft32f030x8.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       264         24          0          0          0       3412   dev_ad9877.o
        20          0          0          0          0       1799   dev_adc.o
        44          4         88          0          0       1832   dev_gpio.o
        16          4          0          0          0       2021   dev_pwm.o
       234         12          0          0          0       7223   ft32f0xx_adc.o
       232         36          0          0          0       3728   ft32f0xx_dma.o
       124          8          0          0          0       2743   ft32f0xx_exti.o
       178          0          0          0          0       4581   ft32f0xx_gpio.o
       126          4          0          0         12       2117   ft32f0xx_it.o
        60         20          0          0          0       1864   ft32f0xx_iwdg.o
        84         12          0          0          0       2402   ft32f0xx_misc.o
       120         20          0          0          0       9450   ft32f0xx_rcc.o
        36          4          0          0          0       2245   ft32f0xx_syscfg.o
       398         24          0          0          0      23930   ft32f0xx_tim.o
       404          8          0          0       3104       4047   heap_4.o
         0          0          0          0          4        783   highprotask.o
       130          0          0          0          0       1963   list.o
         0          0          0          0          4        469   lowprotask.o
      1046         86          0          4         12       7824   main.o
       378         36          0          4          0       2473   port.o
       228          0          0          0          0      14439   queue.o
       116         56        192          0       1536        668   startup_ft32f030x8.o
       316         32         16          4          0       2349   system_ft32f0xx.o
        96         20          0          0          4       2676   systick.o
       104         12          0          0          4       2306   taskmanager.o
      1334         60          0          0        240      20236   tasks.o

    ----------------------------------------------------------------------
      6132        502        328         12       4924     129580   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        44         20          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         68   aeabi_memset4.o
       346          0          0          0          0         92   aeabi_sdiv.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        64          0          0          0          0        108   rt_memclr.o
       186          0          0          0          0        144   rt_memcpy.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
      1096         26        128          0          0        112   ddiv.o
       108         10          0          0          0         72   dfixi.o
       584         26          0          0          0         84   dmul.o
         0          0          0          0          0          0   usenofp.o

    ----------------------------------------------------------------------
      2676         78        128          0         96       1228   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       880         16          0          0         96        960   c_p.l
      1788         62        128          0          0        268   fz_ps.l

    ----------------------------------------------------------------------
      2676         78        128          0         96       1228   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      8808        580        456         12       5020     129996   Grand Totals
      8808        580        456         12       5020     129996   ELF Image Totals
      8808        580        456         12          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 9264 (   9.05kB)
    Total RW  Size (RW Data + ZI Data)              5032 (   4.91kB)
    Total ROM Size (Code + RO Data + RW Data)       9276 (   9.06kB)

==============================================================================

